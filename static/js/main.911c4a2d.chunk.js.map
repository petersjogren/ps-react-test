{"version":3,"sources":["InitialState.js","redux/actions/index.js","components/BezierCurve.js","components/DraggableForeignObject.js","components/HTMLNode.js","components/InOutNode.js","components/GraphicsAreaPureHTML.js","components/CanvasDraw2D.js","components/TopBar.js","App.js","serviceWorker.js","index.js","redux/reducers/index.js"],"names":["InitialState","stressTest","someIndexes","Array","keys","someNodes","map","index","title","id","position","x","Math","cos","length","y","sin","width","inputPorts","name","type","outputPorts","someConnections","filter","a","from","nodeIndex","to","pureHTMLgraph","scale","activeDrags","deltaPosition","nodes","connections","textNode","height","text","imgNode","url","InitialStateStressTest","CHANGE_ZOOM","POSITION_NODE","POSITION_EVERY_OTHER_NODE","POSITION_TEXT_NODE","POSITION_IMG_NODE","TOGGLE_GRAPHICS","RESET_NORMAL","RESET_STRESS_TEST","BezierCurve","nextProps","this","props","curveColor","curveWidth","start","end","c1","c2","curve","fill","stroke","strokeWidth","d","React","Component","DraggableForeignObject","onDrag","xmlns","children","key","className","cx","cy","r","style","opacity","rowHeight","portWidth","inPortRelativePosition","node","inPortIndex","outPortRelativePosition","outPortIndex","InOutNode","handle","draggable","onDragStart","e","preventDefault","console","log","nativeEvent","offsetX","offsetY","onDragEnd","GraphicsAreaPureHTML","transform","top","left","fromNode","toNode","fromX","fromY","toX","toY","onSetImgNodePosition","borderStyle","userDrag","userSelect","MozUserSelect","WebkitUserDrag","WebkitUserSelect","msUserSelect","src","alt","onSetTextNodePosition","backgroundColor","htmlNode","HTMLNode","onSetPosition","connect","state","dispatch","positionEveryOtherNodeAction","positionNodeAction","positionTextNodeAction","positionImgNodeAction","window","jQuery","$","require","draw2d","CanvasDraw2D","renderCanvas","canvasId","canvas","Canvas","shape","Start","End","add","c","Connection","setRouter","layout","connection","SplineConnectionRouter","setSourceDecorator","decoration","BarDecorator","setTargetDecorator","DiamondDecorator","setSource","getOutputPort","setTarget","getInputPort","figure","analog","OpAmp","p1","basic","Polygon","p2","setBackgroundColor","setAlpha","setDimension","setCurrentSelection","Text","setText","lshape","Label","pie","diagram","Pie","setWidth","setData","postit","note","PostIt","installEditor","ui","LabelInplaceEditor","setColor","setPadding","label","createConnection","sourcePort","targetPort","con","FanConnectionRouter","installEditPolicy","policy","WheelZoomPolicy","on","emitter","event","click","ev","clientX","clientY","io","json","Writer","marshal","fig","attr","svgs","push","setSVG","SVGFigure","wrapperStyle","margin","Handle","Slider","value","dragging","restProps","prefixCls","overlay","visible","placement","showControls","min","max","onChange","tagName","filename","exportFile","JSON","stringify","App","display","justifyContent","onClick","resetStateNormal","resetStateStressTest","toggleGraphicsLibrary","onZoomChange","percent","Boolean","location","hostname","match","store","createStore","newState","deltaX","deltaY","action","update","$set","updateObject","newValue","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.911c4a2d.chunk.js","sourcesContent":["function InitialStateStressTest() {\n  var someIndexes = [...Array(202).keys()];\n  var someNodes = someIndexes.map(index => {\n    return {\n      title: \"Add\",\n      id: 1000 + index,\n      position: {\n        x: 0 + 500 * Math.cos(((2 * 3.14) / someIndexes.length) * index),\n        y: 400 + 500 * Math.sin(((2 * 3.14) / someIndexes.length) * index)\n      },\n      width: 120,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    };\n  });\n\n  var someConnections = someIndexes\n    .filter(a => a % 2 === 0)\n    .map(index => {\n      return {\n        from: {\n          nodeIndex: (index + someIndexes.length / 2 + 2) % someIndexes.length,\n          index: 0\n        },\n        to: {\n          nodeIndex: index,\n          index: 0\n        }\n      };\n    });\n\n  return {\n    pureHTMLgraph: true,\n    scale: 0.4,\n    stressTest: true,\n    activeDrags: 0,\n    deltaPosition: {\n      x: 0,\n      y: 0\n    },\n    nodes: [...someNodes],\n    connections: [...someConnections],\n    textNode: {\n      x: -500,\n      y: -350,\n      width: 200,\n      height: 400,\n      text: `Over hill, over dale, Thorough bush, thorough brier, Over park,\n            over pale, Thorough flood, thorough fire! I do wander everywhere,\n            Swifter than the moon's sphere; And I serve the Fairy Queen, To\n            dew her orbs upon the green; The cowslips tall her pensioners be;\n            In their gold coats spots you see; Those be rubies, fairy favours;\n            In those freckles live their savours; I must go seek some dewdrops\n            here, And hang a pearl in every cowslip's ear.`\n    },\n    imgNode: {\n      x: 50,\n      y: -350,\n      width: 400,\n      height: 300,\n      url: \"http://minerva-central.net/images/minerva-forward-m1.png\"\n    }\n  };\n}\n\nfunction InitialStateNormal() {\n  return {\n    pureHTMLgraph: true,\n    stressTest: false,\n    scale: 0.9,\n    activeDrags: 0,\n    deltaPosition: {\n      x: 0,\n      y: 0\n    },\n    nodes: [\n      {\n        title: \"Add\",\n        id: 213,\n        position: {\n          x: 186,\n          y: 7\n        },\n        width: 120,\n        inputPorts: [\n          { name: \"x\", type: \"int\" },\n          { name: \"y\", type: \"int\" }\n        ],\n        outputPorts: [{ name: \"sum\", type: \"int\" }]\n      },\n      {\n        title: \"Add\",\n        id: 214,\n        position: {\n          x: 421,\n          y: 123\n        },\n        width: 120,\n        inputPorts: [\n          { name: \"x\", type: \"int\" },\n          { name: \"y\", type: \"int\" }\n        ],\n        outputPorts: [{ name: \"sum\", type: \"int\" }]\n      },\n      {\n        title: \"Add\",\n        id: 215,\n        position: {\n          x: 85,\n          y: 200\n        },\n        width: 80,\n        inputPorts: [\n          { name: \"x\", type: \"int\" },\n          { name: \"y\", type: \"int\" }\n        ],\n        outputPorts: [{ name: \"sum\", type: \"int\" }]\n      },\n      {\n        title: \"Add\",\n        id: 216,\n        position: {\n          x: 86,\n          y: 106\n        },\n        width: 140,\n        inputPorts: [\n          { name: \"x\", type: \"int\" },\n          { name: \"y\", type: \"int\" }\n        ],\n        outputPorts: [{ name: \"sum\", type: \"int\" }]\n      },\n      {\n        title: \"Add\",\n        id: 217,\n        position: {\n          x: 421,\n          y: 7\n        },\n        width: 140,\n        inputPorts: [\n          { name: \"x\", type: \"int\" },\n          { name: \"y\", type: \"int\" }\n        ],\n        outputPorts: [{ name: \"sum\", type: \"int\" }]\n      }\n    ],\n    connections: [\n      {\n        from: {\n          nodeIndex: 0,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 0\n        }\n      },\n      {\n        from: {\n          nodeIndex: 2,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 1\n        }\n      },\n      {\n        from: {\n          nodeIndex: 3,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 0\n        }\n      },\n      {\n        from: {\n          nodeIndex: 3,\n          index: 0\n        },\n        to: {\n          nodeIndex: 4,\n          index: 0\n        }\n      }\n    ],\n    textNode: {\n      x: 500,\n      y: 350,\n      width: 200,\n      height: 400,\n      text: `Over hill, over dale, Thorough bush, thorough brier, Over park,\n            over pale, Thorough flood, thorough fire! I do wander everywhere,\n            Swifter than the moon's sphere; And I serve the Fairy Queen, To\n            dew her orbs upon the green; The cowslips tall her pensioners be;\n            In their gold coats spots you see; Those be rubies, fairy favours;\n            In those freckles live their savours; I must go seek some dewdrops\n            here, And hang a pearl in every cowslip's ear.`\n    },\n    imgNode: {\n      x: 50,\n      y: 350,\n      width: 400,\n      height: 300,\n      url: \"http://minerva-central.net/images/minerva-forward-m1.png\"\n    }\n  };\n}\n\nexport default function InitialState(stressTest) {\n  if (stressTest) {\n    return InitialStateStressTest();\n  } else {\n    return InitialStateNormal();\n  }\n}\n","export const CHANGE_ZOOM = \"CHANGE_ZOOM\";\nexport const POSITION_NODE = \"POSITION_NODE\";\nexport const POSITION_EVERY_OTHER_NODE = \"POSITION_EVERY_OTHER_NODE\";\nexport const POSITION_TEXT_NODE = \"POSITION_TEXT_NODE\";\nexport const POSITION_IMG_NODE = \"POSITION_IMG_NODE\";\nexport const TOGGLE_GRAPHICS = \"TOGGLE_GRAPHICS\";\nexport const RESET_NORMAL = \"RESET_NORMAL\";\nexport const RESET_STRESS_TEST = \"RESET_STRESS_TEST\";\n\nexport const zoomAction = percent => ({\n  type: CHANGE_ZOOM,\n  percent\n});\n\nexport const positionNodeAction = (index, position) => ({\n  type: POSITION_NODE,\n  index,\n  position\n});\n\nexport const positionEveryOtherNodeAction = (index, position) => ({\n  type: POSITION_EVERY_OTHER_NODE,\n  index,\n  position\n});\n\nexport const positionTextNodeAction = position => ({\n  type: POSITION_TEXT_NODE,\n  position\n});\n\nexport const positionImgNodeAction = position => ({\n  type: POSITION_IMG_NODE,\n  position\n});\n\nexport const toggleGraphicsLibraryAction = () => ({\n  type: TOGGLE_GRAPHICS\n});\n\nexport const resetStateNormalAction = () => ({\n  type: RESET_NORMAL\n});\n\nexport const resetStateStressTestAction = () => ({\n  type: RESET_STRESS_TEST\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class BezierCurve extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const { curveColor, curveWidth, start, end, c1, c2 } = this.props;\n    return (\n      nextProps.curveColor !== curveColor ||\n      nextProps.curveWidth !== curveWidth ||\n      nextProps.start.x !== start.x ||\n      nextProps.start.y !== start.y ||\n      nextProps.end.x !== end.x ||\n      nextProps.end.y !== end.y ||\n      nextProps.c1.x !== c1.x ||\n      nextProps.c1.y !== c1.y ||\n      nextProps.c2.x !== c2.x ||\n      nextProps.c2.y !== c2.y\n    );\n  }\n\n  render() {\n    const { curveColor, curveWidth, start, end, c1, c2 } = this.props;\n    const curve = `M${start.x},${start.y} C${c1.x},${c1.y} ${c2.x},${c2.y} ${end.x},${end.y}`;\n\n    return (\n      <path\n        fill=\"none\"\n        stroke={curveColor}\n        strokeWidth={curveWidth}\n        d={curve}\n      />\n    );\n  }\n}\n\nBezierCurve.propTypes = {\n  curveColor: PropTypes.string.isRequired,\n  curveWidth: PropTypes.number.isRequired,\n  start: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  end: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  c1: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  c2: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\nimport PropTypes from \"prop-types\";\n\nfunction DraggableForeignObject(props) {\n  return (\n    <Draggable scale={props.scale} onDrag={props.onDrag} position={props}>\n      <foreignObject x={0} y={0} width={props.width} height={props.height}>\n        <div xmlns=\"http://www.w3.org/1999/xhtml\">{props.children}</div>\n      </foreignObject>\n    </Draggable>\n  );\n}\n\nDraggableForeignObject.propTypes = {\n  scale: PropTypes.number.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  onDrag: PropTypes.func.isRequired,\n  children: PropTypes.any.isRequired\n};\n\nexport default DraggableForeignObject;\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\n\nexport default function(props) {\n  return (\n    <Draggable\n      key={props.key}\n      scale={props.scale}\n      position={props.position}\n      onDrag={props.onDrag}\n    >\n      <div className=\"box no-cursor\">\n        <svg className=\"graphics inport\">\n          <circle\n            className=\"circle\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            cx=\"15\"\n            cy=\"15\"\n            r=\"15\"\n            style={{\n              stroke: \"#000000\",\n              strokeWidth: 3,\n              fill: \"#66ff66\"\n            }}\n            opacity=\".7\"\n          />\n        </svg>\n\n        <div className=\"drag\">{props.title}</div>\n        <h3>{/* <InlineMath>\\int_0^\\infty x^2 dx</InlineMath> */}</h3>\n\n        <svg className=\"graphics outport\" width=\"30\" height=\"30\">\n          <circle\n            className=\"circle\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            cx=\"15\"\n            cy=\"15\"\n            r=\"15\"\n            style={{\n              stroke: \"#000000\",\n              strokeWidth: 3,\n              fill: \"#ff0000\"\n            }}\n            opacity=\".7\"\n          />\n        </svg>\n      </div>\n    </Draggable>\n  );\n}\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\nimport \"./InOutNode.css\";\n\nvar rowHeight = 16;\nvar portWidth = 15;\n\nexport function inPortRelativePosition(node, inPortIndex) {\n  return {\n    x: portWidth / 2,\n    y: rowHeight + rowHeight * inPortIndex + rowHeight / 2\n  };\n}\n\nexport function outPortRelativePosition(node, outPortIndex) {\n  return {\n    x: node.width - portWidth / 2,\n    y:\n      rowHeight +\n      node.inputPorts.length * rowHeight +\n      outPortIndex * rowHeight +\n      rowHeight / 2\n  };\n}\n\nexport class InOutNode extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const { scale, position } = this.props;\n    return (\n      nextProps.scale !== scale ||\n      nextProps.position.x !== position.x ||\n      nextProps.position.y !== position.y\n    );\n  }\n\n  render() {\n    return (\n      <Draggable\n        scale={this.props.scale}\n        position={this.props.position}\n        onDrag={this.props.onDrag}\n        handle=\"header\"\n      >\n        <div\n          className=\"node noselect\"\n          style={{ height: \"60px\", width: `${this.props.width}px` }}\n        >\n          <div className=\"main_area\">\n            <div className=\"addin noselect\">+</div>\n            <header className=\"nodetext noselect\">Add</header>\n            <div className=\"addout noselect\">+</div>\n          </div>\n          <div className=\"port_area\">\n            <div className=\"port noselect\">→</div>\n            <header className=\"porttext in noselect\">x</header>\n            <div className=\"noport noselect\"></div>\n          </div>\n          <div className=\"port_area in\">\n            <div className=\"port noselect\" draggable={true}>\n              →\n            </div>\n            <header className=\"porttext in noselect\">y</header>\n            <div className=\"noport noselect\"></div>\n          </div>\n          <div className=\"port_area out\">\n            <div className=\"noport noselect\"></div>\n            <header className=\"porttext out noselect\">sum</header>\n            <div\n              className=\"port noselect\"\n              draggable={true}\n              onDragStart={e => {\n                e.preventDefault();\n                console.log(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n                //e.dataTransfer.setData(\"URL\", \"http://www.sf.se\");\n                //e.dataTransfer.effectAllowed = \"link\";\n              }}\n              onDrag={e => {\n                console.log(\"e.nativeEvent.offsetX, e.nativeEvent.offsetY\");\n              }}\n              onDragEnd={e => {\n                console.log(\"e.nativeEvent.offsetX, e.nativeEvent.offsetY\");\n              }}\n            >\n              →\n            </div>\n          </div>\n        </div>\n      </Draggable>\n    );\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { InlineMath } from \"react-katex\";\nimport BezierCurve from \"./BezierCurve\";\nimport DraggableForeignObject from \"./DraggableForeignObject\";\nimport {\n  positionNodeAction,\n  positionEveryOtherNodeAction,\n  positionTextNodeAction,\n  positionImgNodeAction\n} from \"../redux/actions\";\nimport HTMLNode from \"./HTMLNode\";\nimport {\n  InOutNode,\n  inPortRelativePosition,\n  outPortRelativePosition\n} from \"./InOutNode\";\n\nclass GraphicsAreaPureHTML extends React.Component {\n  render() {\n    return (\n      <div\n        className=\"graphicsarea\"\n        style={{ transform: \"scale(\" + this.props.scale + \")\" }}\n      >\n        <svg\n          className=\"arrowsvg\"\n          style={{ position: \"relative\", top: \"0px\", left: \"0px\" }}\n        >\n          {this.props.connections.map((key, index) => {\n            var fromNode = this.props.nodes[key.from.nodeIndex];\n            var toNode = this.props.nodes[key.to.nodeIndex];\n            var fromX =\n              fromNode.position.x +\n              outPortRelativePosition(fromNode, key.from.index).x;\n            var fromY =\n              fromNode.position.y +\n              outPortRelativePosition(fromNode, key.from.index).y;\n            var toX =\n              toNode.position.x +\n              inPortRelativePosition(toNode, key.to.index).x;\n            var toY =\n              toNode.position.y +\n              inPortRelativePosition(toNode, key.to.index).y;\n            return (\n              <BezierCurve\n                key={index}\n                start={{ x: fromX, y: fromY }}\n                end={{ x: toX, y: toY }}\n                c1={{\n                  x: fromX + (fromNode.width * 3) / 4,\n                  y: fromY\n                }}\n                c2={{\n                  x: toX - (toNode.width * 3) / 4,\n                  y: toY\n                }}\n                curveColor=\"black\"\n                curveWidth={2}\n              />\n            );\n          })}\n\n          <DraggableForeignObject\n            scale={this.props.scale}\n            x={this.props.imgNode.x}\n            y={this.props.imgNode.y}\n            width={this.props.imgNode.width}\n            height={this.props.imgNode.height}\n            onDrag={(e, position) => this.props.onSetImgNodePosition(position)}\n          >\n            <img\n              style={{\n                width: \"50%\",\n                height: \"50%\",\n                borderStyle: \"solid\",\n                userDrag: \"none\",\n                userSelect: \"none\",\n                MozUserSelect: \"none\",\n                WebkitUserDrag: \"none\",\n                WebkitUserSelect: \"none\",\n                msUserSelect: \"none\"\n              }}\n              src={this.props.imgNode.url}\n              alt=\"Something nice\"\n            />\n          </DraggableForeignObject>\n\n          <DraggableForeignObject\n            scale={this.props.scale}\n            x={this.props.textNode.x}\n            y={this.props.textNode.y}\n            width={this.props.textNode.width}\n            height={this.props.textNode.height}\n            onDrag={(e, position) => this.props.onSetTextNodePosition(position)}\n          >\n            <div style={{ backgroundColor: \"#eeb\", borderStyle: \"solid\" }}>\n              {this.props.textNode.text}\n            </div>\n          </DraggableForeignObject>\n        </svg>\n\n        {this.props.nodes.map((key, index) =>\n          key.htmlNode ? (\n            <HTMLNode\n              title={key.title}\n              key={index}\n              scale={this.props.scale}\n              position={this.props.nodes[index].position}\n              onDrag={(e, position) => {\n                this.props.onSetPosition(index, position, false);\n              }}\n            />\n          ) : (\n            <InOutNode\n              title={key.title}\n              key={index}\n              scale={this.props.scale}\n              position={this.props.nodes[index].position}\n              width={this.props.nodes[index].width}\n              onDrag={(e, position) => {\n                this.props.onSetPosition(\n                  index,\n                  position,\n                  this.props.stressTest\n                );\n              }}\n            />\n          )\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  nodes: state.nodes,\n  connections: state.connections,\n  scale: state.scale,\n  textNode: state.textNode,\n  imgNode: state.imgNode,\n  stressTest: state.stressTest\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetPosition: (index, position, stressTest) => {\n    if (stressTest) {\n      dispatch(positionEveryOtherNodeAction(index, position));\n    } else {\n      dispatch(positionNodeAction(index, position));\n    }\n  },\n  onSetTextNodePosition: position => dispatch(positionTextNodeAction(position)),\n  onSetImgNodePosition: position => dispatch(positionImgNodeAction(position))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GraphicsAreaPureHTML);\n","import React from \"react\";\nimport $ from \"jquery\";\nwindow.jQuery = window.$ = $;\nrequire(\"jqueryui\");\nvar draw2d = require(\"draw2d\");\n\nexport default class CanvasDraw2D extends React.Component {\n  componentDidMount() {\n    this.renderCanvas(\"mycanvasdraw2d\");\n  }\n\n  renderCanvas(canvasId) {\n    var canvas = new draw2d.Canvas(canvasId);\n\n    // create and add two nodes which contains Ports (In and OUT)\n    //\n    var start = new draw2d.shape.node.Start();\n    var end = new draw2d.shape.node.End();\n\n    // ...add it to the canvas\n    canvas.add(start, 50, 50);\n    canvas.add(new draw2d.shape.node.Start(), 50, 250);\n    canvas.add(end, 230, 150);\n\n    // Create a Connection and connect the Start and End node\n    //\n    var c = new draw2d.Connection();\n    c.setRouter(new draw2d.layout.connection.SplineConnectionRouter());\n\n    // Set the endpoint decorations for the connection\n    //\n    c.setSourceDecorator(new draw2d.decoration.connection.BarDecorator());\n    c.setTargetDecorator(new draw2d.decoration.connection.DiamondDecorator());\n    // Connect the endpoints with the start and end port\n    //\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n\n    // and finally add the connection to the canvas\n    canvas.add(c);\n\n    var figure = new draw2d.shape.analog.OpAmp();\n    canvas.add(figure, 350, 110);\n\n    var p1 = new draw2d.shape.basic.Polygon();\n    var p2 = new draw2d.shape.basic.Polygon();\n\n    canvas.add(p1, 450, 150);\n    canvas.add(p2, 450, 200);\n\n    p2.setBackgroundColor(\"#f0f000\");\n    p2.setAlpha(0.7);\n    p2.setDimension(100, 60);\n\n    canvas.setCurrentSelection(p2);\n\n    var shape = new draw2d.shape.basic.Text();\n\n    shape.setText(\"This is a simple text with some loooooong word in.\");\n    shape.setBackgroundColor(\"#f0f000\");\n\n    canvas.add(shape, 550, 10);\n\n    var lshape = new draw2d.shape.basic.Label();\n\n    lshape.setText(\"This is a label.\");\n    lshape.setBackgroundColor(\"#f0f000\");\n\n    canvas.add(lshape, 350, 70);\n\n    var pie = new draw2d.shape.diagram.Pie(80, 80);\n    pie.setWidth(100);\n    pie.setData([30, 60, 122, 4]);\n    canvas.add(pie, 600, 160);\n\n    var postit = new draw2d.shape.note.PostIt();\n    postit.installEditor(new draw2d.ui.LabelInplaceEditor());\n    postit.setColor(\"#000000\");\n    postit.setPadding(20);\n\n    postit.setText(\"This is simple sticky note\\nDouble click to edit.\");\n\n    canvas.add(postit, 700, 10);\n\n    var label = new draw2d.shape.basic.Label();\n\n    label.installEditor(new draw2d.ui.LabelInplaceEditor());\n    label.setText(\"Double click me to edit\");\n\n    canvas.add(label, 50, 10);\n\n    // Override the default connection type. This is used during drag&drop operations of ports.\n    //\n    draw2d.Connection.createConnection = function(sourcePort, targetPort) {\n      // return my special kind of connection\n      var con = new draw2d.Connection();\n      con.setRouter(new draw2d.layout.connection.FanConnectionRouter());\n      return con;\n    };\n\n    // create and add two nodes which contains Ports (In and OUT)\n    //\n    start = new draw2d.shape.node.Start();\n    end = new draw2d.shape.node.End();\n\n    // ...add it to the canvas\n    canvas.add(start, 50, 250);\n    canvas.add(end, 230, 280);\n\n    // first Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // second Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // third Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // fourth Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // Zoom mose wheel support\n    canvas.installEditPolicy(new draw2d.policy.canvas.WheelZoomPolicy());\n    shape = new draw2d.shape.basic.Text({\n      text: \"Use the mouse wheel + SHIFT to zoom\"\n    });\n\n    canvas.add(shape, 400, 300);\n\n    // Register some callbacks\n    canvas.on(\"select\", function(emitter, event) {\n      if (event.figure !== null) {\n        console.log(\"figure selected\");\n      } else {\n        console.log(\"selection cleared\");\n      }\n    });\n\n    $(\"#mycanvasdraw2d\").click(function(ev) {\n      console.log(\"Mouse click:\" + ev.clientX + \",\" + ev.clientY);\n    });\n\n    // Log state to console\n    var writer = new draw2d.io.json.Writer();\n    writer.marshal(canvas, json => console.log(json));\n\n    // Custom shape\n    {\n      class CustomFigure extends draw2d.SVGFigure {\n        constructor(attr) {\n          super(attr);\n\n          this.index = 0;\n          this.svgs = [];\n\n          this.svgs.push(\n            '<svg xmlns=\"http://www.w3.org/2000/svg\">' +\n              '  <path stroke=\"#000\" fill=\"#FFF\" stroke-miterlimit=\"4\" d=\"m0,49.842l0,-49.742l49.982,0l0,49.742l-49.982,0z\" id=\"polygon3873\"/>' +\n              '  <text text-anchor=\"middle\" fill=\"#000000\" font-family=\"Sans-serif\" x=\"24.81563\" y=\"26.50938\" xml:space=\"preserve\" font-size=\"8px\" id=\"svg_1\">Click me</text>' +\n              \"</svg>\"\n          );\n\n          this.svgs.push(\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">' +\n              '<rect x=\"14\" y=\"23\" width=\"20\" height=\"20\" fill=\"lime\" stroke=\"black\" />' +\n              \"</svg>\"\n          );\n\n          this.on(\n            \"click\",\n            function() {\n              this.index = ++this.index % this.svgs.length;\n              this.setSVG(this.svgs[this.index], 500);\n            },\n            this\n          );\n        }\n\n        getSVG() {\n          return this.svgs[0];\n        }\n      }\n\n      var fig = new CustomFigure();\n\n      canvas.add(fig, 100, 100);\n    }\n  }\n\n  render() {\n    return <div id=\"mycanvasdraw2d\"></div>;\n  }\n}\n\nexport class GraphicsAreaDraw2D extends React.Component {\n  render() {\n    return (\n      <div className=\"graphicsarea\" style={{ transform: \"scale(1)\" }}>\n        <CanvasDraw2D className=\"canvas2darea\" />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport DownloadLink from \"react-download-link\";\nimport \"rc-slider/assets/index.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\n\nimport Tooltip from \"rc-tooltip\";\nimport Slider from \"rc-slider\";\nimport { connect } from \"react-redux\";\n\nconst wrapperStyle = { width: 400, margin: 50 };\n\nconst Handle = Slider.Handle;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst TopBar = props => {\n  if (props.showControls) {\n    return (\n      <div className=\"topbar\">\n        <div className=\"zoom\" style={wrapperStyle}>\n          <Slider\n            min={20}\n            max={150}\n            value={props.scale}\n            handle={handle}\n            onChange={props.onChange}\n          />\n        </div>\n        <DownloadLink\n          label=\"Save state to disk\"\n          className=\"savestate\"\n          tagName=\"h2\"\n          filename=\"state.txt\"\n          exportFile={() => JSON.stringify(props.state, null, 2)}\n        >\n          <h1>Save sta2te to disk</h1>\n        </DownloadLink>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"topbar\">\n        <DownloadLink\n          label=\"Save state to disk\"\n          className=\"savestate\"\n          tagName=\"h2\"\n          filename=\"state.txt\"\n          exportFile={() => JSON.stringify(props.state, null, 2)}\n        >\n          <h1>Save state to disk</h1>\n        </DownloadLink>\n      </div>\n    );\n  }\n};\n\nexport default connect()(TopBar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\n\nimport GraphicsAreaPureHTML from \"./components/GraphicsAreaPureHTML\";\nimport GraphicsAreaDraw2D from \"./components/CanvasDraw2D\";\n\nimport \"katex/dist/katex.min.css\";\n\nimport TopBar from \"./components/TopBar\";\nimport {\n  zoomAction,\n  toggleGraphicsLibraryAction,\n  resetStateNormalAction,\n  resetStateStressTestAction\n} from \"./redux/actions\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n          <button onClick={this.props.resetStateNormal}>\n            <h2>Reset state to some nodes</h2>\n          </button>\n          <button onClick={this.props.resetStateStressTest}>\n            <h2>Reset state to stress test</h2>\n          </button>\n          <button onClick={this.props.toggleGraphicsLibrary}>\n            <h2>Toggle graphics library (Pure HTML / Draw2D)</h2>\n          </button>\n        </div>\n        <TopBar\n          className=\"topbar\"\n          showControls={this.props.state.pureHTMLgraph}\n          scale={this.props.state.scale * 100}\n          state={this.props.state}\n          onChange={this.props.onZoomChange}\n        />\n\n        {this.props.state.pureHTMLgraph ? (\n          <GraphicsAreaPureHTML />\n        ) : (\n          <GraphicsAreaDraw2D className=\"graphicsarea\" />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onZoomChange: scale => dispatch(zoomAction(scale)),\n  toggleGraphicsLibrary: () => dispatch(toggleGraphicsLibraryAction()),\n  resetStateNormal: () => dispatch(resetStateNormalAction()),\n  resetStateStressTest: () => dispatch(resetStateStressTestAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport graphEditorReducer from \"./redux/reducers\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  graphEditorReducer,\n  composeWithDevTools()\n\n  // other store enhancers if any\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import InitialState from \"../../InitialState\";\nimport update from \"immutability-helper\";\nimport {\n  CHANGE_ZOOM,\n  POSITION_NODE,\n  POSITION_EVERY_OTHER_NODE,\n  POSITION_TEXT_NODE,\n  POSITION_IMG_NODE,\n  TOGGLE_GRAPHICS,\n  RESET_NORMAL,\n  RESET_STRESS_TEST\n} from \"../actions\";\n\nexport default function graphEditorReducer(\n  state = InitialState(false),\n  action\n) {\n  //  console.log(\"graphEditorReducer\", action);\n  var newState;\n  //  console.log(\"state before \", state);\n  var deltaX;\n  var deltaY;\n  switch (action.type) {\n    case CHANGE_ZOOM:\n      newState = update(state, { scale: { $set: action.percent / 100 } });\n      break;\n    case POSITION_NODE:\n      deltaX = action.position.x - state.nodes[action.index].position.x;\n      deltaY = action.position.y - state.nodes[action.index].position.y;\n      newState = update(state, {\n        nodes: {\n          [action.index]: {\n            position: {\n              x: { $set: action.position.x },\n              y: { $set: action.position.y }\n            }\n          }\n        }\n      });\n\n      break;\n    case POSITION_EVERY_OTHER_NODE:\n      deltaX = action.position.x - state.nodes[action.index].position.x;\n      deltaY = action.position.y - state.nodes[action.index].position.y;\n      var updateObject = {};\n      state.nodes.map((value, index) => {\n        if (index % 2 === 0) {\n          updateObject[index] = {\n            position: {\n              x: { $set: state.nodes[index].position.x + deltaX },\n              y: { $set: state.nodes[index].position.y + deltaY }\n            }\n          };\n        }\n        return null;\n      });\n      newState = update(state, {\n        nodes: {\n          [action.index]: {\n            position: {\n              x: { $set: action.position.x },\n              y: { $set: action.position.y }\n            }\n          },\n          ...updateObject\n        }\n      });\n      break;\n    case POSITION_TEXT_NODE:\n      newState = update(state, {\n        textNode: {\n          x: { $set: action.position.x },\n          y: { $set: action.position.y }\n        }\n      });\n      break;\n    case POSITION_IMG_NODE:\n      newState = update(state, {\n        imgNode: {\n          x: { $set: action.position.x },\n          y: { $set: action.position.y }\n        }\n      });\n      break;\n    case TOGGLE_GRAPHICS:\n      var newValue = state.pureHTMLgraph ? false : true;\n      newState = update(state, {\n        pureHTMLgraph: { $set: newValue }\n      });\n      break;\n    case RESET_NORMAL:\n      newState = InitialState(false);\n      break;\n    case RESET_STRESS_TEST:\n      newState = InitialState(true);\n      break;\n\n    default:\n      console.log(\"default \", state);\n      newState = state;\n      break;\n  }\n\n  //  console.log(\"newState  \", newState);\n  return newState;\n}\n"],"sourceRoot":""}