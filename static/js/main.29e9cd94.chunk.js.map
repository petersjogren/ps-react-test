{"version":3,"sources":["components/BezierComponent.js","components/Curve.js","components/DraggableForeignObject.js","components/GraphicsAreaPureHTML.js","components/CanvasDraw2D.js","components/TopBar.js","App.js","serviceWorker.js","index.js"],"names":["interp","a","b","x","Curve","nextProps","this","props","curveColor","curveWidth","value","y","sx","sy","ex","ey","cx1","cy1","cx2","cy2","curve","fill","stroke","strokeWidth","d","Math","round","xFrom","xTo","yFrom","yTo","React","Component","DraggableForeignObject","scale","width","height","xmlns","children","GraphicsAreaPureHTML","dragHandlers","onStart","onStop","className","style","transform","position","top","left","connections","map","key","index","fromNode","nodes","from","nodeIndex","toNode","to","src","alt","onDrag","e","onSetPostition","cx","cy","r","opacity","title","window","jQuery","$","require","draw2d","CanvasDraw2D","renderCanvas","canvasId","canvas","Canvas","start","shape","node","Start","end","End","add","c","Connection","setRouter","layout","connection","SplineConnectionRouter","setSourceDecorator","decoration","BarDecorator","setTargetDecorator","DiamondDecorator","setSource","getOutputPort","setTarget","getInputPort","figure","analog","OpAmp","p1","basic","Polygon","p2","setBackgroundColor","setAlpha","setDimension","setCurrentSelection","Text","setText","lshape","Label","pie","diagram","Pie","setWidth","setData","postit","note","PostIt","installEditor","ui","LabelInplaceEditor","setColor","setPadding","label","createConnection","sourcePort","targetPort","con","FanConnectionRouter","installEditPolicy","policy","WheelZoomPolicy","text","on","emitter","event","console","log","click","ev","clientX","clientY","io","json","Writer","marshal","fig","attr","svgs","push","length","setSVG","SVGFigure","id","wrapperStyle","margin","Handle","Slider","handle","dragging","restProps","prefixCls","overlay","visible","placement","TopBar","showControls","min","max","defaultValue","defaultScale","onChange","tagName","filename","exportFile","JSON","stringify","state","App","pureHTMLgraph","activeDrags","deltaPosition","inputPorts","name","type","outputPorts","knobValue","setState","setPositionOnNode","newState","onControlledDragUtil","radius","onClick","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29e9cd94.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction interp(a, b, x) {\n  return a * (1 - x) + b * x;\n}\n\nexport default class BezierComponent extends React.Component {\n  x = value => Math.round(interp(this.props.xFrom, this.props.xTo, value));\n  y = value => Math.round(interp(this.props.yFrom, this.props.yTo, value));\n  shouldComponentUpdate(nextProps) {\n    const { xFrom, yFrom, xTo, yTo } = this.props;\n    return (\n      nextProps.xFrom !== xFrom ||\n      nextProps.yFrom !== yFrom ||\n      nextProps.xTo !== xTo ||\n      nextProps.yTo !== yTo\n    );\n  }\n}\n","import React from \"react\";\nimport BezierComponent from \"./BezierComponent\";\n\nexport default class Curve extends BezierComponent {\n  shouldComponentUpdate(nextProps) {\n    if (super.shouldComponentUpdate(nextProps)) return true;\n    const { curveColor, curveWidth, value } = this.props;\n    return (\n      nextProps.curveColor !== curveColor ||\n      nextProps.curveWidth !== curveWidth ||\n      nextProps.value !== value\n    );\n  }\n\n  render() {\n    const { curveColor, curveWidth, value } = this.props;\n    const { x, y } = this.props;\n    const sx = x[0];\n    const sy = y[0];\n    const ex = x[1];\n    const ey = y[1];\n    const cx1 = value[0];\n    const cy1 = value[1];\n    const cx2 = value[2];\n    const cy2 = value[3];\n    const curve = `M${sx},${sy} C${cx1},${cy1} ${cx2},${cy2} ${ex},${ey}`;\n\n    return (\n      <path\n        fill=\"none\"\n        stroke={curveColor}\n        strokeWidth={curveWidth}\n        d={curve}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\n\nfunction DraggableForeignObject(props) {\n  return (\n    <Draggable scale={props.scale}>\n      <foreignObject\n        x={props.x}\n        y={props.y}\n        width={props.width}\n        height={props.height}\n      >\n        <div xmlns=\"http://www.w3.org/1999/xhtml\">{props.children}</div>\n      </foreignObject>\n    </Draggable>\n  );\n}\n\nexport default DraggableForeignObject;\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\nimport { InlineMath } from \"react-katex\";\nimport Curve from \"./Curve\";\nimport DraggableForeignObject from \"./DraggableForeignObject\";\n\nclass GraphicsAreaPureHTML extends React.Component {\n  render() {\n    const dragHandlers = { onStart: this.onStart, onStop: this.onStop };\n    return (\n      <div\n        className=\"graphicsarea\"\n        style={{ transform: \"scale(\" + this.props.scale + \")\" }}\n      >\n        <svg\n          className=\"arrowsvg\"\n          style={{ position: \"relative\", top: \"0px\", left: \"0px\" }}\n        >\n          {this.props.connections.map((key, index) => {\n            var fromNode = this.props.nodes[key.from.nodeIndex];\n            var toNode = this.props.nodes[key.to.nodeIndex];\n            return (\n              <Curve\n                x={[fromNode.position.x, toNode.position.x]}\n                y={[fromNode.position.y, toNode.position.y]}\n                value={[\n                  (fromNode.position.x + toNode.position.x) / 2,\n                  fromNode.position.y,\n                  (fromNode.position.x + toNode.position.x) / 2,\n                  toNode.position.y\n                ]}\n                curveColor=\"blue\"\n                curveWidth=\"7\"\n              />\n            );\n          })}\n\n          <DraggableForeignObject\n            scale={this.props.scale}\n            x=\"0\"\n            y=\"320\"\n            width=\"500\"\n            height=\"200\"\n          >\n            <img\n              style={{\n                width: \"50%\",\n                height: \"50%\",\n                \"border-style\": \"solid\",\n                \"user-drag\": \"none\",\n                \"user-select\": \"none\",\n                \"-moz-user-select\": \"none\",\n                \"-webkit-user-drag\": \"none\",\n                \"-webkit-user-select\": \"none\",\n                \"-ms-user-select\": \"none\"\n              }}\n              src=\"http://minerva-central.net/images/minerva-forward-m1.png\"\n              alt=\"Something nice\"\n            />\n          </DraggableForeignObject>\n\n          <DraggableForeignObject\n            scale={this.props.scale}\n            x=\"400\"\n            y=\"350\"\n            width=\"200\"\n            height=\"400\"\n          >\n            <div\n              style={{ \"background-color\": \"#eeb\", \"border-style\": \"solid\" }}\n            >\n              Over hill, over dale, Thorough bush, thorough brier, Over park,\n              over pale, Thorough flood, thorough fire! I do wander everywhere,\n              Swifter than the moon's sphere; And I serve the Fairy Queen, To\n              dew her orbs upon the green; The cowslips tall her pensioners be;\n              In their gold coats spots you see; Those be rubies, fairy favours;\n              In those freckles live their savours; I must go seek some dewdrops\n              here, And hang a pearl in every cowslip's ear.\n            </div>\n          </DraggableForeignObject>\n        </svg>\n\n        {this.props.nodes.map((key, index) => (\n          <Draggable\n            scale={this.props.scale}\n            position={this.props.nodes[index].position}\n            {...dragHandlers}\n            onDrag={(e, position) => this.props.onSetPostition(index, position)}\n          >\n            <div className=\"box no-cursor\">\n              <svg className=\"graphics inport\">\n                <circle\n                  className=\"circle\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  cx=\"15\"\n                  cy=\"15\"\n                  r=\"15\"\n                  style={{\n                    stroke: \"#000000\",\n                    \"stroke-width\": 3,\n                    fill: \"#66ff66\"\n                  }}\n                  opacity=\".7\"\n                />\n              </svg>\n\n              <div className=\"drag\">{key.title}</div>\n              <h3>\n                <InlineMath>\\int_0^\\infty x^2 dx</InlineMath>\n              </h3>\n\n              <svg className=\"graphics outport\" width=\"30\" height=\"30\">\n                <circle\n                  className=\"circle\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  cx=\"15\"\n                  cy=\"15\"\n                  r=\"15\"\n                  style={{\n                    stroke: \"#000000\",\n                    \"stroke-width\": 3,\n                    fill: \"#ff0000\"\n                  }}\n                  opacity=\".7\"\n                />\n              </svg>\n            </div>\n          </Draggable>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default GraphicsAreaPureHTML;\n","import React from \"react\";\nimport $ from \"jquery\";\nwindow.jQuery = window.$ = $;\nrequire(\"jqueryui\");\nvar draw2d = require(\"draw2d\");\n\nexport default class CanvasDraw2D extends React.Component {\n  componentDidMount() {\n    this.renderCanvas(\"mycanvasdraw2d\");\n  }\n\n  renderCanvas(canvasId) {\n    var canvas = new draw2d.Canvas(canvasId);\n\n    // create and add two nodes which contains Ports (In and OUT)\n    //\n    var start = new draw2d.shape.node.Start();\n    var end = new draw2d.shape.node.End();\n\n    // ...add it to the canvas\n    canvas.add(start, 50, 50);\n    canvas.add(new draw2d.shape.node.Start(), 50, 250);\n    canvas.add(end, 230, 150);\n\n    // Create a Connection and connect the Start and End node\n    //\n    var c = new draw2d.Connection();\n    c.setRouter(new draw2d.layout.connection.SplineConnectionRouter());\n\n    // Set the endpoint decorations for the connection\n    //\n    c.setSourceDecorator(new draw2d.decoration.connection.BarDecorator());\n    c.setTargetDecorator(new draw2d.decoration.connection.DiamondDecorator());\n    // Connect the endpoints with the start and end port\n    //\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n\n    // and finally add the connection to the canvas\n    canvas.add(c);\n\n    var figure = new draw2d.shape.analog.OpAmp();\n    canvas.add(figure, 350, 110);\n\n    var p1 = new draw2d.shape.basic.Polygon();\n    var p2 = new draw2d.shape.basic.Polygon();\n\n    canvas.add(p1, 450, 150);\n    canvas.add(p2, 450, 200);\n\n    p2.setBackgroundColor(\"#f0f000\");\n    p2.setAlpha(0.7);\n    p2.setDimension(100, 60);\n\n    canvas.setCurrentSelection(p2);\n\n    var shape = new draw2d.shape.basic.Text();\n\n    shape.setText(\"This is a simple text with some loooooong word in.\");\n    shape.setBackgroundColor(\"#f0f000\");\n\n    canvas.add(shape, 550, 10);\n\n    var lshape = new draw2d.shape.basic.Label();\n\n    lshape.setText(\"This is a label.\");\n    lshape.setBackgroundColor(\"#f0f000\");\n\n    canvas.add(lshape, 350, 70);\n\n    var pie = new draw2d.shape.diagram.Pie(80, 80);\n    pie.setWidth(100);\n    pie.setData([30, 60, 122, 4]);\n    canvas.add(pie, 600, 160);\n\n    var postit = new draw2d.shape.note.PostIt();\n    postit.installEditor(new draw2d.ui.LabelInplaceEditor());\n    postit.setColor(\"#000000\");\n    postit.setPadding(20);\n\n    postit.setText(\"This is simple sticky note\\nDouble click to edit.\");\n\n    canvas.add(postit, 700, 10);\n\n    {\n      var label = new draw2d.shape.basic.Label();\n\n      label.installEditor(new draw2d.ui.LabelInplaceEditor());\n      label.setText(\"Double click me to edit\");\n\n      canvas.add(label, 50, 10);\n    }\n\n    {\n      // Override the default connection type. This is used during drag&drop operations of ports.\n      //\n      draw2d.Connection.createConnection = function(sourcePort, targetPort) {\n        // return my special kind of connection\n        var con = new draw2d.Connection();\n        con.setRouter(new draw2d.layout.connection.FanConnectionRouter());\n        return con;\n      };\n\n      // create and add two nodes which contains Ports (In and OUT)\n      //\n      var start = new draw2d.shape.node.Start();\n      var end = new draw2d.shape.node.End();\n\n      // ...add it to the canvas\n      canvas.add(start, 50, 250);\n      canvas.add(end, 230, 280);\n\n      // first Connection\n      //\n      var c = draw2d.Connection.createConnection();\n      c.setSource(start.getOutputPort(0));\n      c.setTarget(end.getInputPort(0));\n      canvas.add(c);\n\n      // second Connection\n      //\n      c = draw2d.Connection.createConnection();\n      c.setSource(start.getOutputPort(0));\n      c.setTarget(end.getInputPort(0));\n      canvas.add(c);\n\n      // third Connection\n      //\n      c = draw2d.Connection.createConnection();\n      c.setSource(start.getOutputPort(0));\n      c.setTarget(end.getInputPort(0));\n      canvas.add(c);\n\n      // fourth Connection\n      //\n      c = draw2d.Connection.createConnection();\n      c.setSource(start.getOutputPort(0));\n      c.setTarget(end.getInputPort(0));\n      canvas.add(c);\n    }\n\n    // Zoom mose wheel support\n    {\n      canvas.installEditPolicy(new draw2d.policy.canvas.WheelZoomPolicy());\n      var shape = new draw2d.shape.basic.Text({\n        text: \"Use the mouse wheel + SHIFT to zoom\"\n      });\n\n      canvas.add(shape, 400, 300);\n    }\n\n    // Register some callbacks\n    canvas.on(\"select\", function(emitter, event) {\n      if (event.figure !== null) {\n        console.log(\"figure selected\");\n      } else {\n        console.log(\"selection cleared\");\n      }\n    });\n\n    $(\"#mycanvasdraw2d\").click(function(ev) {\n      console.log(\"Mouse click:\" + ev.clientX + \",\" + ev.clientY);\n    });\n\n    // Log state to console\n    var writer = new draw2d.io.json.Writer();\n    writer.marshal(canvas, json => console.log(json));\n\n    // Custom shape\n    {\n      class CustomFigure extends draw2d.SVGFigure {\n        constructor(attr) {\n          super(attr);\n\n          this.index = 0;\n          this.svgs = [];\n\n          this.svgs.push(\n            '<svg xmlns=\"http://www.w3.org/2000/svg\">' +\n              '  <path stroke=\"#000\" fill=\"#FFF\" stroke-miterlimit=\"4\" d=\"m0,49.842l0,-49.742l49.982,0l0,49.742l-49.982,0z\" id=\"polygon3873\"/>' +\n              '  <text text-anchor=\"middle\" fill=\"#000000\" font-family=\"Sans-serif\" x=\"24.81563\" y=\"26.50938\" xml:space=\"preserve\" font-size=\"8px\" id=\"svg_1\">Click me</text>' +\n              \"</svg>\"\n          );\n\n          this.svgs.push(\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">' +\n              '<rect x=\"14\" y=\"23\" width=\"20\" height=\"20\" fill=\"lime\" stroke=\"black\" />' +\n              \"</svg>\"\n          );\n\n          this.on(\n            \"click\",\n            function() {\n              this.index = ++this.index % this.svgs.length;\n              this.setSVG(this.svgs[this.index], 500);\n            },\n            this\n          );\n        }\n\n        getSVG() {\n          return this.svgs[0];\n        }\n      }\n\n      var fig = new CustomFigure();\n\n      canvas.add(fig, 100, 100);\n    }\n  }\n\n  render() {\n    return <div id=\"mycanvasdraw2d\"></div>;\n  }\n}\n\nexport class GraphicsAreaDraw2D extends React.Component {\n  render() {\n    return (\n      <div className=\"graphicsarea\" style={{ transform: \"scale(1)\" }}>\n        <CanvasDraw2D className=\"canvas2darea\" />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport DownloadLink from \"react-download-link\";\nimport \"rc-slider/assets/index.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\n\nimport Tooltip from \"rc-tooltip\";\nimport Slider from \"rc-slider\";\n\nconst wrapperStyle = { width: 400, margin: 50 };\n\nconst Handle = Slider.Handle;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst TopBar = props => {\n  if (props.showControls) {\n    return (\n      <div className=\"topbar\">\n        <div className=\"zoom\" style={wrapperStyle}>\n          <Slider\n            min={20}\n            max={150}\n            defaultValue={props.defaultScale}\n            handle={handle}\n            onChange={props.onChange}\n          />\n        </div>\n        <DownloadLink\n          label=\"Save state to disk\"\n          className=\"savestate\"\n          tagName=\"h2\"\n          filename=\"state.txt\"\n          exportFile={() => JSON.stringify(this.state, null, 2)}\n        >\n          <h1>Save sta2te to disk</h1>\n        </DownloadLink>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"topbar\">\n        <DownloadLink\n          label=\"Save state to disk\"\n          className=\"savestate\"\n          tagName=\"h2\"\n          filename=\"state.txt\"\n          exportFile={() => JSON.stringify(this.state, null, 2)}\n        >\n          <h1>Save state to disk</h1>\n        </DownloadLink>\n      </div>\n    );\n  }\n};\n\nexport default TopBar;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport GraphicsAreaPureHTML from \"./components/GraphicsAreaPureHTML\";\nimport GraphicsAreaDraw2D from \"./components/CanvasDraw2D\";\n\nimport \"katex/dist/katex.min.css\";\n\nimport TopBar from \"./components/TopBar\";\n\nconst kNoMetod = { nodeId: -1, direction: \"input\", type: \"N/A\" };\n\nclass App extends React.Component {\n  state = {\n    pureHTMLgraph: true,\n    scale: 1.0,\n    activeDrags: 0,\n    deltaPosition: {\n      x: 0,\n      y: 0\n    },\n    nodes: [\n      {\n        title: \"2D shape transformation\",\n        id: 213,\n        position: {\n          x: 260,\n          y: 20\n        },\n        inputPorts: [\n          { name: \"in x\", type: \"int\" },\n          { name: \"in y\", type: \"int\" }\n        ],\n        outputPorts: [\n          { name: \"out x\", type: \"float\" },\n          { name: \"out y\", type: \"float\" }\n        ]\n      },\n      {\n        title: \"Measurement\",\n        id: 19,\n        position: {\n          x: 350,\n          y: 120\n        },\n        inputPorts: [\n          { name: \"amount\", type: \"int\" },\n          { name: \"temperature\", type: \"float\" },\n          { name: \"the grid\", type: \"se.minerva.Grid\" }\n        ],\n        outputPorts: [\n          { name: \"result x\", type: \"float\" },\n          { name: \"result y\", type: \"float\" },\n          { name: \"result z\", type: \"float\" }\n        ]\n      },\n      {\n        title: \"Colorizer\",\n        id: 23,\n        position: {\n          x: 510,\n          y: 236\n        },\n        inputPorts: [\n          { name: \"amount\", type: \"int\" },\n          { name: \"temperature\", type: \"float\" }\n        ],\n        outputPorts: [\n          { name: \"red\", type: \"int\" },\n          { name: \"blue\", type: \"int\" },\n          { name: \"green\", type: \"int\" },\n          { name: \"alpha\", type: \"float\" },\n          { name: \"grid\", type: \"se.minerva.Grid\" }\n        ]\n      },\n      {\n        title: \"1D transformation\",\n        id: 101,\n        position: {\n          x: 95,\n          y: 236\n        },\n        inputPorts: [{ name: \"x\", type: \"float\" }],\n        outputPorts: [{ name: \"x\", type: \"float\" }]\n      }\n    ],\n    connections: [\n      {\n        from: {\n          nodeIndex: 0,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 1\n        }\n      },\n      {\n        from: {\n          nodeIndex: 2,\n          index: 4\n        },\n        to: {\n          nodeIndex: 1,\n          index: 2\n        }\n      },\n      {\n        from: {\n          nodeIndex: 3,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 1\n        }\n      }\n    ],\n    knobValue: 50\n  };\n\n  onStart = () => {\n    this.setState({ activeDrags: this.state.activeDrags + 1 });\n  };\n\n  onStop = () => {\n    this.setState({ activeDrags: this.state.activeDrags - 1 });\n  };\n\n  // For controlled component\n\n  setPositionOnNode = (index, position) => {\n    var newState = { ...this.state };\n    newState.nodes[index].position.x = position.x;\n    newState.nodes[index].position.y = position.y;\n    this.setState(newState);\n  };\n\n  onControlledDragUtil = (e, position, index) => {\n    var newState = { ...this.state };\n    newState.nodes[index].position.x = position.x;\n    newState.nodes[index].position.y = position.y;\n    this.setState(newState);\n  };\n\n  onControlledDrag(index) {\n    return (e, position) => {\n      this.onControlledDragUtil(e, position, index);\n    };\n  }\n\n  onControlledDragStop(index) {\n    return (e, position) => {\n      this.onControlledDragUtil(e, position, index);\n      this.onStop();\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state.radius = 20;\n  }\n\n  render(props) {\n    return (\n      <div className=\"App\">\n        <button\n          onClick={() =>\n            this.setState({\n              ...this.state,\n              pureHTMLgraph: this.state.pureHTMLgraph ? false : true\n            })\n          }\n        >\n          <h2>Toggle graphics library (Pure HTML / Draw2D)</h2>\n        </button>\n        <TopBar\n          className=\"topbar\"\n          showControls={this.state.pureHTMLgraph}\n          defaultScale={this.state.scale * 100}\n          onChange={value => this.setState({ scale: value / 100 })}\n        />\n\n        {this.state.pureHTMLgraph ? (\n          <GraphicsAreaPureHTML\n            nodes={this.state.nodes}\n            connections={this.state.connections}\n            scale={this.state.scale}\n            onSetPostition={(index, position) =>\n              this.setPositionOnNode(index, position)\n            }\n          />\n        ) : (\n          <GraphicsAreaDraw2D className=\"graphicsarea\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}