{"version":3,"sources":["InitialState.js","websocketClientUtils.js","redux/actions/index.js","redux/reducers/index.js","components/NodeList.js","components/BezierCurve.js","components/HTMLNode.js","components/InOutNode.js","components/GraphicsAreaPureHTML.js","components/CanvasDraw2D.js","components/TopBar.js","App.js","serviceWorker.js","index.js"],"names":["invalidMousePosition","InitialState","stressTest","someIndexes","Array","keys","someNodes","map","index","nodeConfirmedInSessionWithID","title","id","uuidv4","position","x","Math","cos","length","y","sin","width","isSelected","inputPorts","name","type","outputPorts","someConnections","filter","a","from","nodeIndex","to","currentSessionID","pureHTMLgraph","scale","isDragInProgress","dragPayload","dragMousePosition","nodeTemplates","nodes","connections","textNode","height","text","imgNode","url","InitialStateStressTest","connection","messageInProgress","messageQueue","successFunctionForMessageInProgress","websocketClientSetup","window","WebSocket","MozWebSocket","console","log","onopen","onclose","store","dispatch","storeCurrentSessionIDAction","onerror","error","alert","onmessage","message","data","nextCommand","shift","successFunction","send","string","websocketSendCommand","readyState","CLOSED","push","CHANGE_ZOOM","POSITION_NODE","CREATE_NODE","POSITION_EVERY_OTHER_NODE","POSITION_TEXT_NODE","POSITION_IMG_NODE","TOGGLE_GRAPHICS","RESET_NORMAL","RESET_STRESS_TEST","CONNECT_PORTS","DELETE_SELECTED","SELECT_NODE","SELECT_CONNECTION","SELECT_CLEAR","SET_NODE_TEMPLATE_LIST","SET_CURRENT_SESSIONID","CONFIRM_NODE","RECONNECT_SERVER","OUTPORT_DRAG_STARTED","DRAG_CANCELLED","INPORT_DROP","DRAG_MOUSE_POSITION","sessionID","payLoadTypeOutport","connectPorts","state","fromNodeIndex","fromPortIndex","toNodeIndex","toPortIndex","update","$push","clearDragState","$set","NodeList","newProps","newState","this","props","templates","Fragment","onClick","onLoadDefault","onLoadOther","value","key","className","draggable","onDragStart","e","payLoadString","JSON","stringify","templateIndex","dataTransfer","setData","substring","React","Component","BezierCurve","nextProps","connectionIndex","curveColor","curveWidth","start","end","c1","c2","onSelectConnection","curve","onMouseDown","stopPropagation","fill","stroke","strokeDasharray","strokeWidth","d","onDrag","xmlns","cx","cy","r","style","opacity","rowHeight","portWidth","InPort","portIndex","onConnect","onMouseUp","onInportDrop","onDrop","textData","getData","payLoad","parse","outPortIndex","preventDefault","onDragOver","OutPort","onOutportDragStarted","inPortRelativePosition","node","inPortIndex","outPortRelativePosition","InOutNode","positionX","positionY","onSelectNode","classes","handle","join","port","GraphicsAreaPureHTML","onSelectClear","onDragCancelled","onMouseMove","rect","document","getElementById","getBoundingClientRect","clientX","left","clientY","top","onDragMousePosition","target","onCreateNode","transform","fromNode","fromX","fromY","toX","toY","toNode","htmlNode","HTMLNode","onSetPosition","connect","positionEveryOtherNodeAction","positionNodeAction","onSetTextNodePosition","positionTextNodeAction","onSetImgNodePosition","positionImgNodeAction","connectPortsAction","selectNodeAction","selectConnectionAction","nodeId","json","sessionId","createNodeAction","outportDragStartedAction","inportDropAction","dragMousePositionAction","jQuery","$","require","draw2d","CanvasDraw2D","renderCanvas","canvasId","canvas","Canvas","shape","Start","End","add","c","Connection","setRouter","layout","SplineConnectionRouter","setSourceDecorator","decoration","BarDecorator","setTargetDecorator","DiamondDecorator","setSource","getOutputPort","setTarget","getInputPort","figure","analog","OpAmp","p1","basic","Polygon","p2","setBackgroundColor","setAlpha","setDimension","setCurrentSelection","Text","setText","lshape","Label","pie","diagram","Pie","setWidth","postit","note","PostIt","installEditor","ui","LabelInplaceEditor","setColor","setPadding","label","createConnection","sourcePort","targetPort","con","FanConnectionRouter","installEditPolicy","policy","WheelZoomPolicy","on","emitter","event","click","ev","io","Writer","marshal","fig","attr","svgs","setSVG","SVGFigure","Handle","Slider","dragging","restProps","prefixCls","overlay","visible","placement","showControls","min","max","onChange","tagName","filename","exportFile","App","body","addEventListener","deleteSelected","display","justifyContent","reconnect","sync","resetStateNormal","resetStateStressTest","toggleGraphicsLibrary","onZoomChange","percent","axios","get","then","response","currentSessionId","forEach","syncAction","Boolean","location","hostname","match","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","deltaX","deltaY","updateObject","oldSessionId","action","i","connIdx","wasSomethingDeleted","wasConnectionDeleted","$splice","foundIndex","findNodeIndexWithId","newValue","applyMiddleware","thunk","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d010274.chunk.js","sourcesContent":["import uuidv4 from \"uuid/v4\";\n\nexport const invalidMousePosition = 999999;\n\nfunction nodeTemplates() {\n  return [\n    {\n      nodeConfirmedInSessionWithID: 0,\n      title: \"Add\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 120,\n      inputPorts: [\n        { name: \"a\", type: \"int\" },\n        { name: \"b\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    },\n    {\n      nodeConfirmedInSessionWithID: 0,\n      title: \"Mult\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 180,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" },\n        { name: \"z\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    },\n    {\n      nodeConfirmedInSessionWithID: 0,\n      title: \"Sub\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 100,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    },\n    {\n      nodeConfirmedInSessionWithID: 0,\n      title: \"Div\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 120,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    },\n    {\n      nodeConfirmedInSessionWithID: 0,\n      title: \"Add/Sub 4\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 120,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" },\n        { name: \"z\", type: \"int\" },\n        { name: \"w\", type: \"int\" }\n      ],\n      outputPorts: [\n        { name: \"sum\", type: \"int\" },\n        { name: \"diff\", type: \"int\" }\n      ]\n    }\n  ];\n}\n\nfunction InitialStateStressTest() {\n  var someIndexes = [...Array(202).keys()];\n  var someNodes = someIndexes.map(index => {\n    return {\n      nodeConfirmedInSessionWithID: 0,\n      title: \"Add\",\n      id: uuidv4(),\n      position: {\n        x: 600 + 500 * Math.cos(((2 * 3.14) / someIndexes.length) * index),\n        y: 600 + 500 * Math.sin(((2 * 3.14) / someIndexes.length) * index)\n      },\n      width: 120,\n      isSelected: false,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    };\n  });\n\n  var someConnections = someIndexes\n    .filter(a => a % 2 === 0)\n    .map(index => {\n      return {\n        isSelected: false,\n        from: {\n          nodeIndex: (index + someIndexes.length / 2 + 2) % someIndexes.length,\n          index: 0\n        },\n        to: {\n          nodeIndex: index,\n          index: 0\n        }\n      };\n    });\n\n  return {\n    currentSessionID: \"9999\",\n    pureHTMLgraph: true,\n    scale: 0.4,\n    stressTest: true,\n    isDragInProgress: false,\n    dragPayload: {},\n    dragMousePosition: { x: invalidMousePosition, y: invalidMousePosition },\n    nodeTemplates: nodeTemplates(),\n    nodes: [...someNodes],\n    connections: [...someConnections],\n    textNode: {\n      x: -500,\n      y: -350,\n      width: 200,\n      height: 400,\n      text: `Over hill, over dale, Thorough bush, thorough brier, Over park,\n            over pale, Thorough flood, thorough fire! I do wander everywhere,\n            Swifter than the moon's sphere; And I serve the Fairy Queen, To\n            dew her orbs upon the green; The cowslips tall her pensioners be;\n            In their gold coats spots you see; Those be rubies, fairy favours;\n            In those freckles live their savours; I must go seek some dewdrops\n            here, And hang a pearl in every cowslip's ear.`\n    },\n    imgNode: {\n      x: 50,\n      y: -350,\n      width: 400,\n      height: 300,\n      url: \"http://minerva-central.net/images/minerva-forward-m1.png\"\n    }\n  };\n}\n\nfunction InitialStateNormal() {\n  return {\n    currentSessionID: \"9999\",\n    pureHTMLgraph: true,\n    stressTest: false,\n    scale: 0.9,\n    isDragInProgress: false,\n    dragPayload: {},\n    dragMousePosition: { x: invalidMousePosition, y: invalidMousePosition },\n    nodeTemplates: nodeTemplates(),\n    nodes: [\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Add\",\n        id: \"0523c8bf-d17e-49a5-918b-a91bca1b4ee9\",\n        position: {\n          x: 84.44444444444466,\n          y: 28.888888888889323\n        },\n        isSelected: false,\n        width: 120,\n        inputPorts: [\n          {\n            name: \"a\",\n            type: \"int\"\n          },\n          {\n            name: \"b\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          }\n        ]\n      },\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Add\",\n        id: \"02bf0700-c984-452e-b3c2-82de39114955\",\n        position: {\n          x: 507.7777777777772,\n          y: 231.1111111111114\n        },\n        isSelected: false,\n        width: 120,\n        inputPorts: [\n          {\n            name: \"a\",\n            type: \"int\"\n          },\n          {\n            name: \"b\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          }\n        ]\n      },\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Sub\",\n        id: \"44eeef82-abfe-4070-9f72-e854dd325991\",\n        position: {\n          x: 80.00000000000003,\n          y: 165.55555555555566\n        },\n        isSelected: false,\n        width: 100,\n        inputPorts: [\n          {\n            name: \"x\",\n            type: \"int\"\n          },\n          {\n            name: \"y\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          }\n        ]\n      },\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Add/Sub 4\",\n        id: \"3c753071-65f6-4fbe-9bf1-2d861c6186ca\",\n        position: {\n          x: 293.33333333333286,\n          y: 231.11111111111128\n        },\n        isSelected: false,\n        width: 120,\n        inputPorts: [\n          {\n            name: \"x\",\n            type: \"int\"\n          },\n          {\n            name: \"y\",\n            type: \"int\"\n          },\n          {\n            name: \"z\",\n            type: \"int\"\n          },\n          {\n            name: \"w\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          },\n          {\n            name: \"diff\",\n            type: \"int\"\n          }\n        ]\n      },\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Mult\",\n        id: \"0da44ac8-acab-47cd-b195-29e11008c869\",\n        position: {\n          x: 435.5555555555551,\n          y: 73.33333333333347\n        },\n        isSelected: false,\n        width: 180,\n        inputPorts: [\n          {\n            name: \"x\",\n            type: \"int\"\n          },\n          {\n            name: \"y\",\n            type: \"int\"\n          },\n          {\n            name: \"z\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          }\n        ]\n      }\n    ],\n    connections: [\n      {\n        isSelected: false,\n        from: {\n          nodeIndex: 3,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 0\n        }\n      },\n      {\n        isSelected: false,\n        from: {\n          nodeIndex: 2,\n          index: 0\n        },\n        to: {\n          nodeIndex: 3,\n          index: 1\n        }\n      },\n      {\n        isSelected: false,\n        from: {\n          nodeIndex: 0,\n          index: 0\n        },\n        to: {\n          nodeIndex: 4,\n          index: 1\n        }\n      },\n      {\n        isSelected: false,\n        from: {\n          nodeIndex: 2,\n          index: 0\n        },\n        to: {\n          nodeIndex: 4,\n          index: 2\n        }\n      }\n    ],\n    textNode: {\n      x: 500,\n      y: 350,\n      width: 200,\n      height: 400,\n      text: `Over hill, over dale, Thorough bush, thorough brier, Over park,\n            over pale, Thorough flood, thorough fire! I do wander everywhere,\n            Swifter than the moon's sphere; And I serve the Fairy Queen, To\n            dew her orbs upon the green; The cowslips tall her pensioners be;\n            In their gold coats spots you see; Those be rubies, fairy favours;\n            In those freckles live their savours; I must go seek some dewdrops\n            here, And hang a pearl in every cowslip's ear.`\n    },\n    imgNode: {\n      x: 50,\n      y: 350,\n      width: 400,\n      height: 300,\n      url: \"http://minerva-central.net/images/minerva-forward-m1.png\"\n    }\n  };\n}\n\nexport default function InitialState(stressTest) {\n  if (stressTest) {\n    return InitialStateStressTest();\n  } else {\n    return InitialStateNormal();\n  }\n}\n","import { store } from \"./index.js\";\nimport { storeCurrentSessionIDAction } from \"./redux/actions\";\n\nvar connection;\nvar messageInProgress = false;\nvar messageQueue = [];\nvar successFunctionForMessageInProgress = null;\n\nexport function websocketClientSetup() {\n  // if user is running mozilla then use it's built-in WebSocket\n  window.WebSocket = window.WebSocket || window.MozWebSocket;\n\n  connection = new WebSocket(\"ws://127.0.0.1:1337\");\n  console.log(\"websocket connection\", connection);\n\n  connection.onopen = function() {\n    // connection is opened and ready to use\n  };\n\n  connection.onclose = function() {\n    console.log(\"Connection closed\");\n    store.dispatch(storeCurrentSessionIDAction(\"\"));\n  };\n\n  connection.onerror = function(error) {\n    // an error occurred when sending/receiving data\n    window.alert(\n      'Websocket test server not started: start with \"node websocket-test-server.js\"',\n      error.type\n    );\n  };\n\n  connection.onmessage = function(message) {\n    console.log(\"sessionID: \" + message.data);\n    store.dispatch(storeCurrentSessionIDAction(message.data));\n\n    // Reset onmessage handler to handle response messages\n    connection.onmessage = function(message) {\n      if (messageInProgress) {\n        successFunctionForMessageInProgress(message);\n        if (messageQueue.length > 0) {\n          var nextCommand = messageQueue[0];\n          messageQueue.shift();\n          successFunctionForMessageInProgress = nextCommand.successFunction;\n          connection.send(nextCommand.string);\n        } else {\n          messageInProgress = false;\n        }\n      }\n    };\n  };\n}\n\nexport function websocketSendCommand(string, successFunction) {\n  if (connection.readyState !== WebSocket.CLOSED) {\n    if (messageInProgress) {\n      messageQueue.push({\n        string,\n        successFunction\n      });\n    } else {\n      successFunctionForMessageInProgress = successFunction;\n      connection.send(string);\n      messageInProgress = true;\n    }\n  } else {\n    return \"Error\";\n  }\n}\n","import axios from \"axios\";\nimport {\n  websocketSendCommand,\n  websocketClientSetup\n} from \"../../websocketClientUtils\";\nimport uuidv4 from \"uuid/v4\";\n\nexport const CHANGE_ZOOM = \"CHANGE_ZOOM\";\nexport const POSITION_NODE = \"POSITION_NODE\";\nexport const CREATE_NODE = \"CREATE_NODE\";\nexport const POSITION_EVERY_OTHER_NODE = \"POSITION_EVERY_OTHER_NODE\";\nexport const POSITION_TEXT_NODE = \"POSITION_TEXT_NODE\";\nexport const POSITION_IMG_NODE = \"POSITION_IMG_NODE\";\nexport const TOGGLE_GRAPHICS = \"TOGGLE_GRAPHICS\";\nexport const RESET_NORMAL = \"RESET_NORMAL\";\nexport const RESET_STRESS_TEST = \"RESET_STRESS_TEST\";\nexport const CONNECT_PORTS = \"CONNECT_PORTS\";\nexport const DELETE_SELECTED = \"DELETE_SELECTED\";\nexport const SELECT_NODE = \"SELECT_NODE\";\nexport const SELECT_CONNECTION = \"SELECT_CONNECTION\";\nexport const SELECT_CLEAR = \"SELECT_CLEAR\";\nexport const SET_NODE_TEMPLATE_LIST = \"SET_NODE_TEMPLATE_LIST\";\nexport const SET_CURRENT_SESSIONID = \"SET_CURRENT_SESSIONID\";\nexport const CONFIRM_NODE = \"CONFIRM_NODE\";\nexport const RECONNECT_SERVER = \"RECONNECT_SERVER\";\nexport const OUTPORT_DRAG_STARTED = \"OUTPORT_DRAG_STARTED\";\nexport const DRAG_CANCELLED = \"DRAG_CANCELLED\";\nexport const INPORT_DROP = \"INPORT_DROP\";\nexport const DRAG_MOUSE_POSITION = \"DRAG_MOUSE_POSITION\";\n\nexport const zoomAction = percent => ({\n  type: CHANGE_ZOOM,\n  percent\n});\n\nexport const deleteSelectedAction = () => ({\n  type: DELETE_SELECTED\n});\n\nexport const createNodeAction = (x, y, index, title) => dispatch => {\n  var nodeId = uuidv4();\n  dispatch({\n    type: CREATE_NODE,\n    x,\n    y,\n    index,\n    nodeId\n  });\n  websocketSendCommand(\"addnode;\" + nodeId + \";\" + title, value => {\n    console.log(\"answer\", value);\n    var json = JSON.parse(value.data);\n    console.log(\"Response\", json.type, json.nodeId, json.sessionId);\n    dispatch({\n      type: CONFIRM_NODE,\n      nodeId: json.nodeId,\n      sessionId: json.sessionId\n    });\n  });\n};\n\nexport const selectNodeAction = nodeIndex => ({\n  type: SELECT_NODE,\n  nodeIndex\n});\n\nexport const outportDragStartedAction = (nodeIndex, portIndex) => ({\n  type: OUTPORT_DRAG_STARTED,\n  nodeIndex,\n  portIndex\n});\n\nexport const inportDropAction = (nodeIndex, portIndex) => ({\n  type: INPORT_DROP,\n  nodeIndex,\n  portIndex\n});\n\nexport const dragMousePositionAction = (x, y) => ({\n  type: DRAG_MOUSE_POSITION,\n  x,\n  y\n});\n\nexport const dragCancelledAction = () => ({\n  type: DRAG_CANCELLED\n});\n\nexport const selectClearAction = () => ({\n  type: SELECT_CLEAR\n});\n\nexport const selectConnectionAction = connectionIndex => ({\n  type: SELECT_CONNECTION,\n  connectionIndex\n});\n\nexport const positionNodeAction = (index, position) => ({\n  type: POSITION_NODE,\n  index,\n  position\n});\n\nexport const positionEveryOtherNodeAction = (index, position) => ({\n  type: POSITION_EVERY_OTHER_NODE,\n  index,\n  position\n});\n\nexport const positionTextNodeAction = position => ({\n  type: POSITION_TEXT_NODE,\n  position\n});\n\nexport const positionImgNodeAction = position => ({\n  type: POSITION_IMG_NODE,\n  position\n});\n\nexport const toggleGraphicsLibraryAction = () => ({\n  type: TOGGLE_GRAPHICS\n});\n\nexport const resetStateNormalAction = () => ({\n  type: RESET_NORMAL\n});\n\nexport const resetStateStressTestAction = () => ({\n  type: RESET_STRESS_TEST\n});\n\nexport const connectPortsAction = (\n  fromNodeIndex,\n  fromPortIndex,\n  toNodeIndex,\n  toPortIndex\n) => ({\n  type: CONNECT_PORTS,\n  fromNodeIndex,\n  fromPortIndex,\n  toNodeIndex,\n  toPortIndex\n});\n\nexport const loadDefaultNodeTemplatesAsyncAction = () => dispatch => {\n  console.log(\"loadDefaultNodeTemplatesAsyncAction\");\n  axios.get(\"templates/defaultNodes.json\").then(response => {\n    console.log(response);\n    dispatch({\n      type: SET_NODE_TEMPLATE_LIST,\n      data: response.data\n    });\n  });\n};\n\nexport const loadOtherNodeTemplatesAsyncAction = () => dispatch => {\n  console.log(\"loadOtherNodeTemplatesAsyncAction\");\n  axios.get(\"templates/otherNodes.json\").then(response => {\n    console.log(response);\n    dispatch({\n      type: SET_NODE_TEMPLATE_LIST,\n      data: response.data\n    });\n  });\n};\n\nexport const storeCurrentSessionIDAction = sessionID => {\n  console.log(\"set sessionID action\", sessionID);\n  return {\n    type: SET_CURRENT_SESSIONID,\n    id: sessionID\n  };\n};\n\nexport const reconnectAction = () => {\n  console.log(\"reconnectAction\");\n  websocketClientSetup();\n  return {\n    type: RECONNECT_SERVER\n  };\n};\n\n// Add unconfirmed nodes to server\nexport const syncAction = (currentSessionId, nodes) => dispatch => {\n  // Filter out the nodes that are not confirmed in the current session adn add them to server\n  var missingNodes = nodes.filter(node => {\n    return node.nodeConfirmedInSessionWithID !== currentSessionId;\n  });\n  missingNodes.forEach(node => {\n    websocketSendCommand(\"addnode;\" + node.id + \";\" + node.title, value => {\n      console.log(\"answer\", value);\n      var json = JSON.parse(value.data);\n      console.log(\"Response\", json.type, json.nodeId, json.sessionId);\n      dispatch({\n        type: CONFIRM_NODE,\n        nodeId: json.nodeId,\n        sessionId: json.sessionId\n      });\n    });\n  });\n};\n","import InitialState from \"../../InitialState\";\nimport update from \"immutability-helper\";\nimport {\n  CHANGE_ZOOM,\n  DELETE_SELECTED,\n  SELECT_NODE,\n  SELECT_CONNECTION,\n  SELECT_CLEAR,\n  POSITION_NODE,\n  POSITION_EVERY_OTHER_NODE,\n  POSITION_TEXT_NODE,\n  POSITION_IMG_NODE,\n  TOGGLE_GRAPHICS,\n  RESET_NORMAL,\n  RESET_STRESS_TEST,\n  CONNECT_PORTS,\n  CREATE_NODE,\n  SET_NODE_TEMPLATE_LIST,\n  SET_CURRENT_SESSIONID,\n  CONFIRM_NODE,\n  RECONNECT_SERVER,\n  OUTPORT_DRAG_STARTED,\n  DRAG_CANCELLED,\n  INPORT_DROP,\n  DRAG_MOUSE_POSITION\n} from \"../actions\";\nimport { invalidMousePosition } from \"../../InitialState\";\n\nexport const payLoadTypeOutport = \"FROM_OUTPORT\";\n\nfunction findNodeIndexWithId(state, id) {\n  var foundIndex = -1;\n  state.nodes.forEach((value, index) => {\n    if (value.id === id) {\n      foundIndex = index;\n    }\n  });\n  return foundIndex;\n}\n\nfunction connectPorts(\n  state,\n  fromNodeIndex,\n  fromPortIndex,\n  toNodeIndex,\n  toPortIndex\n) {\n  return update(state, {\n    connections: {\n      $push: [\n        {\n          isSelected: false,\n          from: {\n            nodeIndex: fromNodeIndex,\n            index: fromPortIndex\n          },\n          to: {\n            nodeIndex: toNodeIndex,\n            index: toPortIndex\n          }\n        }\n      ]\n    }\n  });\n}\n\nfunction clearDragState(state) {\n  return update(state, {\n    isDragInProgress: {\n      $set: false\n    },\n    dragMousePosition: {\n      x: { $set: invalidMousePosition },\n      y: { $set: invalidMousePosition }\n    },\n    dragPayload: { $set: {} }\n  });\n}\n\nexport default function graphEditorReducer(\n  state = InitialState(false),\n  action\n) {\n  //  console.log(\"graphEditorReducer\", action);\n  var newState;\n  //  console.log(\"state before \", state);\n  var deltaX;\n  var deltaY;\n  var updateObject;\n  var oldSessionId;\n\n  switch (action.type) {\n    case CHANGE_ZOOM:\n      newState = update(state, { scale: { $set: action.percent / 100 } });\n      break;\n    case DELETE_SELECTED:\n      console.log(\"DELETE_SELECTED\");\n      newState = state;\n      // Delete all selected nodes and all selected connections.\n      // Remember to also delete all connections that goes from or to a deleted node.\n      // Also remember to update all indexes of connections to the new node indexes.\n      var i;\n      var connIdx;\n      var wasSomethingDeleted;\n      var wasConnectionDeleted;\n\n      // Delete selected nodes\n      wasSomethingDeleted = true;\n      while (wasSomethingDeleted) {\n        wasSomethingDeleted = false;\n        for (i = 0; i < newState.nodes.length; i++) {\n          if (newState.nodes[i].isSelected) {\n            // Delete at a specific index, no matter what value is in it\n            newState = update(newState, { nodes: { $splice: [[i, 1]] } });\n\n            // Remove connections to/from the deleted node\n            wasConnectionDeleted = true;\n            while (wasConnectionDeleted) {\n              wasConnectionDeleted = false;\n              for (\n                connIdx = 0;\n                connIdx < newState.connections.length;\n                connIdx++\n              ) {\n                if (\n                  newState.connections[connIdx].from.nodeIndex === i ||\n                  newState.connections[connIdx].to.nodeIndex === i\n                ) {\n                  newState = update(newState, {\n                    connections: { $splice: [[connIdx, 1]] }\n                  });\n                  wasConnectionDeleted = true;\n                  break;\n                }\n              }\n            }\n\n            // Decrement node indexes in connections by one if > i\n            updateObject = {};\n            // eslint-disable-next-line\n            newState.connections.map((value, index) => {\n              updateObject[index] = {\n                to: {\n                  nodeIndex: {\n                    $set:\n                      value.to.nodeIndex > i\n                        ? value.to.nodeIndex - 1\n                        : value.to.nodeIndex\n                  }\n                },\n                from: {\n                  nodeIndex: {\n                    $set:\n                      value.from.nodeIndex > i\n                        ? value.from.nodeIndex - 1\n                        : value.from.nodeIndex\n                  }\n                }\n              };\n              return null;\n            });\n            newState = update(newState, {\n              connections: {\n                ...updateObject\n              }\n            });\n\n            wasSomethingDeleted = true;\n            break;\n          }\n        }\n      }\n\n      // Delete selected connections\n      wasSomethingDeleted = true;\n      while (wasSomethingDeleted) {\n        wasSomethingDeleted = false;\n        for (i = 0; i < newState.connections.length; i++) {\n          if (newState.connections[i].isSelected) {\n            // Delete at a specific index, no matter what value is in it\n            newState = update(newState, { connections: { $splice: [[i, 1]] } });\n            wasSomethingDeleted = true;\n            break;\n          }\n        }\n      }\n      break;\n    case SELECT_NODE:\n      console.log(\"SELECT_NODE\", action.nodeIndex, state);\n      newState = update(state, {\n        nodes: {\n          [action.nodeIndex]: {\n            isSelected: { $set: true }\n          }\n        }\n      });\n      break;\n    case CREATE_NODE:\n      console.log(\"CREATE_NODE\", action.x, action.y, action);\n      newState = update(state, {\n        nodes: { $push: [state.nodeTemplates[action.index]] }\n      });\n      newState = update(newState, {\n        nodes: {\n          [newState.nodes.length - 1]: {\n            position: {\n              x: {\n                $set: action.x - state.nodeTemplates[action.index].width / 2\n              },\n              y: { $set: action.y - 10 }\n            },\n            id: { $set: action.nodeId }\n          }\n        }\n      });\n      console.log(\"state after \", newState);\n      break;\n    case CONFIRM_NODE:\n      console.log(\"CONFIRM_NODE\", action.nodeId, action.sessionId, action);\n      var nodeIndex = findNodeIndexWithId(state, action.nodeId);\n      console.log(\"nodeIndex\", nodeIndex);\n      newState = update(state, {\n        nodes: {\n          [nodeIndex]: {\n            nodeConfirmedInSessionWithID: { $set: action.sessionId }\n          }\n        }\n      });\n      break;\n    case OUTPORT_DRAG_STARTED:\n      console.log(\"OUTPORT_DRAG_STARTED\", action.nodeIndex, action.portIndex);\n      newState = update(state, {\n        isDragInProgress: {\n          $set: true\n        },\n        dragPayload: {\n          $set: {\n            type: payLoadTypeOutport,\n            nodeIndex: action.nodeIndex,\n            portIndex: action.portIndex\n          }\n        }\n      });\n      break;\n    case INPORT_DROP:\n      console.log(\"INPORT_DROP\", action.nodeIndex, action.portIndex);\n      newState = state;\n      if (\n        state.isDragInProgress &&\n        state.dragPayload.type === payLoadTypeOutport\n      ) {\n        newState = connectPorts(\n          newState,\n          state.dragPayload.nodeIndex,\n          state.dragPayload.portIndex,\n          action.nodeIndex,\n          action.portIndex\n        );\n      }\n      newState = clearDragState(newState);\n\n      break;\n    case DRAG_CANCELLED:\n      console.log(\"DRAG_CANCELLED\");\n      newState = clearDragState(state);\n      break;\n    case DRAG_MOUSE_POSITION:\n      console.log(\"DRAG_MOUSE_POSITION\", action.x, action.y);\n      newState = update(state, {\n        dragMousePosition: {\n          x: { $set: action.x },\n          y: { $set: action.y }\n        }\n      });\n      break;\n    case SELECT_CONNECTION:\n      console.log(\"SELECT_CONNECTION\", action.connectionIndex);\n      newState = update(state, {\n        connections: {\n          [action.connectionIndex]: {\n            isSelected: { $set: true }\n          }\n        }\n      });\n      break;\n    case SELECT_CLEAR:\n      console.log(\"SELECT_CLEAR\");\n      updateObject = {};\n      state.nodes.map((value, index) => {\n        updateObject[index] = {\n          isSelected: { $set: false }\n        };\n        return null;\n      });\n      newState = update(state, {\n        nodes: {\n          ...updateObject\n        }\n      });\n\n      updateObject = {};\n      state.connections.map((value, index) => {\n        updateObject[index] = {\n          isSelected: { $set: false }\n        };\n        return null;\n      });\n      newState = update(newState, {\n        connections: {\n          ...updateObject\n        }\n      });\n      break;\n    case POSITION_NODE:\n      deltaX = action.position.x - state.nodes[action.index].position.x;\n      deltaY = action.position.y - state.nodes[action.index].position.y;\n      newState = update(state, {\n        nodes: {\n          [action.index]: {\n            position: {\n              x: { $set: action.position.x },\n              y: { $set: action.position.y }\n            }\n          }\n        }\n      });\n      break;\n    case POSITION_EVERY_OTHER_NODE:\n      deltaX = action.position.x - state.nodes[action.index].position.x;\n      deltaY = action.position.y - state.nodes[action.index].position.y;\n      updateObject = {};\n      state.nodes.map((value, index) => {\n        if (index % 2 === 0) {\n          updateObject[index] = {\n            position: {\n              x: { $set: state.nodes[index].position.x + deltaX },\n              y: { $set: state.nodes[index].position.y + deltaY }\n            }\n          };\n        }\n        return null;\n      });\n      newState = update(state, {\n        nodes: {\n          [action.index]: {\n            position: {\n              x: { $set: action.position.x },\n              y: { $set: action.position.y }\n            }\n          },\n          ...updateObject\n        }\n      });\n      break;\n    case POSITION_TEXT_NODE:\n      newState = update(state, {\n        textNode: {\n          x: { $set: action.position.x },\n          y: { $set: action.position.y }\n        }\n      });\n      break;\n    case POSITION_IMG_NODE:\n      newState = update(state, {\n        imgNode: {\n          x: { $set: action.position.x },\n          y: { $set: action.position.y }\n        }\n      });\n      break;\n    case TOGGLE_GRAPHICS:\n      var newValue = state.pureHTMLgraph ? false : true;\n      newState = update(state, {\n        pureHTMLgraph: { $set: newValue }\n      });\n      break;\n    case RESET_NORMAL:\n      oldSessionId = state.currentSessionID;\n      newState = InitialState(false);\n      newState = update(newState, {\n        currentSessionID: { $set: oldSessionId }\n      });\n      break;\n    case RESET_STRESS_TEST:\n      oldSessionId = state.currentSessionID;\n      newState = InitialState(true);\n      newState = update(newState, {\n        currentSessionID: { $set: oldSessionId }\n      });\n      break;\n    case CONNECT_PORTS:\n      console.log(\"CONNECT_PORTS reducer\");\n      newState = connectPorts(\n        state,\n        action.fromNodeIndex,\n        action.fromPortIndex,\n        action.toNodeIndex,\n        action.toPortIndex\n      );\n      break;\n    case SET_NODE_TEMPLATE_LIST:\n      console.log(\"SET_NODE_TEMPLATE_LIST\");\n      newState = update(state, {\n        nodeTemplates: { $set: action.data.nodeTemplates }\n      });\n      break;\n    case SET_CURRENT_SESSIONID:\n      console.log(\"SET_CURRENT_SESSIONID\", action);\n      newState = update(state, {\n        currentSessionID: { $set: action.id }\n      });\n      break;\n    case RECONNECT_SERVER:\n      // Connection was reset in action creator\n      newState = state;\n      break;\n    default:\n      console.log(\"default \", state);\n      newState = state;\n      break;\n  }\n\n  //  console.log(\"newState  \", newState);\n  return newState;\n}\n","import React from \"react\";\n\nexport class NodeList extends React.Component {\n  shouldComponentUpdate(newProps, newState) {\n    if (this.props.templates.length !== newProps.templates.length) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button onClick={this.props.onLoadDefault}>Load default</button>\n        <button onClick={this.props.onLoadOther}>Load many</button>\n        {this.props.templates.map((value, index) => {\n          return (\n            <div\n              key={index}\n              className=\"nodelistitem\"\n              draggable\n              onDragStart={e => {\n                //console.log(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n\n                var payLoadString = JSON.stringify({\n                  type: \"CREATE_NODE\",\n                  templateIndex: index,\n                  title: value.title\n                });\n                console.log(\"drag start\", payLoadString);\n                e.dataTransfer.setData(\"text/plain\", payLoadString);\n              }}\n            >\n              {value.title.substring(0, 20)}\n            </div>\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class BezierCurve extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const {\n      isSelected,\n      connectionIndex,\n      curveColor,\n      curveWidth,\n      start,\n      end,\n      c1,\n      c2\n    } = this.props;\n    return (\n      nextProps.connectionIndex !== connectionIndex ||\n      nextProps.isSelected !== isSelected ||\n      nextProps.curveColor !== curveColor ||\n      nextProps.curveWidth !== curveWidth ||\n      nextProps.start.x !== start.x ||\n      nextProps.start.y !== start.y ||\n      nextProps.end.x !== end.x ||\n      nextProps.end.y !== end.y ||\n      nextProps.c1.x !== c1.x ||\n      nextProps.c1.y !== c1.y ||\n      nextProps.c2.x !== c2.x ||\n      nextProps.c2.y !== c2.y\n    );\n  }\n\n  render() {\n    const {\n      isSelected,\n      connectionIndex,\n      curveColor,\n      curveWidth,\n      start,\n      end,\n      c1,\n      c2,\n      onSelectConnection\n    } = this.props;\n    const curve = `M${start.x},${start.y} C${c1.x},${c1.y} ${c2.x},${c2.y} ${end.x},${end.y}`;\n\n    return (\n      <path\n        onMouseDown={e => {\n          e.stopPropagation();\n          console.log(\"BezierCurve click\");\n          onSelectConnection(connectionIndex);\n        }}\n        fill=\"none\"\n        stroke={curveColor}\n        strokeDasharray={isSelected ? 4 : 0}\n        strokeWidth={curveWidth}\n        d={curve}\n      />\n    );\n  }\n}\n\nBezierCurve.propTypes = {\n  connectionIndex: PropTypes.number.isRequired,\n  curveColor: PropTypes.string.isRequired,\n  curveWidth: PropTypes.number.isRequired,\n  onSelectConnection: PropTypes.func.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  start: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  end: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  c1: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  c2: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\n\nexport default function(props) {\n  return (\n    <Draggable\n      key={props.key}\n      scale={props.scale}\n      position={props.position}\n      onDrag={props.onDrag}\n    >\n      <div className=\"box no-cursor\">\n        <svg className=\"graphics inport\">\n          <circle\n            className=\"circle\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            cx=\"15\"\n            cy=\"15\"\n            r=\"15\"\n            style={{\n              stroke: \"#000000\",\n              strokeWidth: 3,\n              fill: \"#66ff66\"\n            }}\n            opacity=\".7\"\n          />\n        </svg>\n\n        <div className=\"drag\">{props.title}</div>\n        <h3>{/* <InlineMath>\\int_0^\\infty x^2 dx</InlineMath> */}</h3>\n\n        <svg className=\"graphics outport\" width=\"30\" height=\"30\">\n          <circle\n            className=\"circle\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            cx=\"15\"\n            cy=\"15\"\n            r=\"15\"\n            style={{\n              stroke: \"#000000\",\n              strokeWidth: 3,\n              fill: \"#ff0000\"\n            }}\n            opacity=\".7\"\n          />\n        </svg>\n      </div>\n    </Draggable>\n  );\n}\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\nimport \"./InOutNode.css\";\nimport PropTypes from \"prop-types\";\n\nvar rowHeight = 16;\nvar portWidth = 15;\n\nfunction InPort(props) {\n  const { name, nodeIndex, portIndex, onConnect } = props;\n  return (\n    <div className=\"port_area in\">\n      <div\n        className=\"port noselect\"\n        // ??? Add onTouchUp onTouchMove onTouchDown that do the same things to support phones.\n        onMouseUp={e => {\n          e.stopPropagation();\n          console.log(\"mouse up in in port\");\n          props.onInportDrop(nodeIndex, portIndex);\n        }}\n        onDrop={e => {\n          if (e.dataTransfer !== null) {\n            var textData = e.dataTransfer.getData(\"text\");\n            if (textData !== null && textData !== \"\") {\n              var payLoad = JSON.parse(textData);\n              if (payLoad !== null && payLoad !== \"\") {\n                console.log(\"payLoad\", payLoad);\n                if (payLoad.type === \"CONNECT\") {\n                  console.log(\n                    `connect node ${payLoad.nodeIndex}:${payLoad.outPortIndex} and node ${nodeIndex}:${portIndex}`\n                  );\n                  onConnect(\n                    payLoad.nodeIndex,\n                    payLoad.outPortIndex,\n                    nodeIndex,\n                    portIndex\n                  );\n                } else {\n                  console.log(\"invalid drop\");\n                }\n                e.preventDefault();\n              }\n            }\n          }\n        }}\n        onDragOver={e => {\n          e.preventDefault();\n        }}\n      >\n        →\n      </div>\n      <header className=\"porttext in noselect\">{name}</header>\n      <div className=\"noport noselect\"></div>\n    </div>\n  );\n}\n\nfunction OutPort(props) {\n  const { name } = props;\n  return (\n    <div className=\"port_area out\">\n      <div className=\"noport noselect\"></div>\n      <header className=\"porttext out noselect\">{name}</header>\n      <div\n        className=\"port noselect\"\n        onMouseDown={e => {\n          console.log(\"outport onmousedown. Begin out port drag\");\n          props.onOutportDragStarted();\n        }}\n      >\n        →\n      </div>\n    </div>\n  );\n}\n\nexport function inPortRelativePosition(node, inPortIndex) {\n  return {\n    x: portWidth / 2,\n    y: rowHeight + rowHeight * inPortIndex + rowHeight / 2\n  };\n}\n\nexport function outPortRelativePosition(node, outPortIndex) {\n  return {\n    x: node.width - portWidth / 2,\n    y:\n      rowHeight +\n      node.inputPorts.length * rowHeight +\n      outPortIndex * rowHeight +\n      rowHeight / 2\n  };\n}\n\nexport class InOutNode extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const {\n      nodeIndex,\n      scale,\n      positionX,\n      positionY,\n      width,\n      isSelected,\n      currentSessionID,\n      nodeConfirmedInSessionWithID\n    } = this.props;\n    return (\n      nextProps.nodeIndex !== nodeIndex ||\n      nextProps.currentSessionID !== currentSessionID ||\n      nextProps.scale !== scale ||\n      nextProps.nodeConfirmedInSessionWithID !== nodeConfirmedInSessionWithID ||\n      nextProps.positionX !== positionX ||\n      nextProps.positionY !== positionY ||\n      nextProps.width !== width ||\n      nextProps.isSelected !== isSelected\n    );\n  }\n\n  render() {\n    const {\n      title,\n      nodeIndex,\n      currentSessionID,\n      nodeConfirmedInSessionWithID,\n      scale,\n      positionX,\n      positionY,\n      onConnect,\n      onDrag,\n      width,\n      inputPorts,\n      outputPorts,\n      isSelected,\n      onSelectNode,\n      onOutportDragStarted,\n      onInportDrop\n    } = this.props;\n    var classes = [\"node\"];\n    if (isSelected) {\n      classes.push(\"nodeselected\");\n    }\n    var isConfirmedInThisSession =\n      currentSessionID === nodeConfirmedInSessionWithID;\n    if (!isConfirmedInThisSession) {\n      classes.push(\"notconfirmed\");\n    }\n    return (\n      <Draggable\n        scale={scale}\n        position={{ x: positionX, y: positionY }}\n        onDrag={onDrag}\n        handle=\"header\"\n        onMouseDown={e => {\n          e.stopPropagation();\n          console.log(\"node clicked\");\n          onSelectNode(nodeIndex);\n        }}\n      >\n        <div\n          className={classes.join(\" \")}\n          style={{\n            height: `${(inputPorts.length + outputPorts.length + 1) *\n              (rowHeight - 1)}px`,\n            width: `${width}px`\n          }}\n        >\n          <div className=\"main_area\">\n            <div className=\"addin noselect\">+</div>\n            <header className=\"nodetext noselect\">{title}</header>\n            <div className=\"addout noselect\">+</div>\n          </div>\n          {inputPorts.map((port, portIndex) => {\n            return (\n              <InPort\n                key={portIndex}\n                name={port.name}\n                nodeIndex={nodeIndex}\n                portIndex={portIndex}\n                onConnect={onConnect}\n                onInportDrop={onInportDrop}\n              />\n            );\n          })}\n\n          {outputPorts.map((port, portIndex) => {\n            return (\n              <OutPort\n                key={portIndex}\n                name={port.name}\n                nodeIndex={nodeIndex}\n                portIndex={portIndex}\n                onOutportDragStarted={() => {\n                  console.log(\"onOutportDragStarted\");\n                  onOutportDragStarted(nodeIndex, portIndex);\n                }}\n              />\n            );\n          })}\n        </div>\n      </Draggable>\n    );\n  }\n}\n\nInOutNode.propTypes = {\n  title: PropTypes.string.isRequired,\n  nodeIndex: PropTypes.number.isRequired,\n  currentSessionID: PropTypes.string.isRequired,\n  nodeConfirmedInSessionWithID: PropTypes.string.isRequired,\n  scale: PropTypes.number.isRequired,\n  positionX: PropTypes.number.isRequired,\n  positionY: PropTypes.number.isRequired,\n  inputPorts: PropTypes.any.isRequired,\n  outputPorts: PropTypes.any.isRequired,\n  width: PropTypes.number.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onDrag: PropTypes.func.isRequired,\n  onConnect: PropTypes.func.isRequired,\n  onSelectNode: PropTypes.func.isRequired,\n  onOutportDragStarted: PropTypes.func.isRequired,\n  onInportDrop: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { InlineMath } from \"react-katex\";\nimport BezierCurve from \"./BezierCurve\";\nimport {\n  positionNodeAction,\n  positionEveryOtherNodeAction,\n  positionTextNodeAction,\n  positionImgNodeAction,\n  connectPortsAction,\n  selectNodeAction,\n  selectConnectionAction,\n  selectClearAction,\n  createNodeAction,\n  outportDragStartedAction,\n  dragCancelledAction,\n  inportDropAction,\n  dragMousePositionAction\n} from \"../redux/actions\";\nimport HTMLNode from \"./HTMLNode\";\nimport {\n  InOutNode,\n  inPortRelativePosition,\n  outPortRelativePosition\n} from \"./InOutNode\";\nimport { payLoadTypeOutport } from \"../redux/reducers\";\nimport { invalidMousePosition } from \"../InitialState\";\n\nclass GraphicsAreaPureHTML extends React.Component {\n  render() {\n    return (\n      <div\n        id=\"nodearea\"\n        className=\"nodearea bgpattern\"\n        onMouseDown={e => {\n          console.log(\"graphicsarea clicked\");\n          this.props.onSelectClear();\n        }}\n        onMouseUp={this.props.onDragCancelled}\n        onMouseMove={e => {\n          var rect = document\n            .getElementById(\"nodearea\")\n            .getBoundingClientRect();\n          var x = (e.clientX - rect.left) / this.props.scale; //x position within the element.\n          var y = (e.clientY - rect.top) / this.props.scale; //y position within the element.\n\n          if (this.props.isDragInProgress) {\n            console.log(\"mouse move\", x, y);\n            this.props.onDragMousePosition(x, y);\n          }\n        }}\n        onDragOver={e => {\n          e.preventDefault();\n        }}\n        onDrop={e => {\n          if (e.dataTransfer != null) {\n            var textData = e.dataTransfer.getData(\"text\");\n            console.log(\"textData\", textData);\n            if (textData != null && textData !== \"\") {\n              var payLoad = JSON.parse(textData);\n              console.log(\"dropped on nodearea\", e, e.clientX, e.clientY);\n              if (payLoad.type === \"CREATE_NODE\") {\n                var rect = e.target.getBoundingClientRect();\n                var x = (e.clientX - rect.left) / this.props.scale; //x position within the element.\n                var y = (e.clientY - rect.top) / this.props.scale; //y position within the element.\n\n                this.props.onCreateNode(\n                  x,\n                  y,\n                  payLoad.templateIndex,\n                  payLoad.title\n                );\n              }\n            }\n          }\n        }}\n      >\n        <div\n          className=\"graphicsarea\"\n          style={{ transform: \"scale(\" + this.props.scale + \")\" }}\n        >\n          <svg\n            className=\"arrowsvg\"\n            style={{ position: \"relative\", top: \"0px\", left: \"0px\" }}\n          >\n            {// Draw a curve during drag\n            (() => {\n              if (\n                this.props.isDragInProgress &&\n                this.props.dragPayload.type === payLoadTypeOutport &&\n                this.props.dragMousePosition.x !== invalidMousePosition\n              ) {\n                var fromNode = this.props.nodes[\n                  this.props.dragPayload.nodeIndex\n                ];\n                var fromX =\n                  fromNode.position.x +\n                  outPortRelativePosition(\n                    fromNode,\n                    this.props.dragPayload.portIndex\n                  ).x;\n                var fromY =\n                  fromNode.position.y +\n                  outPortRelativePosition(\n                    fromNode,\n                    this.props.dragPayload.portIndex\n                  ).y;\n                var toX = this.props.dragMousePosition.x;\n                var toY = this.props.dragMousePosition.y;\n                return (\n                  <BezierCurve\n                    key={0}\n                    isSelected={false}\n                    connectionIndex={0}\n                    onSelectConnection={() => {}}\n                    start={{ x: fromX, y: fromY }}\n                    end={{ x: toX, y: toY }}\n                    c1={{\n                      x: fromX + (fromNode.width * 3) / 4,\n                      y: fromY\n                    }}\n                    c2={{\n                      x: toX - (fromNode.width * 3) / 4,\n                      y: toY\n                    }}\n                    curveColor=\"black\"\n                    curveWidth={3}\n                  />\n                );\n              }\n            })()}\n\n            {// Draw all connections between nodes\n            this.props.connections.map((key, index) => {\n              var fromNode = this.props.nodes[key.from.nodeIndex];\n              var toNode = this.props.nodes[key.to.nodeIndex];\n              var fromX =\n                fromNode.position.x +\n                outPortRelativePosition(fromNode, key.from.index).x;\n              var fromY =\n                fromNode.position.y +\n                outPortRelativePosition(fromNode, key.from.index).y;\n              var toX =\n                toNode.position.x +\n                inPortRelativePosition(toNode, key.to.index).x;\n              var toY =\n                toNode.position.y +\n                inPortRelativePosition(toNode, key.to.index).y;\n              return (\n                <BezierCurve\n                  key={index}\n                  isSelected={key.isSelected}\n                  connectionIndex={index}\n                  onSelectConnection={this.props.onSelectConnection}\n                  start={{ x: fromX, y: fromY }}\n                  end={{ x: toX, y: toY }}\n                  c1={{\n                    x: fromX + (fromNode.width * 3) / 4,\n                    y: fromY\n                  }}\n                  c2={{\n                    x: toX - (toNode.width * 3) / 4,\n                    y: toY\n                  }}\n                  curveColor=\"black\"\n                  curveWidth={3}\n                />\n              );\n            })}\n          </svg>\n\n          {this.props.nodes.map((key, index) =>\n            key.htmlNode ? (\n              <HTMLNode\n                title={key.title}\n                key={index}\n                scale={this.props.scale}\n                position={key.position}\n                onDrag={(e, position) => {\n                  this.props.onSetPosition(index, position, false);\n                }}\n              />\n            ) : (\n              <InOutNode\n                title={key.title}\n                key={index}\n                nodeIndex={index}\n                currentSessionID={this.props.currentSessionID}\n                nodeConfirmedInSessionWithID={key.nodeConfirmedInSessionWithID}\n                scale={this.props.scale}\n                positionX={key.position.x}\n                positionY={key.position.y}\n                inputPorts={key.inputPorts}\n                outputPorts={key.outputPorts}\n                width={key.width}\n                isSelected={key.isSelected}\n                onDrag={(e, position) => {\n                  this.props.onSetPosition(\n                    index,\n                    position,\n                    this.props.stressTest\n                  );\n                }}\n                onConnect={this.props.onConnect}\n                onSelectNode={this.props.onSelectNode}\n                onOutportDragStarted={this.props.onOutportDragStarted}\n                onInportDrop={this.props.onInportDrop}\n              />\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  nodes: state.nodes,\n  connections: state.connections,\n  scale: state.scale,\n  currentSessionID: state.currentSessionID,\n  textNode: state.textNode,\n  imgNode: state.imgNode,\n  stressTest: state.stressTest,\n  isDragInProgress: state.isDragInProgress,\n  dragPayload: state.dragPayload,\n  dragMousePosition: state.dragMousePosition\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetPosition: (index, position, stressTest) => {\n    if (stressTest) {\n      dispatch(positionEveryOtherNodeAction(index, position));\n    } else {\n      dispatch(positionNodeAction(index, position));\n    }\n  },\n  onSetTextNodePosition: position => dispatch(positionTextNodeAction(position)),\n  onSetImgNodePosition: position => dispatch(positionImgNodeAction(position)),\n  onConnect: (fromNodeIndex, fromPortIndex, toNodeIndex, toPortIndex) => {\n    console.log(\"onConnected\");\n    dispatch(\n      connectPortsAction(fromNodeIndex, fromPortIndex, toNodeIndex, toPortIndex)\n    );\n  },\n  onSelectNode: nodeIndex => dispatch(selectNodeAction(nodeIndex)),\n  onSelectConnection: connectionIndex =>\n    dispatch(selectConnectionAction(connectionIndex)),\n  onSelectClear: () => dispatch(selectClearAction()),\n  onCreateNode: (x, y, index, title) =>\n    dispatch(createNodeAction(x, y, index, title)),\n  onOutportDragStarted: (nodeIndex, portIndex) => {\n    dispatch(outportDragStartedAction(nodeIndex, portIndex));\n  },\n  onInportDrop: (nodeIndex, portIndex) =>\n    dispatch(inportDropAction(nodeIndex, portIndex)),\n  onDragCancelled: () => dispatch(dragCancelledAction()),\n  onDragMousePosition: (x, y) => dispatch(dragMousePositionAction(x, y))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GraphicsAreaPureHTML);\n","import React from \"react\";\nimport $ from \"jquery\";\nwindow.jQuery = window.$ = $;\nrequire(\"jqueryui\");\nvar draw2d = require(\"draw2d\");\n\nexport default class CanvasDraw2D extends React.Component {\n  componentDidMount() {\n    this.renderCanvas(\"mycanvasdraw2d\");\n  }\n\n  renderCanvas(canvasId) {\n    var canvas = new draw2d.Canvas(canvasId);\n\n    // create and add two nodes which contains Ports (In and OUT)\n    //\n    var start = new draw2d.shape.node.Start();\n    var end = new draw2d.shape.node.End();\n\n    // ...add it to the canvas\n    canvas.add(start, 50, 50);\n    canvas.add(new draw2d.shape.node.Start(), 50, 250);\n    canvas.add(end, 230, 150);\n\n    // Create a Connection and connect the Start and End node\n    //\n    var c = new draw2d.Connection();\n    c.setRouter(new draw2d.layout.connection.SplineConnectionRouter());\n\n    // Set the endpoint decorations for the connection\n    //\n    c.setSourceDecorator(new draw2d.decoration.connection.BarDecorator());\n    c.setTargetDecorator(new draw2d.decoration.connection.DiamondDecorator());\n    // Connect the endpoints with the start and end port\n    //\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n\n    // and finally add the connection to the canvas\n    canvas.add(c);\n\n    var figure = new draw2d.shape.analog.OpAmp();\n    canvas.add(figure, 350, 110);\n\n    var p1 = new draw2d.shape.basic.Polygon();\n    var p2 = new draw2d.shape.basic.Polygon();\n\n    canvas.add(p1, 450, 150);\n    canvas.add(p2, 450, 200);\n\n    p2.setBackgroundColor(\"#f0f000\");\n    p2.setAlpha(0.7);\n    p2.setDimension(100, 60);\n\n    canvas.setCurrentSelection(p2);\n\n    var shape = new draw2d.shape.basic.Text();\n\n    shape.setText(\"This is a simple text with some loooooong word in.\");\n    shape.setBackgroundColor(\"#f0f000\");\n\n    canvas.add(shape, 550, 10);\n\n    var lshape = new draw2d.shape.basic.Label();\n\n    lshape.setText(\"This is a label.\");\n    lshape.setBackgroundColor(\"#f0f000\");\n\n    canvas.add(lshape, 350, 70);\n\n    var pie = new draw2d.shape.diagram.Pie(80, 80);\n    pie.setWidth(100);\n    pie.setData([30, 60, 122, 4]);\n    canvas.add(pie, 600, 160);\n\n    var postit = new draw2d.shape.note.PostIt();\n    postit.installEditor(new draw2d.ui.LabelInplaceEditor());\n    postit.setColor(\"#000000\");\n    postit.setPadding(20);\n\n    postit.setText(\"This is simple sticky note\\nDouble click to edit.\");\n\n    canvas.add(postit, 700, 10);\n\n    var label = new draw2d.shape.basic.Label();\n\n    label.installEditor(new draw2d.ui.LabelInplaceEditor());\n    label.setText(\"Double click me to edit\");\n\n    canvas.add(label, 50, 10);\n\n    // Override the default connection type. This is used during drag&drop operations of ports.\n    //\n    draw2d.Connection.createConnection = function(sourcePort, targetPort) {\n      // return my special kind of connection\n      var con = new draw2d.Connection();\n      con.setRouter(new draw2d.layout.connection.FanConnectionRouter());\n      return con;\n    };\n\n    // create and add two nodes which contains Ports (In and OUT)\n    //\n    start = new draw2d.shape.node.Start();\n    end = new draw2d.shape.node.End();\n\n    // ...add it to the canvas\n    canvas.add(start, 50, 250);\n    canvas.add(end, 230, 280);\n\n    // first Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // second Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // third Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // fourth Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // Zoom mose wheel support\n    canvas.installEditPolicy(new draw2d.policy.canvas.WheelZoomPolicy());\n    shape = new draw2d.shape.basic.Text({\n      text: \"Use the mouse wheel + SHIFT to zoom\"\n    });\n\n    canvas.add(shape, 400, 300);\n\n    // Register some callbacks\n    canvas.on(\"select\", function(emitter, event) {\n      if (event.figure !== null) {\n        console.log(\"figure selected\");\n      } else {\n        console.log(\"selection cleared\");\n      }\n    });\n\n    $(\"#mycanvasdraw2d\").click(function(ev) {\n      console.log(\"Mouse click:\" + ev.clientX + \",\" + ev.clientY);\n    });\n\n    // Log state to console\n    var writer = new draw2d.io.json.Writer();\n    writer.marshal(canvas, json => console.log(json));\n\n    // Custom shape\n    {\n      class CustomFigure extends draw2d.SVGFigure {\n        constructor(attr) {\n          super(attr);\n\n          this.index = 0;\n          this.svgs = [];\n\n          this.svgs.push(\n            '<svg xmlns=\"http://www.w3.org/2000/svg\">' +\n              '  <path stroke=\"#000\" fill=\"#FFF\" stroke-miterlimit=\"4\" d=\"m0,49.842l0,-49.742l49.982,0l0,49.742l-49.982,0z\" id=\"polygon3873\"/>' +\n              '  <text text-anchor=\"middle\" fill=\"#000000\" font-family=\"Sans-serif\" x=\"24.81563\" y=\"26.50938\" xml:space=\"preserve\" font-size=\"8px\" id=\"svg_1\">Click me</text>' +\n              \"</svg>\"\n          );\n\n          this.svgs.push(\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">' +\n              '<rect x=\"14\" y=\"23\" width=\"20\" height=\"20\" fill=\"lime\" stroke=\"black\" />' +\n              \"</svg>\"\n          );\n\n          this.on(\n            \"click\",\n            function() {\n              this.index = ++this.index % this.svgs.length;\n              this.setSVG(this.svgs[this.index], 500);\n            },\n            this\n          );\n        }\n\n        getSVG() {\n          return this.svgs[0];\n        }\n      }\n\n      var fig = new CustomFigure();\n\n      canvas.add(fig, 100, 100);\n    }\n  }\n\n  render() {\n    return <div id=\"mycanvasdraw2d\"></div>;\n  }\n}\n\nexport class GraphicsAreaDraw2D extends React.Component {\n  render() {\n    return (\n      <div className=\"graphicsarea\" style={{ transform: \"scale(1)\" }}>\n        <CanvasDraw2D className=\"canvas2darea\" />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport DownloadLink from \"react-download-link\";\nimport \"rc-slider/assets/index.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\n\nimport Tooltip from \"rc-tooltip\";\nimport Slider from \"rc-slider\";\nimport { connect } from \"react-redux\";\n\nconst Handle = Slider.Handle;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst TopBar = props => {\n  if (props.showControls) {\n    return (\n      <div className=\"topbar\">\n        <div className=\"zoom\">\n          <Slider\n            min={20}\n            max={150}\n            value={props.scale}\n            handle={handle}\n            onChange={props.onChange}\n          />\n        </div>\n        <DownloadLink\n          label=\"Save state to disk\"\n          className=\"savestate\"\n          tagName=\"h2\"\n          filename=\"state.txt\"\n          exportFile={() => JSON.stringify(props.state, null, 2)}\n        >\n          <h1>Save sta2te to disk</h1>\n        </DownloadLink>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"topbar\">\n        <DownloadLink\n          label=\"Save state to disk\"\n          className=\"savestate\"\n          tagName=\"h2\"\n          filename=\"state.txt\"\n          exportFile={() => JSON.stringify(props.state, null, 2)}\n        >\n          <h1>Save state to disk</h1>\n        </DownloadLink>\n      </div>\n    );\n  }\n};\n\nexport default connect()(TopBar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { websocketClientSetup } from \"./websocketClientUtils\";\n\nimport \"./App.css\";\nimport \"./NodeList.css\";\nimport { NodeList } from \"./components/NodeList\";\n\nimport GraphicsAreaPureHTML from \"./components/GraphicsAreaPureHTML\";\nimport GraphicsAreaDraw2D from \"./components/CanvasDraw2D\";\n\nimport \"katex/dist/katex.min.css\";\n\nimport TopBar from \"./components/TopBar\";\nimport {\n  zoomAction,\n  deleteSelectedAction,\n  toggleGraphicsLibraryAction,\n  resetStateNormalAction,\n  resetStateStressTestAction,\n  loadDefaultNodeTemplatesAsyncAction,\n  loadOtherNodeTemplatesAsyncAction,\n  reconnectAction,\n  syncAction\n} from \"./redux/actions\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    document.body.addEventListener(\"keydown\", e => {\n      console.log(\"key down \", e, this);\n      if (e.key === \"Backspace\" || e.key === \"Delete\") {\n        this.props.deleteSelected();\n      }\n    });\n\n    websocketClientSetup();\n  }\n\n  componentWillUnmount() {\n    //document.body.removeEventListener(\"keydown\", ???);\n  }\n\n  render() {\n    return (\n      <div className=\"App noselect\">\n        <div className=\"messagerow\">\n          {this.props.state.currentSessionID === \"\"\n            ? \"Server disconnected\"\n            : \"Server online\"}\n          {this.props.state.isDragInProgress === true\n            ? \" Draggning \" + this.props.state.dragPayload.type\n            : \"\"}\n        </div>\n        <div\n          className=\"buttonrow\"\n          style={{ display: \"flex\", justifyContent: \"space-around\" }}\n        >\n          <button onClick={this.props.reconnect}>New session</button>\n          <button\n            onClick={() =>\n              this.props.sync(\n                this.props.state.currentSessionID,\n                this.props.state.nodes\n              )\n            }\n          >\n            Sync\n          </button>\n          <button onClick={this.props.resetStateNormal}>Some nodes</button>\n          <button onClick={this.props.resetStateStressTest}>Stress test</button>\n          <button onClick={this.props.toggleGraphicsLibrary}>\n            Pure HTML / Draw2D\n          </button>\n        </div>\n        <TopBar\n          className=\"topbar\"\n          showControls={this.props.state.pureHTMLgraph}\n          scale={this.props.state.scale * 100}\n          state={this.props.state}\n          onChange={this.props.onZoomChange}\n        />\n        <div className=\"editor\">\n          <div className=\"nodelist\">\n            <NodeList\n              templates={this.props.state.nodeTemplates}\n              onLoadDefault={this.props.onLoadDefault}\n              onLoadOther={this.props.onLoadOther}\n            />\n          </div>\n          {this.props.state.pureHTMLgraph ? (\n            <GraphicsAreaPureHTML />\n          ) : (\n            <GraphicsAreaDraw2D />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteSelected: () => dispatch(deleteSelectedAction()),\n  onZoomChange: scale => dispatch(zoomAction(scale)),\n  toggleGraphicsLibrary: () => dispatch(toggleGraphicsLibraryAction()),\n  resetStateNormal: () => dispatch(resetStateNormalAction()),\n  resetStateStressTest: () => dispatch(resetStateStressTestAction()),\n  onLoadDefault: () => dispatch(loadDefaultNodeTemplatesAsyncAction()),\n  onLoadOther: () => dispatch(loadOtherNodeTemplatesAsyncAction()),\n  reconnect: () => dispatch(reconnectAction()),\n  sync: (currentSessionID, nodes) => {\n    dispatch(syncAction(currentSessionID, nodes));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport graphEditorReducer from \"./redux/reducers\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  graphEditorReducer,\n  composeEnhancer(applyMiddleware(thunk))\n\n  // other store enhancers if any\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}