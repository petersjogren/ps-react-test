{"version":3,"sources":["components/Knob.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Knob","props","startDrag","e","preventDefault","knob","target","getBoundingClientRect","pts","x","left","width","y","top","height","moveHandler","currentDeg","getDeg","clientX","clientY","startAngle","newValue","Math","floor","convertRange","endAngle","min","max","setState","deg","onChange","document","addEventListener","removeEventListener","cX","cY","atan","PI","oldMin","oldMax","newMin","newMax","oldValue","renderTicks","ticks","incr","fullAngle","numTicks","size","margin","tick","tickStyle","transform","transformOrigin","push","dcpy","o","JSON","parse","stringify","degrees","value","state","kStyle","this","iStyle","oStyle","color","backgroundImage","random","className","style","map","i","key","onMouseDown","React","Component","defaultProps","ShowPosition","label","position","InputNumber","type","handleChange","setToValue","onClick","handleClick","kNoMetod","nodeId","direction","App","radius","cx","over","activeDrags","deltaPosition","nodes","id","inputPorts","name","outputPorts","connections","from","nodeIndex","index","to","knobValue","onStart","onStop","onControlledDrag","newState","dragHandlers","tagName","filename","exportFile","onControlledDragStop","methodIndex","onMouseEnter","onMouseOut","event","parseInt","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.fe5e15aa.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Knob extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fullAngle = props.degrees;\n    this.startAngle = (360 - props.degrees) / 2;\n    this.endAngle = this.startAngle + props.degrees;\n    this.margin = props.size * 0.15;\n    this.currentDeg = Math.floor(\n      this.convertRange(\n        props.min,\n        props.max,\n        this.startAngle,\n        this.endAngle,\n        props.value\n      )\n    );\n    this.state = { deg: this.currentDeg };\n  }\n\n  startDrag = e => {\n    e.preventDefault();\n    const knob = e.target.getBoundingClientRect();\n    const pts = {\n      x: knob.left + knob.width / 2,\n      y: knob.top + knob.height / 2\n    };\n    const moveHandler = e => {\n      this.currentDeg = this.getDeg(e.clientX, e.clientY, pts);\n      if (this.currentDeg === this.startAngle) this.currentDeg--;\n      let newValue = Math.floor(\n        this.convertRange(\n          this.startAngle,\n          this.endAngle,\n          this.props.min,\n          this.props.max,\n          this.currentDeg\n        )\n      );\n      this.setState({ deg: this.currentDeg });\n      this.props.onChange(newValue);\n    };\n    document.addEventListener(\"mousemove\", moveHandler);\n    document.addEventListener(\"mouseup\", e => {\n      document.removeEventListener(\"mousemove\", moveHandler);\n    });\n  };\n\n  getDeg = (cX, cY, pts) => {\n    const x = cX - pts.x;\n    const y = cY - pts.y;\n    let deg = (Math.atan(y / x) * 180) / Math.PI;\n    if ((x < 0 && y >= 0) || (x < 0 && y < 0)) {\n      deg += 90;\n    } else {\n      deg += 270;\n    }\n    let finalDeg = Math.min(Math.max(this.startAngle, deg), this.endAngle);\n    return finalDeg;\n  };\n\n  convertRange = (oldMin, oldMax, newMin, newMax, oldValue) => {\n    return (\n      ((oldValue - oldMin) * (newMax - newMin)) / (oldMax - oldMin) + newMin\n    );\n  };\n\n  renderTicks = () => {\n    let ticks = [];\n    const incr = this.fullAngle / this.props.numTicks;\n    const size = this.margin + this.props.size / 2;\n    for (let deg = this.startAngle; deg <= this.endAngle; deg += incr) {\n      const tick = {\n        deg: deg,\n        tickStyle: {\n          height: size + 10,\n          left: size - 1,\n          top: size + 2,\n          transform: \"rotate(\" + deg + \"deg)\",\n          transformOrigin: \"top\"\n        }\n      };\n      ticks.push(tick);\n    }\n    return ticks;\n  };\n\n  dcpy = o => {\n    return JSON.parse(JSON.stringify(o));\n  };\n\n  render() {\n    let kStyle = {\n      width: this.props.size,\n      height: this.props.size\n    };\n    let iStyle = this.dcpy(kStyle);\n    let oStyle = this.dcpy(kStyle);\n    oStyle.margin = this.margin;\n    if (this.props.color) {\n      oStyle.backgroundImage =\n        \"radial-gradient(100% 70%,hsl(210, \" +\n        this.currentDeg +\n        \"%, \" +\n        this.currentDeg / 5 +\n        \"%),hsl(\" +\n        Math.random() * 100 +\n        \",20%,\" +\n        this.currentDeg / 36 +\n        \"%))\";\n    }\n    iStyle.transform = \"rotate(\" + this.state.deg + \"deg)\";\n\n    return (\n      <div className=\"knob\" style={kStyle}>\n        <div className=\"ticks\">\n          {this.props.numTicks\n            ? this.renderTicks().map((tick, i) => (\n                <div\n                  key={i}\n                  className={\n                    \"tick\" + (tick.deg <= this.currentDeg ? \" active\" : \"\")\n                  }\n                  style={tick.tickStyle}\n                />\n              ))\n            : null}\n        </div>\n        <div className=\"knob outer\" style={oStyle} onMouseDown={this.startDrag}>\n          <div className=\"knob inner\" style={iStyle}>\n            <div className=\"grip\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nKnob.defaultProps = {\n  size: 150,\n  min: 10,\n  max: 30,\n  numTicks: 0,\n  degrees: 270,\n  value: 0\n};\n\nexport default Knob;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as d3 from \"d3\";\nimport Knob from \"./components/Knob\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Draggable from \"react-draggable\";\nimport { default as Knob2 } from \"react-canvas-knob\";\nimport DownloadLink from \"react-download-link\";\n\nconst ShowPosition = props => (\n  <h4>\n    {props.label} = ({props.position.x}, {props.position.y})\n  </h4>\n);\n\nclass InputNumber extends React.Component {\n  render(props) {\n    return (\n      <div>\n        <input\n          type=\"number\"\n          value={this.props.value}\n          onChange={this.props.handleChange}\n        />\n        <input\n          type=\"button\"\n          value={\"Click me \" + this.props.setToValue}\n          onClick={this.props.handleClick}\n        />\n      </div>\n    );\n  }\n}\n\nconst kNoMetod = { nodeId: -1, direction: \"input\", type: \"N/A\" };\n\nclass App extends React.Component {\n  state = {\n    radius: 20,\n    cx: 100,\n    over: kNoMetod,\n    activeDrags: 0,\n    deltaPosition: {\n      x: 0,\n      y: 0\n    },\n    nodes: [\n      {\n        id: 213,\n        position: {\n          x: 250,\n          y: 0\n        },\n        inputPorts: [{ name: \"x\", type: \"int\" }],\n        outputPorts: [\n          { name: \"out x\", type: \"float\" },\n          { name: \"out y\", type: \"float\" }\n        ]\n      },\n      {\n        id: 19,\n        position: {\n          x: 0,\n          y: 0\n        },\n        inputPorts: [\n          { name: \"amount\", type: \"int\" },\n          { name: \"temperature\", type: \"float\" },\n          { name: \"the grid\", type: \"se.minerva.Grid\" }\n        ],\n        outputPorts: [\n          { name: \"result x\", type: \"float\" },\n          { name: \"result y\", type: \"float\" },\n          { name: \"result z\", type: \"float\" }\n        ]\n      },\n      {\n        id: 23,\n        position: {\n          x: 500,\n          y: 0\n        },\n        inputPorts: [\n          { name: \"amount\", type: \"int\" },\n          { name: \"temperature\", type: \"float\" }\n        ],\n        outputPorts: [\n          { name: \"red\", type: \"int\" },\n          { name: \"blue\", type: \"int\" },\n          { name: \"green\", type: \"int\" },\n          { name: \"alpha\", type: \"float\" },\n          { name: \"grid\", type: \"se.minerva.Grid\" }\n        ]\n      }\n    ],\n    connections: [\n      {\n        from: {\n          nodeIndex: 0,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 1\n        }\n      },\n      {\n        from: {\n          nodeIndex: 2,\n          index: 4\n        },\n        to: {\n          nodeIndex: 1,\n          index: 2\n        }\n      }\n    ],\n    knobValue: 50\n  };\n\n  onStart = () => {\n    this.setState({ activeDrags: ++this.state.activeDrags });\n  };\n\n  onStop = () => {\n    this.setState({ activeDrags: --this.state.activeDrags });\n  };\n\n  // For controlled component\n\n  onControlledDrag = (e, position, index) => {\n    const { x, y } = position;\n    var newState = { ...this.state };\n    newState.nodes[index].position.x = position.x;\n    newState.nodes[index].position.y = position.y;\n    this.setState(newState);\n  };\n\n  onControlledDragStop(index) {\n    return (e, position) => {\n      this.onControlledDrag(e, position, index);\n      this.onStop();\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state.radius = 20;\n  }\n\n  render(props) {\n    const dragHandlers = { onStart: this.onStart, onStop: this.onStop };\n    const { deltaPosition } = this.state;\n    return (\n      <div className=\"App\">\n        <DownloadLink\n          label=\"Save state to disk\"\n          tagName=\"h2\"\n          filename=\"state.txt\"\n          exportFile={() => JSON.stringify(this.state, null, 2)}\n        >\n          <h1>Save state to disk</h1>\n        </DownloadLink>\n        {this.state.nodes.map((key, index) => (\n          <Draggable\n            position={this.state.nodes[index].position}\n            {...dragHandlers}\n            onStop={this.onControlledDragStop(index)}\n          >\n            <div className=\"box\">\n              I have id {this.state.nodes[index].id}\n              <ShowPosition\n                label={\"Position \" + index}\n                position={this.state.nodes[index].position}\n              />\n              My input methods are <br />\n              <ul>\n                {this.state.nodes[index].inputPorts.map((key, methodIndex) => (\n                  <li\n                    className={\n                      this.state.over != null &&\n                      this.state.over.direction != \"input\" &&\n                      this.state.over.nodeId != this.state.nodes[index].id &&\n                      key.type == this.state.over.type\n                        ? \"list-bold-view\"\n                        : \"list-view\"\n                    }\n                    onMouseEnter={e =>\n                      this.setState({\n                        over: {\n                          nodeId: this.state.nodes[index].id,\n                          direction: \"input\",\n                          type: this.state.nodes[index].inputPorts[methodIndex]\n                            .type\n                        }\n                      })\n                    }\n                    onMouseOut={e =>\n                      this.setState({\n                        over: kNoMetod\n                      })\n                    }\n                  >\n                    {this.state.nodes[index].inputPorts[methodIndex].name +\n                      \": \" +\n                      this.state.nodes[index].inputPorts[methodIndex].type}\n                  </li>\n                ))}\n              </ul>\n              <br />\n              My output methods are <br />\n              <ul>\n                {this.state.nodes[index].outputPorts.map((key, methodIndex) => (\n                  <li\n                    className={\n                      this.state.over != null &&\n                      this.state.over.direction != \"output\" &&\n                      this.state.over.nodeId != this.state.nodes[index].id &&\n                      key.type == this.state.over.type\n                        ? \"list-bold-view\"\n                        : \"list-view\"\n                    }\n                    onMouseEnter={e =>\n                      this.setState({\n                        over: {\n                          nodeId: this.state.nodes[index].id,\n                          direction: \"output\",\n                          type: this.state.nodes[index].outputPorts[methodIndex]\n                            .type\n                        }\n                      })\n                    }\n                    onMouseOut={e =>\n                      this.setState({\n                        over: kNoMetod\n                      })\n                    }\n                  >\n                    {this.state.nodes[index].outputPorts[methodIndex].name +\n                      \": \" +\n                      this.state.nodes[index].outputPorts[methodIndex].type}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </Draggable>\n        ))}\n\n        <div className=\"position-view\">\n          {this.state.nodes.map((key, index) => (\n            <ShowPosition\n              label={\"Position \" + index}\n              position={this.state.nodes[index].position}\n            />\n          ))}\n          <InputNumber\n            setToValue=\"99\"\n            value={this.state.nodes[0].position.x}\n            handleClick={props => {\n              var newState = { ...this.state };\n              newState.nodes[0].position.x = 99;\n              return this.setState(newState);\n            }}\n            handleChange={event => {\n              var newState = { ...this.state };\n              newState.nodes[0].position.x =\n                parseInt(event.target.value, 0) || 0;\n              this.setState(newState);\n            }}\n          />\n        </div>\n\n        <div>\n          <ul>\n            {this.state.connections.map((key, index) => (\n              <li className=\"list-view\">\n                {this.state.nodes[key.from.nodeIndex].id +\n                  \":\" +\n                  this.state.nodes[key.from.nodeIndex].outputPorts[\n                    key.from.index\n                  ].name +\n                  \" -> \" +\n                  this.state.nodes[key.to.nodeIndex].id +\n                  \":\" +\n                  this.state.nodes[key.to.nodeIndex].inputPorts[key.to.index]\n                    .name}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}