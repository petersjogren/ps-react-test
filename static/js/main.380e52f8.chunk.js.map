{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["createSliderWithTooltip","Slider","Range","Handle","handle","props","value","dragging","index","restProps","prefixCls","overlay","visible","placement","key","wrapperStyle","width","margin","kNoMetod","React","Component","nodeId","direction","type","App","state","radius","cx","scale","over","activeDrags","deltaPosition","x","y","nodes","title","id","position","inputPorts","name","outputPorts","connections","from","nodeIndex","to","knobValue","onStart","setState","onStop","onControlledDragUtil","e","newState","dragHandlers","this","className","style","min","max","defaultValue","onChange","label","tagName","filename","exportFile","JSON","stringify","transform","top","left","map","x1","y1","x2","y2","stroke","onDrag","onControlledDrag","xmlns","cy","r","fill","opacity","height","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.380e52f8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Draggable from \"react-draggable\";\nimport DownloadLink from \"react-download-link\";\n\nimport \"rc-slider/assets/index.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\n\nimport Tooltip from \"rc-tooltip\";\nimport Slider from \"rc-slider\";\n\nimport \"katex/dist/katex.min.css\";\nimport { InlineMath, BlockMath } from \"react-katex\";\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst wrapperStyle = { width: 400, margin: 50 };\n\nconst ShowPosition = props => (\n  <h4>\n    {props.label} = ({props.position.x}, {props.position.y})\n  </h4>\n);\n\nclass InputNumber extends React.Component {\n  render(props) {\n    return (\n      <div>\n        <input\n          type=\"number\"\n          value={this.props.value}\n          onChange={this.props.handleChange}\n        />\n        <input\n          type=\"button\"\n          value={\"Click me \" + this.props.setToValue}\n          onClick={this.props.handleClick}\n        />\n      </div>\n    );\n  }\n}\n\nconst kNoMetod = { nodeId: -1, direction: \"input\", type: \"N/A\" };\n\nclass App extends React.Component {\n  state = {\n    radius: 20,\n    cx: 100,\n    scale: 0.9,\n    over: kNoMetod,\n    activeDrags: 0,\n    deltaPosition: {\n      x: 0,\n      y: 0\n    },\n    nodes: [\n      {\n        title: \"2D shape transformation\",\n        id: 213,\n        position: {\n          x: 260,\n          y: 0\n        },\n        inputPorts: [\n          { name: \"in x\", type: \"int\" },\n          { name: \"in y\", type: \"int\" }\n        ],\n        outputPorts: [\n          { name: \"out x\", type: \"float\" },\n          { name: \"out y\", type: \"float\" }\n        ]\n      },\n      {\n        title: \"Measurement\",\n        id: 19,\n        position: {\n          x: 350,\n          y: 100\n        },\n        inputPorts: [\n          { name: \"amount\", type: \"int\" },\n          { name: \"temperature\", type: \"float\" },\n          { name: \"the grid\", type: \"se.minerva.Grid\" }\n        ],\n        outputPorts: [\n          { name: \"result x\", type: \"float\" },\n          { name: \"result y\", type: \"float\" },\n          { name: \"result z\", type: \"float\" }\n        ]\n      },\n      {\n        title: \"Colorizer\",\n        id: 23,\n        position: {\n          x: 510,\n          y: 236\n        },\n        inputPorts: [\n          { name: \"amount\", type: \"int\" },\n          { name: \"temperature\", type: \"float\" }\n        ],\n        outputPorts: [\n          { name: \"red\", type: \"int\" },\n          { name: \"blue\", type: \"int\" },\n          { name: \"green\", type: \"int\" },\n          { name: \"alpha\", type: \"float\" },\n          { name: \"grid\", type: \"se.minerva.Grid\" }\n        ]\n      },\n      {\n        title: \"1D transformation\",\n        id: 101,\n        position: {\n          x: 95,\n          y: 236\n        },\n        inputPorts: [{ name: \"x\", type: \"float\" }],\n        outputPorts: [{ name: \"x\", type: \"float\" }]\n      }\n    ],\n    connections: [\n      {\n        from: {\n          nodeIndex: 0,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 1\n        }\n      },\n      {\n        from: {\n          nodeIndex: 2,\n          index: 4\n        },\n        to: {\n          nodeIndex: 1,\n          index: 2\n        }\n      },\n      {\n        from: {\n          nodeIndex: 3,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 1\n        }\n      }\n    ],\n    knobValue: 50\n  };\n\n  onStart = () => {\n    this.setState({ activeDrags: this.state.activeDrags + 1 });\n  };\n\n  onStop = () => {\n    this.setState({ activeDrags: this.state.activeDrags - 1 });\n  };\n\n  // For controlled component\n\n  onControlledDragUtil = (e, position, index) => {\n    var newState = { ...this.state };\n    newState.nodes[index].position.x = position.x;\n    newState.nodes[index].position.y = position.y;\n    this.setState(newState);\n  };\n\n  onControlledDrag(index) {\n    return (e, position) => {\n      this.onControlledDragUtil(e, position, index);\n    };\n  }\n\n  onControlledDragStop(index) {\n    return (e, position) => {\n      this.onControlledDragUtil(e, position, index);\n      this.onStop();\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state.radius = 20;\n  }\n\n  render(props) {\n    const dragHandlers = { onStart: this.onStart, onStop: this.onStop };\n    return (\n      <div className=\"App\">\n        <div className=\"topbar\">\n          <div className=\"zoom\" style={wrapperStyle}>\n            <Slider\n              min={20}\n              max={150}\n              defaultValue={this.state.scale * 100}\n              handle={handle}\n              onChange={value => this.setState({ scale: value / 100 })}\n            />\n          </div>\n          <DownloadLink\n            label=\"Save state to disk\"\n            className=\"savestate\"\n            tagName=\"h2\"\n            filename=\"state.txt\"\n            exportFile={() => JSON.stringify(this.state, null, 2)}\n          >\n            <h1>Save state to disk</h1>\n          </DownloadLink>\n        </div>\n        <div\n          className=\"graphicsarea\"\n          style={{ transform: \"scale(\" + this.state.scale + \")\" }}\n        >\n          <svg\n            className=\"arrowsvg\"\n            style={{ position: \"relative\", top: \"0px\", left: \"0px\" }}\n          >\n            {this.state.connections.map((key, index) => (\n              <line\n                x1={this.state.nodes[key.from.nodeIndex].position.x}\n                y1={this.state.nodes[key.from.nodeIndex].position.y}\n                x2={this.state.nodes[key.to.nodeIndex].position.x}\n                y2={this.state.nodes[key.to.nodeIndex].position.y}\n                style={{ stroke: \"rgb(0,0,0)\", \"stroke-width\": 2 }}\n              />\n            ))}\n          </svg>\n          {this.state.nodes.map((key, index) => (\n            <Draggable\n              scale={this.state.scale}\n              position={this.state.nodes[index].position}\n              {...dragHandlers}\n              onDrag={this.onControlledDrag(index)}\n            >\n              <div className=\"box no-cursor\">\n                <svg className=\"graphics inport\">\n                  <circle\n                    className=\"circle\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    cx=\"15\"\n                    cy=\"15\"\n                    r=\"15\"\n                    style={{\n                      stroke: \"#000000\",\n                      \"stroke-width\": 3,\n                      fill: \"#66ff66\"\n                    }}\n                    opacity=\".7\"\n                  />\n                </svg>\n\n                <div className=\"drag\">{key.title}</div>\n                <h3>\n                  <InlineMath>\\int_0^\\infty x^2 dx</InlineMath>\n                </h3>\n\n                <svg className=\"graphics outport\" width=\"30\" height=\"30\">\n                  <circle\n                    className=\"circle\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    cx=\"15\"\n                    cy=\"15\"\n                    r=\"15\"\n                    style={{\n                      stroke: \"#000000\",\n                      \"stroke-width\": 3,\n                      fill: \"#ff0000\"\n                    }}\n                    opacity=\".7\"\n                  />\n                </svg>\n              </div>\n            </Draggable>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}