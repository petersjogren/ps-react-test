{"version":3,"sources":["InitialState.js","websocketClientUtils.js","redux/actions/index.js","server.js","redux/reducers/index.js","components/NodeList.js","components/BezierCurve.js","components/HTMLNode.js","components/InOutNode.js","components/GraphicsAreaPureHTML.js","components/CanvasDraw2D.js","App.js","components/TopBar.js","components/ServerGraph.js","serviceWorker.js","index.js"],"names":["invalidMousePosition","InitialState","stressTest","someIndexes","Array","keys","someNodes","map","index","nodeConfirmedInSessionWithID","title","id","uuidv4","position","x","Math","cos","length","y","sin","width","isSelected","inputPorts","name","type","outputPorts","someConnections","filter","a","confirmedInSessionWithID","from","nodeIndex","to","serverGraph","nodes","edges","currentSessionID","pureHTMLgraph","scale","isDragInProgress","dragPayload","dragMousePosition","nodeTemplates","connections","textNode","height","text","imgNode","url","InitialStateStressTest","connection","messageInProgress","messageQueue","successFunctionForMessageInProgress","websocketClientSetup","window","WebSocket","MozWebSocket","console","log","onopen","onclose","store","dispatch","storeCurrentSessionIDAction","onerror","error","alert","onmessage","message","data","nextCommand","shift","successFunction","send","string","websocketSendCommand","readyState","CLOSED","push","CHANGE_ZOOM","POSITION_NODE","CREATE_NODE","POSITION_EVERY_OTHER_NODE","POSITION_TEXT_NODE","POSITION_IMG_NODE","TOGGLE_GRAPHICS","RESET_NORMAL","RESET_STRESS_TEST","CONNECT_PORTS","DELETE_SELECTED","SELECT_NODE","SELECT_CONNECTION","SELECT_CLEAR","SET_NODE_TEMPLATE_LIST","SET_CURRENT_SESSIONID","CONFIRM_NODE","CONFIRM_CONNECTION","RECONNECT_SERVER","OUTPORT_DRAG_STARTED","DRAG_CANCELLED","INPORT_DROP","DRAG_MOUSE_POSITION","LOAD_STATE","DRAG_STOP","SET_GRAPH_FROM_SERVER","createNodeAction","nodeId","value","json","JSON","parse","sessionId","connectPortsAction","fromNodeIndex","fromPortIndex","toNodeIndex","toPortIndex","fromNodeId","toNodeId","sessionID","idsOnServer","Immutable","fromJS","connectionsOnServer","nodeDiffSinceLast","state","idArray","node","connectionArray","diff","toJS","payLoadTypeOutport","connectPorts","update","$push","clearDragState","$set","NodeList","newProps","newState","this","props","templates","Fragment","onClick","onLoadDefault","onLoadOther","key","className","onCreateNode","draggable","onDragStart","e","payLoadString","stringify","templateIndex","dataTransfer","setData","substring","React","Component","BezierCurve","nextProps","isConfirmed","connectionIndex","curveColor","curveWidth","start","end","c1","c2","onSelectConnection","curve","onMouseDown","stopPropagation","fill","stroke","strokeDasharray","strokeWidth","d","onDrag","xmlns","cx","cy","r","style","opacity","rowHeight","portWidth","InPort","portIndex","onMouseUp","onInportDrop","OutPort","onOutportDragStarted","inPortRelativePosition","inPortIndex","outPortRelativePosition","outPortIndex","InOutNode","positionX","positionY","onSelectNode","onDragStop","classes","onStop","handle","join","port","GraphicsAreaPureHTML","onSelectClear","onDragCancelled","onMouseMove","rect","document","getElementById","getBoundingClientRect","clientX","left","clientY","top","onDragMousePosition","onDragOver","preventDefault","onDrop","textData","getData","payLoad","target","transform","fromNode","fromX","fromY","toX","toY","toNode","htmlNode","HTMLNode","onSetPosition","connect","present","positionEveryOtherNodeAction","positionNodeAction","onSetTextNodePosition","positionTextNodeAction","onSetImgNodePosition","positionImgNodeAction","selectNodeAction","selectConnectionAction","outportDragStartedAction","inportDropAction","dragMousePositionAction","jQuery","$","require","file","draw2d","CanvasDraw2D","renderCanvas","canvasId","canvas","Canvas","shape","Start","End","add","c","Connection","setRouter","layout","SplineConnectionRouter","setSourceDecorator","decoration","BarDecorator","setTargetDecorator","DiamondDecorator","setSource","getOutputPort","setTarget","getInputPort","figure","analog","OpAmp","p1","basic","Polygon","p2","setBackgroundColor","setAlpha","setDimension","setCurrentSelection","Text","setText","lshape","Label","pie","diagram","Pie","setWidth","postit","note","PostIt","installEditor","ui","LabelInplaceEditor","setColor","setPadding","label","createConnection","sourcePort","targetPort","con","FanConnectionRouter","installEditPolicy","policy","WheelZoomPolicy","on","emitter","event","click","ev","io","Writer","marshal","fig","attr","svgs","setSVG","SVGFigure","Handle","Slider","dragging","restProps","prefixCls","overlay","visible","placement","showControls","min","max","onChange","events","select","options","hierarchical","color","ServerGraph","newPropsMap","n","equals","setInterval","onTimer","clearInterval","graph","reader","FileReader","App","body","addEventListener","deleteSelected","display","justifyContent","reconnect","onUndo","sizePast","onRedo","sizeFuture","input","createElement","onchange","files","readAsText","onload","readerEvent","content","result","onLoadStateFromString","stateString","blob","Blob","FileSaver","saveAs","sync","resetStateNormal","resetStateStressTest","toggleGraphicsLibrary","onZoomChange","past","future","ownProps","indexesForSelectedNodes","Set","i","forEach","has","deleteSelectedAction","percent","axios","get","then","response","currentSessionId","onfirmedInSessionWithID","syncAction","loadStateFromStringAction","ActionCreators","undo","redo","Boolean","location","hostname","match","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","logger","createLogger","collapsed","getState","action","createStore","undoable","deltaX","deltaY","updateObject","oldSessionId","currentSession","connIdx","wasSomethingDeleted","wasConnectionDeleted","$splice","foundIndex","findNodeIndexWithId","connectionIndexes","ci","findConnectionIndexesWithIds","newValue","groupBy","groupByActionTypes","excludeAction","applyMiddleware","thunk","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e4ca0f5.chunk.js","sourcesContent":["import uuidv4 from \"uuid/v4\";\n\nexport const invalidMousePosition = 999999;\n\nfunction nodeTemplates() {\n  return [\n    {\n      nodeConfirmedInSessionWithID: \"0\",\n      title: \"Add\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 120,\n      inputPorts: [\n        { name: \"a\", type: \"int\" },\n        { name: \"b\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    },\n    {\n      nodeConfirmedInSessionWithID: \"0\",\n      title: \"Mult\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 180,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" },\n        { name: \"z\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    },\n    {\n      nodeConfirmedInSessionWithID: \"0\",\n      title: \"Sub\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 100,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    },\n    {\n      nodeConfirmedInSessionWithID: \"0\",\n      title: \"Div\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 120,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    },\n    {\n      nodeConfirmedInSessionWithID: \"0\",\n      title: \"Add/Sub 4\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 120,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" },\n        { name: \"z\", type: \"int\" },\n        { name: \"w\", type: \"int\" }\n      ],\n      outputPorts: [\n        { name: \"sum\", type: \"int\" },\n        { name: \"diff\", type: \"int\" }\n      ]\n    }\n  ];\n}\n\nfunction InitialStateStressTest() {\n  var someIndexes = [...Array(202).keys()];\n  var someNodes = someIndexes.map(index => {\n    return {\n      nodeConfirmedInSessionWithID: \"0\",\n      title: \"Add\",\n      id: uuidv4(),\n      position: {\n        x: 600 + 500 * Math.cos(((2 * 3.14) / someIndexes.length) * index),\n        y: 600 + 500 * Math.sin(((2 * 3.14) / someIndexes.length) * index)\n      },\n      width: 120,\n      isSelected: false,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    };\n  });\n\n  var someConnections = someIndexes\n    .filter(a => a % 2 === 0)\n    .map(index => {\n      return {\n        confirmedInSessionWithID: \"0\",\n        isSelected: false,\n        from: {\n          nodeIndex: (index + someIndexes.length / 2 + 2) % someIndexes.length,\n          index: 0\n        },\n        to: {\n          nodeIndex: index,\n          index: 0\n        }\n      };\n    });\n\n  return {\n    serverGraph: {\n      nodes: [],\n      edges: []\n    },\n    currentSessionID: \"9999\",\n    pureHTMLgraph: true,\n    scale: 0.4,\n    stressTest: true,\n    isDragInProgress: false,\n    dragPayload: {},\n    dragMousePosition: { x: invalidMousePosition, y: invalidMousePosition },\n    nodeTemplates: nodeTemplates(),\n    nodes: [...someNodes],\n    connections: [...someConnections],\n    textNode: {\n      x: -500,\n      y: -350,\n      width: 200,\n      height: 400,\n      text: `Over hill, over dale, Thorough bush, thorough brier, Over park,\n            over pale, Thorough flood, thorough fire! I do wander everywhere,\n            Swifter than the moon's sphere; And I serve the Fairy Queen, To\n            dew her orbs upon the green; The cowslips tall her pensioners be;\n            In their gold coats spots you see; Those be rubies, fairy favours;\n            In those freckles live their savours; I must go seek some dewdrops\n            here, And hang a pearl in every cowslip's ear.`\n    },\n    imgNode: {\n      x: 50,\n      y: -350,\n      width: 400,\n      height: 300,\n      url: \"http://minerva-central.net/images/minerva-forward-m1.png\"\n    }\n  };\n}\n\nfunction InitialStateNormal() {\n  return {\n    serverGraph: {\n      nodes: [],\n      edges: []\n    },\n    currentSessionID: \"9999\",\n    pureHTMLgraph: true,\n    stressTest: false,\n    scale: 0.9,\n    isDragInProgress: false,\n    dragPayload: {},\n    dragMousePosition: { x: invalidMousePosition, y: invalidMousePosition },\n    nodeTemplates: nodeTemplates(),\n    nodes: [\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Add\",\n        id: \"0523c8bf-d17e-49a5-918b-a91bca1b4ee9\",\n        position: {\n          x: 84.44444444444466,\n          y: 28.888888888889323\n        },\n        isSelected: false,\n        width: 120,\n        inputPorts: [\n          {\n            name: \"a\",\n            type: \"int\"\n          },\n          {\n            name: \"b\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          }\n        ]\n      },\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Add\",\n        id: \"02bf0700-c984-452e-b3c2-82de39114955\",\n        position: {\n          x: 507.7777777777772,\n          y: 231.1111111111114\n        },\n        isSelected: false,\n        width: 120,\n        inputPorts: [\n          {\n            name: \"a\",\n            type: \"int\"\n          },\n          {\n            name: \"b\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          }\n        ]\n      },\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Sub\",\n        id: \"44eeef82-abfe-4070-9f72-e854dd325991\",\n        position: {\n          x: 80.00000000000003,\n          y: 165.55555555555566\n        },\n        isSelected: false,\n        width: 100,\n        inputPorts: [\n          {\n            name: \"x\",\n            type: \"int\"\n          },\n          {\n            name: \"y\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          }\n        ]\n      },\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Add/Sub 4\",\n        id: \"3c753071-65f6-4fbe-9bf1-2d861c6186ca\",\n        position: {\n          x: 293.33333333333286,\n          y: 231.11111111111128\n        },\n        isSelected: false,\n        width: 120,\n        inputPorts: [\n          {\n            name: \"x\",\n            type: \"int\"\n          },\n          {\n            name: \"y\",\n            type: \"int\"\n          },\n          {\n            name: \"z\",\n            type: \"int\"\n          },\n          {\n            name: \"w\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          },\n          {\n            name: \"diff\",\n            type: \"int\"\n          }\n        ]\n      },\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Mult\",\n        id: \"0da44ac8-acab-47cd-b195-29e11008c869\",\n        position: {\n          x: 435.5555555555551,\n          y: 73.33333333333347\n        },\n        isSelected: false,\n        width: 180,\n        inputPorts: [\n          {\n            name: \"x\",\n            type: \"int\"\n          },\n          {\n            name: \"y\",\n            type: \"int\"\n          },\n          {\n            name: \"z\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          }\n        ]\n      }\n    ],\n    connections: [\n      {\n        confirmedInSessionWithID: \"0\",\n        isSelected: false,\n        from: {\n          nodeIndex: 3,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 0\n        }\n      },\n      {\n        confirmedInSessionWithID: \"0\",\n        isSelected: false,\n        from: {\n          nodeIndex: 2,\n          index: 0\n        },\n        to: {\n          nodeIndex: 3,\n          index: 1\n        }\n      },\n      {\n        confirmedInSessionWithID: \"0\",\n        isSelected: false,\n        from: {\n          nodeIndex: 0,\n          index: 0\n        },\n        to: {\n          nodeIndex: 4,\n          index: 1\n        }\n      },\n      {\n        confirmedInSessionWithID: \"0\",\n        isSelected: false,\n        from: {\n          nodeIndex: 2,\n          index: 0\n        },\n        to: {\n          nodeIndex: 4,\n          index: 2\n        }\n      }\n    ],\n    textNode: {\n      x: 500,\n      y: 350,\n      width: 200,\n      height: 400,\n      text: `Over hill, over dale, Thorough bush, thorough brier, Over park,\n            over pale, Thorough flood, thorough fire! I do wander everywhere,\n            Swifter than the moon's sphere; And I serve the Fairy Queen, To\n            dew her orbs upon the green; The cowslips tall her pensioners be;\n            In their gold coats spots you see; Those be rubies, fairy favours;\n            In those freckles live their savours; I must go seek some dewdrops\n            here, And hang a pearl in every cowslip's ear.`\n    },\n    imgNode: {\n      x: 50,\n      y: 350,\n      width: 400,\n      height: 300,\n      url: \"http://minerva-central.net/images/minerva-forward-m1.png\"\n    }\n  };\n}\n\nexport default function InitialState(stressTest) {\n  if (stressTest) {\n    return InitialStateStressTest();\n  } else {\n    return InitialStateNormal();\n  }\n}\n","import { store } from \"./index.js\";\nimport { storeCurrentSessionIDAction } from \"./redux/actions\";\n\nvar connection;\nvar messageInProgress = false;\nvar messageQueue = [];\nvar successFunctionForMessageInProgress = null;\n\nexport function websocketClientSetup() {\n  // if user is running mozilla then use it's built-in WebSocket\n  window.WebSocket = window.WebSocket || window.MozWebSocket;\n\n  connection = new WebSocket(\"ws://127.0.0.1:1337\");\n  console.log(\"websocket connection\", connection);\n\n  connection.onopen = function() {\n    // connection is opened and ready to use\n  };\n\n  connection.onclose = function() {\n    console.log(\"Connection closed\");\n    store.dispatch(storeCurrentSessionIDAction(\"\"));\n  };\n\n  connection.onerror = function(error) {\n    // an error occurred when sending/receiving data\n    window.alert(\n      'Websocket test server not started: start with \"node websocket-test-server.js\"',\n      error.type\n    );\n  };\n\n  connection.onmessage = function(message) {\n    console.log(\"sessionID: \" + message.data);\n    store.dispatch(storeCurrentSessionIDAction(message.data));\n\n    // Reset onmessage handler to handle response messages\n    connection.onmessage = function(message) {\n      if (messageInProgress) {\n        successFunctionForMessageInProgress(message);\n        if (messageQueue.length > 0) {\n          var nextCommand = messageQueue[0];\n          messageQueue.shift();\n          successFunctionForMessageInProgress = nextCommand.successFunction;\n          connection.send(nextCommand.string);\n        } else {\n          messageInProgress = false;\n        }\n      }\n    };\n  };\n}\n\nexport function websocketSendCommand(string, successFunction) {\n  if (connection.readyState !== WebSocket.CLOSED) {\n    if (messageInProgress) {\n      messageQueue.push({\n        string,\n        successFunction\n      });\n    } else {\n      successFunctionForMessageInProgress = successFunction;\n      connection.send(string);\n      messageInProgress = true;\n    }\n  } else {\n    return \"Error\";\n  }\n}\n","import axios from \"axios\";\nimport {\n  websocketSendCommand,\n  websocketClientSetup\n} from \"../../websocketClientUtils\";\nimport uuidv4 from \"uuid/v4\";\nimport { payLoadTypeOutport } from \"../reducers\";\n\nexport const CHANGE_ZOOM = \"CHANGE_ZOOM\";\nexport const POSITION_NODE = \"POSITION_NODE\";\nexport const CREATE_NODE = \"CREATE_NODE\";\nexport const POSITION_EVERY_OTHER_NODE = \"POSITION_EVERY_OTHER_NODE\";\nexport const POSITION_TEXT_NODE = \"POSITION_TEXT_NODE\";\nexport const POSITION_IMG_NODE = \"POSITION_IMG_NODE\";\nexport const TOGGLE_GRAPHICS = \"TOGGLE_GRAPHICS\";\nexport const RESET_NORMAL = \"RESET_NORMAL\";\nexport const RESET_STRESS_TEST = \"RESET_STRESS_TEST\";\nexport const CONNECT_PORTS = \"CONNECT_PORTS\";\nexport const DELETE_SELECTED = \"DELETE_SELECTED\";\nexport const SELECT_NODE = \"SELECT_NODE\";\nexport const SELECT_CONNECTION = \"SELECT_CONNECTION\";\nexport const SELECT_CLEAR = \"SELECT_CLEAR\";\nexport const SET_NODE_TEMPLATE_LIST = \"SET_NODE_TEMPLATE_LIST\";\nexport const SET_CURRENT_SESSIONID = \"SET_CURRENT_SESSIONID\";\nexport const CONFIRM_NODE = \"CONFIRM_NODE\";\nexport const CONFIRM_CONNECTION = \"CONFIRM_CONNECTION\";\nexport const RECONNECT_SERVER = \"RECONNECT_SERVER\";\nexport const OUTPORT_DRAG_STARTED = \"OUTPORT_DRAG_STARTED\";\nexport const DRAG_CANCELLED = \"DRAG_CANCELLED\";\nexport const INPORT_DROP = \"INPORT_DROP\";\nexport const DRAG_MOUSE_POSITION = \"DRAG_MOUSE_POSITION\";\nexport const LOAD_STATE = \"LOAD_STATE\";\nexport const DRAG_STOP = \"DRAG_STOP\";\nexport const SET_GRAPH_FROM_SERVER = \"SET_GRAPH_FROM_SERVER\";\n\nexport const getGraphJSONFromServerAction = () => dispatch => {\n  websocketSendCommand(\"getgraph\", value => {\n    console.log(\"answer\", value);\n    var json = JSON.parse(value.data);\n    console.log(\"Response\", json.type, json.graph);\n    dispatch({\n      type: SET_GRAPH_FROM_SERVER,\n      graph: json.graph\n    });\n  });\n};\n\nexport const zoomAction = percent => ({\n  type: CHANGE_ZOOM,\n  percent\n});\n\nexport const deleteSelectedAction = state => dispatch => {\n  // Send commands to server to remove selected nodes and connections\n  var indexesForSelectedNodes = new Set(\n    state.nodes.map((n, i) => (n.isSelected ? i : -1)).filter(i => i !== -1)\n  );\n  // Tell server to delete selected connections\n  state.connections.forEach(c => {\n    if (\n      c.isSelected ||\n      indexesForSelectedNodes.has(c.from.nodeIndex) ||\n      indexesForSelectedNodes.has(c.to.nodeIndex)\n    ) {\n      websocketSendCommand(\n        \"deleteconnection;\" +\n          state.nodes[c.from.nodeIndex].id +\n          \";\" +\n          state.nodes[c.to.nodeIndex].id,\n        value => {\n          console.log(\"answer\", value);\n          var json = JSON.parse(value.data);\n          console.log(\"Response\", json.type, json.nodeId, json.sessionId);\n        }\n      );\n    }\n  });\n  // Tell server to delete selected nodes\n  state.nodes.forEach(n => {\n    if (n.isSelected) {\n      websocketSendCommand(\"deletenode;\" + n.id, value => {\n        console.log(\"answer\", value);\n        var json = JSON.parse(value.data);\n        console.log(\"Response\", json.type, json.nodeId, json.sessionId);\n      });\n    }\n  });\n\n  dispatch({\n    type: DELETE_SELECTED\n  });\n};\n\nexport const createNodeAction = (x, y, index, title) => dispatch => {\n  var nodeId = uuidv4();\n  dispatch({\n    type: CREATE_NODE,\n    x,\n    y,\n    index,\n    nodeId\n  });\n  websocketSendCommand(\"addnode;\" + nodeId + \";\" + title, value => {\n    console.log(\"answer\", value);\n    var json = JSON.parse(value.data);\n    console.log(\"Response\", json.type, json.nodeId, json.sessionId);\n    dispatch({\n      type: CONFIRM_NODE,\n      nodeId: json.nodeId,\n      sessionId: json.sessionId\n    });\n  });\n};\n\nexport const selectNodeAction = nodeIndex => ({\n  type: SELECT_NODE,\n  nodeIndex\n});\n\nexport const outportDragStartedAction = (nodeIndex, portIndex) => ({\n  type: OUTPORT_DRAG_STARTED,\n  nodeIndex,\n  portIndex\n});\n\nexport const inportDropAction = (\n  nodeIndex,\n  portIndex,\n  isDragInProgress,\n  dragPayload,\n  fromNodeId,\n  toNodeId\n) => dispatch => {\n  if (isDragInProgress && dragPayload.type === payLoadTypeOutport) {\n    dispatch({ type: DRAG_CANCELLED });\n    dispatch(\n      connectPortsAction(\n        dragPayload.nodeIndex,\n        dragPayload.portIndex,\n        nodeIndex,\n        portIndex,\n        fromNodeId,\n        toNodeId\n      )\n    );\n  }\n};\n\nexport const dragMousePositionAction = (x, y) => ({\n  type: DRAG_MOUSE_POSITION,\n  x,\n  y\n});\n\nexport const dragCancelledAction = () => ({\n  type: DRAG_CANCELLED\n});\n\n// This action exists for breaking POSITION_NODE grouping\n// when user ends drag operations. Otherwise all consecutive\n// drag operations will become one undo step.\nexport const dragStopAction = () => ({\n  type: DRAG_STOP\n});\n\nexport const selectClearAction = () => ({\n  type: SELECT_CLEAR\n});\n\nexport const selectConnectionAction = connectionIndex => ({\n  type: SELECT_CONNECTION,\n  connectionIndex\n});\n\nexport const positionNodeAction = (index, position) => ({\n  type: POSITION_NODE,\n  index,\n  position\n});\n\nexport const positionEveryOtherNodeAction = (index, position) => ({\n  type: POSITION_EVERY_OTHER_NODE,\n  index,\n  position\n});\n\nexport const positionTextNodeAction = position => ({\n  type: POSITION_TEXT_NODE,\n  position\n});\n\nexport const positionImgNodeAction = position => ({\n  type: POSITION_IMG_NODE,\n  position\n});\n\nexport const toggleGraphicsLibraryAction = () => ({\n  type: TOGGLE_GRAPHICS\n});\n\nexport const resetStateNormalAction = () => ({\n  type: RESET_NORMAL\n});\n\nexport const resetStateStressTestAction = () => ({\n  type: RESET_STRESS_TEST\n});\n\nexport const connectPortsAction = (\n  fromNodeIndex,\n  fromPortIndex,\n  toNodeIndex,\n  toPortIndex,\n  fromNodeId,\n  toNodeId\n) => dispatch => {\n  dispatch({\n    type: CONNECT_PORTS,\n    fromNodeIndex,\n    fromPortIndex,\n    toNodeIndex,\n    toPortIndex\n  });\n\n  websocketSendCommand(\n    \"addconnection;\" +\n      fromNodeId +\n      \";\" +\n      fromPortIndex +\n      \";\" +\n      toNodeId +\n      \";\" +\n      toPortIndex,\n    value => {\n      console.log(\"answer\", value);\n      var json = JSON.parse(value.data);\n      console.log(\"Response\", json);\n      dispatch({\n        type: CONFIRM_CONNECTION,\n        fromNodeId: json.fromNodeId,\n        toNodeId: json.toNodeId,\n        sessionId: json.sessionId\n      });\n    }\n  );\n};\n\nexport const loadDefaultNodeTemplatesAsyncAction = () => dispatch => {\n  console.log(\"loadDefaultNodeTemplatesAsyncAction\");\n  axios.get(\"templates/defaultNodes.json\").then(response => {\n    console.log(response);\n    dispatch({\n      type: SET_NODE_TEMPLATE_LIST,\n      data: response.data\n    });\n  });\n};\n\nexport const loadOtherNodeTemplatesAsyncAction = () => dispatch => {\n  console.log(\"loadOtherNodeTemplatesAsyncAction\");\n  axios.get(\"templates/otherNodes.json\").then(response => {\n    console.log(response);\n    dispatch({\n      type: SET_NODE_TEMPLATE_LIST,\n      data: response.data\n    });\n  });\n};\n\nexport const storeCurrentSessionIDAction = sessionID => {\n  console.log(\"set sessionID action\", sessionID);\n  return {\n    type: SET_CURRENT_SESSIONID,\n    id: sessionID\n  };\n};\n\nexport const reconnectAction = () => {\n  console.log(\"reconnectAction\");\n  websocketClientSetup();\n  return {\n    type: RECONNECT_SERVER\n  };\n};\n\n// Add unconfirmed nodes to server\nexport const syncAction = (\n  currentSessionId,\n  nodes,\n  connections\n) => dispatch => {\n  // Filter out the nodes that are not confirmed in the current session adn add them to server\n  var missingNodes = nodes.filter(node => {\n    return node.nodeConfirmedInSessionWithID !== currentSessionId;\n  });\n  missingNodes.forEach(node => {\n    websocketSendCommand(\"addnode;\" + node.id + \";\" + node.title, value => {\n      console.log(\"answer\", value);\n      var json = JSON.parse(value.data);\n      console.log(\"Response\", json.type, json.nodeId, json.sessionId);\n      dispatch({\n        type: CONFIRM_NODE,\n        nodeId: json.nodeId,\n        sessionId: json.sessionId\n      });\n    });\n  });\n\n  // Filter out the nodes that are not confirmed in the current session adn add them to server\n  var missingConnections = connections.filter(c => {\n    return c.onfirmedInSessionWithID !== currentSessionId;\n  });\n  missingConnections.forEach(c => {\n    websocketSendCommand(\n      \"addconnection;\" +\n        nodes[c.from.nodeIndex].id +\n        \";\" +\n        c.from.portIndex +\n        \";\" +\n        nodes[c.to.nodeIndex].id +\n        \";\" +\n        c.to.portIndex,\n      value => {\n        console.log(\"answer\", value);\n        var json = JSON.parse(value.data);\n        console.log(\"Response\", json);\n        dispatch({\n          type: CONFIRM_CONNECTION,\n          fromNodeId: json.fromNodeId,\n          toNodeId: json.toNodeId,\n          sessionId: json.sessionId\n        });\n      }\n    );\n  });\n};\n\nexport const loadStateFromStringAction = string => ({\n  type: LOAD_STATE,\n  data: string\n});\n","import Immutable from \"immutable\";\nimport diff from \"immutablediff\";\n\nvar idsOnServer = Immutable.fromJS([]);\nvar connectionsOnServer = Immutable.fromJS([]);\n\nexport function nodeDiffSinceLast(state) {\n  var idArray = Immutable.fromJS(state.nodes.map(node => node.id));\n  var connectionArray = Immutable.fromJS(state.connections);\n\n  console.log(\"node diff\", diff(idsOnServer, idArray).toJS());\n  console.log(\n    \"connection diff\",\n    diff(connectionsOnServer, connectionArray).toJS()\n  );\n  idsOnServer = idArray;\n  connectionsOnServer = connectionArray;\n}\n","import InitialState from \"../../InitialState\";\nimport update from \"immutability-helper\";\nimport {\n  CHANGE_ZOOM,\n  DELETE_SELECTED,\n  SELECT_NODE,\n  SELECT_CONNECTION,\n  SELECT_CLEAR,\n  POSITION_NODE,\n  POSITION_EVERY_OTHER_NODE,\n  POSITION_TEXT_NODE,\n  POSITION_IMG_NODE,\n  TOGGLE_GRAPHICS,\n  RESET_NORMAL,\n  RESET_STRESS_TEST,\n  CONNECT_PORTS,\n  CREATE_NODE,\n  SET_NODE_TEMPLATE_LIST,\n  SET_CURRENT_SESSIONID,\n  CONFIRM_NODE,\n  CONFIRM_CONNECTION,\n  RECONNECT_SERVER,\n  OUTPORT_DRAG_STARTED,\n  DRAG_CANCELLED,\n  INPORT_DROP,\n  DRAG_MOUSE_POSITION,\n  LOAD_STATE,\n  DRAG_STOP,\n  SET_GRAPH_FROM_SERVER\n} from \"../actions\";\nimport { invalidMousePosition } from \"../../InitialState\";\nimport { nodeDiffSinceLast } from \"../../server\";\n\nexport const payLoadTypeOutport = \"FROM_OUTPORT\";\n\nfunction findNodeIndexWithId(state, id) {\n  var foundIndex = -1;\n  state.nodes.forEach((value, index) => {\n    if (value.id === id) {\n      foundIndex = index;\n    }\n  });\n  return foundIndex;\n}\n\nfunction findConnectionIndexesWithIds(state, fromNodeId, toNodeId) {\n  var indexes = state.connections\n    .map((c, ci) =>\n      state.nodes[c.from.nodeIndex].id === fromNodeId &&\n      state.nodes[c.to.nodeIndex].id === toNodeId\n        ? ci\n        : -1\n    )\n    .filter(i => i !== -1);\n  return indexes;\n}\n\nfunction connectPorts(\n  state,\n  fromNodeIndex,\n  fromPortIndex,\n  toNodeIndex,\n  toPortIndex\n) {\n  return update(state, {\n    connections: {\n      $push: [\n        {\n          isSelected: false,\n          from: {\n            nodeIndex: fromNodeIndex,\n            index: fromPortIndex\n          },\n          to: {\n            nodeIndex: toNodeIndex,\n            index: toPortIndex\n          }\n        }\n      ]\n    }\n  });\n}\n\nfunction clearDragState(state) {\n  return update(state, {\n    isDragInProgress: {\n      $set: false\n    },\n    dragMousePosition: {\n      x: { $set: invalidMousePosition },\n      y: { $set: invalidMousePosition }\n    },\n    dragPayload: { $set: {} }\n  });\n}\n\nexport default function graphEditorReducer(\n  state = InitialState(false),\n  action\n) {\n  //  console.log(\"graphEditorReducer\", action);\n  var newState;\n  //  console.log(\"state before \", state);\n  var deltaX;\n  var deltaY;\n  var updateObject;\n  var oldSessionId;\n\n  switch (action.type) {\n    case LOAD_STATE:\n      var currentSession = state.currentSessionID;\n      newState = JSON.parse(action.data);\n      newState = update(newState, {\n        currentSessionID: { $set: currentSession }\n      });\n      break;\n    case CHANGE_ZOOM:\n      newState = update(state, { scale: { $set: action.percent / 100 } });\n      break;\n    case DELETE_SELECTED:\n      console.log(\"DELETE_SELECTED\");\n      newState = state;\n      // Delete all selected nodes and all selected connections.\n      // Remember to also delete all connections that goes from or to a deleted node.\n      // Also remember to update all indexes of connections to the new node indexes.\n      var i;\n      var connIdx;\n      var wasSomethingDeleted;\n      var wasConnectionDeleted;\n\n      // Delete selected nodes\n      wasSomethingDeleted = true;\n      while (wasSomethingDeleted) {\n        wasSomethingDeleted = false;\n        for (i = 0; i < newState.nodes.length; i++) {\n          if (newState.nodes[i].isSelected) {\n            // Delete at a specific index, no matter what value is in it\n            newState = update(newState, { nodes: { $splice: [[i, 1]] } });\n\n            // Remove connections to/from the deleted node\n            wasConnectionDeleted = true;\n            while (wasConnectionDeleted) {\n              wasConnectionDeleted = false;\n              for (\n                connIdx = 0;\n                connIdx < newState.connections.length;\n                connIdx++\n              ) {\n                if (\n                  newState.connections[connIdx].from.nodeIndex === i ||\n                  newState.connections[connIdx].to.nodeIndex === i\n                ) {\n                  newState = update(newState, {\n                    connections: { $splice: [[connIdx, 1]] }\n                  });\n                  wasConnectionDeleted = true;\n                  break;\n                }\n              }\n            }\n\n            // Decrement node indexes in connections by one if > i\n            updateObject = {};\n            // eslint-disable-next-line\n            newState.connections.map((value, index) => {\n              updateObject[index] = {\n                to: {\n                  nodeIndex: {\n                    $set:\n                      value.to.nodeIndex > i\n                        ? value.to.nodeIndex - 1\n                        : value.to.nodeIndex\n                  }\n                },\n                from: {\n                  nodeIndex: {\n                    $set:\n                      value.from.nodeIndex > i\n                        ? value.from.nodeIndex - 1\n                        : value.from.nodeIndex\n                  }\n                }\n              };\n              return null;\n            });\n            newState = update(newState, {\n              connections: {\n                ...updateObject\n              }\n            });\n\n            wasSomethingDeleted = true;\n            break;\n          }\n        }\n      }\n\n      // Delete selected connections\n      wasSomethingDeleted = true;\n      while (wasSomethingDeleted) {\n        wasSomethingDeleted = false;\n        for (i = 0; i < newState.connections.length; i++) {\n          if (newState.connections[i].isSelected) {\n            // Delete at a specific index, no matter what value is in it\n            newState = update(newState, { connections: { $splice: [[i, 1]] } });\n            wasSomethingDeleted = true;\n            break;\n          }\n        }\n      }\n      nodeDiffSinceLast(newState);\n      break;\n    case SELECT_NODE:\n      console.log(\"SELECT_NODE\", action.nodeIndex, state);\n      newState = update(state, {\n        nodes: {\n          [action.nodeIndex]: {\n            isSelected: { $set: true }\n          }\n        }\n      });\n      break;\n    case CREATE_NODE:\n      console.log(\"CREATE_NODE\", action.x, action.y, action);\n      newState = update(state, {\n        nodes: { $push: [state.nodeTemplates[action.index]] }\n      });\n      newState = update(newState, {\n        nodes: {\n          [newState.nodes.length - 1]: {\n            position: {\n              x: {\n                $set: action.x - state.nodeTemplates[action.index].width / 2\n              },\n              y: { $set: action.y - 10 }\n            },\n            id: { $set: action.nodeId }\n          }\n        }\n      });\n      console.log(\"state after \", newState);\n      nodeDiffSinceLast(newState);\n      break;\n    case DRAG_STOP:\n      newState = state;\n      break;\n    case CONFIRM_NODE:\n      console.log(\"CONFIRM_NODE\", action.nodeId, action.sessionId, action);\n      var nodeIndex = findNodeIndexWithId(state, action.nodeId);\n      console.log(\"nodeIndex\", nodeIndex);\n      newState = update(state, {\n        currentSessionID: { $set: action.sessionId },\n        nodes: {\n          [nodeIndex]: {\n            nodeConfirmedInSessionWithID: { $set: action.sessionId }\n          }\n        }\n      });\n      break;\n    case CONFIRM_CONNECTION:\n      console.log(\"CONFIRM_CONNECTION\", action.sessionId, action);\n      newState = state;\n      var connectionIndexes = findConnectionIndexesWithIds(\n        state,\n        action.fromNodeId,\n        action.toNodeId\n      );\n      console.log(\"connectionIndexes\", connectionIndexes);\n      connectionIndexes.forEach(ci => {\n        newState = update(newState, {\n          currentSessionID: { $set: action.sessionId },\n          connections: {\n            [ci]: {\n              confirmedInSessionWithID: { $set: action.sessionId }\n            }\n          }\n        });\n      });\n      break;\n    case OUTPORT_DRAG_STARTED:\n      console.log(\"OUTPORT_DRAG_STARTED\", action.nodeIndex, action.portIndex);\n      newState = update(state, {\n        isDragInProgress: {\n          $set: true\n        },\n        dragPayload: {\n          $set: {\n            type: payLoadTypeOutport,\n            nodeIndex: action.nodeIndex,\n            portIndex: action.portIndex\n          }\n        }\n      });\n      break;\n    case INPORT_DROP:\n      console.log(\"INPORT_DROP\", action.nodeIndex, action.portIndex);\n      newState = state;\n      if (\n        state.isDragInProgress &&\n        state.dragPayload.type === payLoadTypeOutport\n      ) {\n        newState = connectPorts(\n          newState,\n          state.dragPayload.nodeIndex,\n          state.dragPayload.portIndex,\n          action.nodeIndex,\n          action.portIndex\n        );\n      }\n      newState = clearDragState(newState);\n      nodeDiffSinceLast(newState);\n      break;\n    case DRAG_CANCELLED:\n      // console.log(\"DRAG_CANCELLED\");\n      newState = clearDragState(state);\n      break;\n    case DRAG_MOUSE_POSITION:\n      // console.log(\"DRAG_MOUSE_POSITION\", action.x, action.y);\n      newState = update(state, {\n        dragMousePosition: {\n          x: { $set: action.x },\n          y: { $set: action.y }\n        }\n      });\n      break;\n    case SELECT_CONNECTION:\n      // console.log(\"SELECT_CONNECTION\", action.connectionIndex);\n      newState = update(state, {\n        connections: {\n          [action.connectionIndex]: {\n            isSelected: { $set: true }\n          }\n        }\n      });\n      break;\n    case SELECT_CLEAR:\n      // console.log(\"SELECT_CLEAR\");\n      updateObject = {};\n      state.nodes.map((value, index) => {\n        updateObject[index] = {\n          isSelected: { $set: false }\n        };\n        return null;\n      });\n      newState = update(state, {\n        nodes: {\n          ...updateObject\n        }\n      });\n\n      updateObject = {};\n      state.connections.map((value, index) => {\n        updateObject[index] = {\n          isSelected: { $set: false }\n        };\n        return null;\n      });\n      newState = update(newState, {\n        connections: {\n          ...updateObject\n        }\n      });\n      break;\n    case POSITION_NODE:\n      newState = update(state, {\n        nodes: {\n          [action.index]: {\n            position: {\n              x: { $set: action.position.x },\n              y: { $set: action.position.y }\n            }\n          }\n        }\n      });\n      break;\n    case POSITION_EVERY_OTHER_NODE:\n      deltaX = action.position.x - state.nodes[action.index].position.x;\n      deltaY = action.position.y - state.nodes[action.index].position.y;\n      updateObject = {};\n      state.nodes.map((value, index) => {\n        if (index % 2 === 0) {\n          updateObject[index] = {\n            position: {\n              x: { $set: state.nodes[index].position.x + deltaX },\n              y: { $set: state.nodes[index].position.y + deltaY }\n            }\n          };\n        }\n        return null;\n      });\n      newState = update(state, {\n        nodes: {\n          [action.index]: {\n            position: {\n              x: { $set: action.position.x },\n              y: { $set: action.position.y }\n            }\n          },\n          ...updateObject\n        }\n      });\n      break;\n    case POSITION_TEXT_NODE:\n      newState = update(state, {\n        textNode: {\n          x: { $set: action.position.x },\n          y: { $set: action.position.y }\n        }\n      });\n      break;\n    case POSITION_IMG_NODE:\n      newState = update(state, {\n        imgNode: {\n          x: { $set: action.position.x },\n          y: { $set: action.position.y }\n        }\n      });\n      break;\n    case TOGGLE_GRAPHICS:\n      var newValue = state.pureHTMLgraph ? false : true;\n      newState = update(state, {\n        pureHTMLgraph: { $set: newValue }\n      });\n      break;\n    case RESET_NORMAL:\n      oldSessionId = state.currentSessionID;\n      newState = InitialState(false);\n      newState = update(newState, {\n        currentSessionID: { $set: oldSessionId }\n      });\n      break;\n    case RESET_STRESS_TEST:\n      oldSessionId = state.currentSessionID;\n      newState = InitialState(true);\n      newState = update(newState, {\n        currentSessionID: { $set: oldSessionId }\n      });\n      break;\n    case CONNECT_PORTS:\n      console.log(\"CONNECT_PORTS reducer\");\n      newState = connectPorts(\n        state,\n        action.fromNodeIndex,\n        action.fromPortIndex,\n        action.toNodeIndex,\n        action.toPortIndex\n      );\n      newState = clearDragState(newState);\n      break;\n    case SET_NODE_TEMPLATE_LIST:\n      console.log(\"SET_NODE_TEMPLATE_LIST\");\n      newState = update(state, {\n        nodeTemplates: { $set: action.data.nodeTemplates }\n      });\n      break;\n    case SET_CURRENT_SESSIONID:\n      console.log(\"SET_CURRENT_SESSIONID\", action);\n      newState = update(state, {\n        currentSessionID: { $set: action.id }\n      });\n      break;\n    case RECONNECT_SERVER:\n      // Connection was reset in action creator\n      newState = update(state, {\n        serverGraph: { nodes: { $set: [] }, edges: { $set: [] } }\n      });\n      break;\n    case SET_GRAPH_FROM_SERVER:\n      newState = newState = update(state, {\n        serverGraph: { $set: action.graph }\n      });\n      break;\n    default:\n      console.log(\"default \", state);\n      newState = state;\n      break;\n  }\n\n  //  console.log(\"newState  \", newState);\n  return newState;\n}\n","import React from \"react\";\n\nexport class NodeList extends React.Component {\n  shouldComponentUpdate(newProps, newState) {\n    if (this.props.templates.length !== newProps.templates.length) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button onClick={this.props.onLoadDefault}>Load default</button>\n        <button onClick={this.props.onLoadOther}>Load many</button>\n        {this.props.templates.map((value, index) => {\n          return (\n            <div\n              key={index}\n              className=\"nodelistitem\"\n              onClick={() => this.props.onCreateNode(index, value.title)}\n              draggable\n              onDragStart={e => {\n                //console.log(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n\n                var payLoadString = JSON.stringify({\n                  type: \"CREATE_NODE\",\n                  templateIndex: index,\n                  title: value.title\n                });\n                console.log(\"drag start\", payLoadString);\n                e.dataTransfer.setData(\"text/plain\", payLoadString);\n              }}\n            >\n              {value.title.substring(0, 20)}\n            </div>\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class BezierCurve extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const {\n      isSelected,\n      isConfirmed,\n      connectionIndex,\n      curveColor,\n      curveWidth,\n      start,\n      end,\n      c1,\n      c2\n    } = this.props;\n    return (\n      nextProps.connectionIndex !== connectionIndex ||\n      nextProps.isSelected !== isSelected ||\n      nextProps.isConfirmed !== isConfirmed ||\n      nextProps.curveColor !== curveColor ||\n      nextProps.curveWidth !== curveWidth ||\n      nextProps.start.x !== start.x ||\n      nextProps.start.y !== start.y ||\n      nextProps.end.x !== end.x ||\n      nextProps.end.y !== end.y ||\n      nextProps.c1.x !== c1.x ||\n      nextProps.c1.y !== c1.y ||\n      nextProps.c2.x !== c2.x ||\n      nextProps.c2.y !== c2.y\n    );\n  }\n\n  render() {\n    const {\n      isSelected,\n      isConfirmed,\n      connectionIndex,\n      curveColor,\n      curveWidth,\n      start,\n      end,\n      c1,\n      c2,\n      onSelectConnection\n    } = this.props;\n    const curve = `M${start.x},${start.y} C${c1.x},${c1.y} ${c2.x},${c2.y} ${end.x},${end.y}`;\n\n    return (\n      <path\n        onMouseDown={e => {\n          e.stopPropagation();\n          console.log(\"BezierCurve click\");\n          onSelectConnection(connectionIndex);\n        }}\n        fill=\"none\"\n        stroke={isConfirmed ? curveColor : \"red\"}\n        strokeDasharray={isSelected ? 4 : 0}\n        strokeWidth={curveWidth}\n        d={curve}\n      />\n    );\n  }\n}\n\nBezierCurve.propTypes = {\n  connectionIndex: PropTypes.number.isRequired,\n  curveColor: PropTypes.string.isRequired,\n  curveWidth: PropTypes.number.isRequired,\n  onSelectConnection: PropTypes.func.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  isConfirmed: PropTypes.bool.isRequired,\n  start: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  end: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  c1: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  c2: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\n\nexport default function(props) {\n  return (\n    <Draggable\n      key={props.key}\n      scale={props.scale}\n      position={props.position}\n      onDrag={props.onDrag}\n    >\n      <div className=\"box no-cursor\">\n        <svg className=\"graphics inport\">\n          <circle\n            className=\"circle\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            cx=\"15\"\n            cy=\"15\"\n            r=\"15\"\n            style={{\n              stroke: \"#000000\",\n              strokeWidth: 3,\n              fill: \"#66ff66\"\n            }}\n            opacity=\".7\"\n          />\n        </svg>\n\n        <div className=\"drag\">{props.title}</div>\n        <h3>{/* <InlineMath>\\int_0^\\infty x^2 dx</InlineMath> */}</h3>\n\n        <svg className=\"graphics outport\" width=\"30\" height=\"30\">\n          <circle\n            className=\"circle\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            cx=\"15\"\n            cy=\"15\"\n            r=\"15\"\n            style={{\n              stroke: \"#000000\",\n              strokeWidth: 3,\n              fill: \"#ff0000\"\n            }}\n            opacity=\".7\"\n          />\n        </svg>\n      </div>\n    </Draggable>\n  );\n}\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\nimport \"./InOutNode.css\";\nimport PropTypes from \"prop-types\";\n\nvar rowHeight = 16;\nvar portWidth = 15;\n\nfunction InPort(props) {\n  const { name, nodeIndex, portIndex } = props;\n  return (\n    <div className=\"port_area in\">\n      <div\n        className=\"port noselect\"\n        // ??? Add onTouchUp onTouchMove onTouchDown that do the same things to support phones.\n        onMouseUp={e => {\n          e.stopPropagation();\n          console.log(\"mouse up in in port\");\n          props.onInportDrop(nodeIndex, portIndex);\n        }}\n      >\n        →\n      </div>\n      <header className=\"porttext in noselect\">{name}</header>\n      <div className=\"noport noselect\"></div>\n    </div>\n  );\n}\n\nfunction OutPort(props) {\n  const { name } = props;\n  return (\n    <div className=\"port_area out\">\n      <div className=\"noport noselect\"></div>\n      <header className=\"porttext out noselect\">{name}</header>\n      <div\n        className=\"port noselect\"\n        onMouseDown={e => {\n          console.log(\"outport onmousedown. Begin out port drag\");\n          props.onOutportDragStarted();\n        }}\n      >\n        →\n      </div>\n    </div>\n  );\n}\n\nexport function inPortRelativePosition(node, inPortIndex) {\n  return {\n    x: portWidth / 2,\n    y: rowHeight + rowHeight * inPortIndex + rowHeight / 2\n  };\n}\n\nexport function outPortRelativePosition(node, outPortIndex) {\n  return {\n    x: node.width - portWidth / 2,\n    y:\n      rowHeight +\n      node.inputPorts.length * rowHeight +\n      outPortIndex * rowHeight +\n      rowHeight / 2\n  };\n}\n\nexport class InOutNode extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const {\n      nodeIndex,\n      scale,\n      positionX,\n      positionY,\n      width,\n      isSelected,\n      currentSessionID,\n      nodeConfirmedInSessionWithID\n    } = this.props;\n    return (\n      nextProps.nodeIndex !== nodeIndex ||\n      nextProps.currentSessionID !== currentSessionID ||\n      nextProps.scale !== scale ||\n      nextProps.nodeConfirmedInSessionWithID !== nodeConfirmedInSessionWithID ||\n      nextProps.positionX !== positionX ||\n      nextProps.positionY !== positionY ||\n      nextProps.width !== width ||\n      nextProps.isSelected !== isSelected\n    );\n  }\n\n  render() {\n    const {\n      title,\n      nodeIndex,\n      currentSessionID,\n      nodeConfirmedInSessionWithID,\n      scale,\n      positionX,\n      positionY,\n      onDrag,\n      width,\n      inputPorts,\n      outputPorts,\n      isSelected,\n      onSelectNode,\n      onOutportDragStarted,\n      onInportDrop,\n      onDragStop\n    } = this.props;\n    var classes = [\"node\"];\n    if (isSelected) {\n      classes.push(\"nodeselected\");\n    }\n    var isConfirmedInThisSession =\n      currentSessionID === nodeConfirmedInSessionWithID;\n    if (!isConfirmedInThisSession) {\n      classes.push(\"notconfirmed\");\n    }\n    return (\n      <Draggable\n        scale={scale}\n        position={{ x: positionX, y: positionY }}\n        onDrag={onDrag}\n        onStop={onDragStop}\n        handle=\"header\"\n        onMouseDown={e => {\n          e.stopPropagation();\n          console.log(\"node clicked\");\n          onSelectNode(nodeIndex);\n        }}\n      >\n        <div\n          className={classes.join(\" \")}\n          style={{\n            height: `${(inputPorts.length + outputPorts.length + 1) *\n              (rowHeight - 1)}px`,\n            width: `${width}px`\n          }}\n        >\n          <div className=\"main_area\">\n            <div className=\"addin noselect\">+</div>\n            <header className=\"nodetext noselect\">{title}</header>\n            <div className=\"addout noselect\">+</div>\n          </div>\n          {inputPorts.map((port, portIndex) => {\n            return (\n              <InPort\n                key={portIndex}\n                name={port.name}\n                nodeIndex={nodeIndex}\n                portIndex={portIndex}\n                onInportDrop={onInportDrop}\n              />\n            );\n          })}\n\n          {outputPorts.map((port, portIndex) => {\n            return (\n              <OutPort\n                key={portIndex}\n                name={port.name}\n                nodeIndex={nodeIndex}\n                portIndex={portIndex}\n                onOutportDragStarted={() => {\n                  console.log(\"onOutportDragStarted\");\n                  onOutportDragStarted(nodeIndex, portIndex);\n                }}\n              />\n            );\n          })}\n        </div>\n      </Draggable>\n    );\n  }\n}\n\nInOutNode.propTypes = {\n  title: PropTypes.string.isRequired,\n  nodeIndex: PropTypes.number.isRequired,\n  currentSessionID: PropTypes.string.isRequired,\n  nodeConfirmedInSessionWithID: PropTypes.string.isRequired,\n  scale: PropTypes.number.isRequired,\n  positionX: PropTypes.number.isRequired,\n  positionY: PropTypes.number.isRequired,\n  inputPorts: PropTypes.any.isRequired,\n  outputPorts: PropTypes.any.isRequired,\n  width: PropTypes.number.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onDrag: PropTypes.func.isRequired,\n  onDragStop: PropTypes.func.isRequired,\n  onSelectNode: PropTypes.func.isRequired,\n  onOutportDragStarted: PropTypes.func.isRequired,\n  onInportDrop: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { InlineMath } from \"react-katex\";\nimport BezierCurve from \"./BezierCurve\";\nimport {\n  positionNodeAction,\n  positionEveryOtherNodeAction,\n  positionTextNodeAction,\n  positionImgNodeAction,\n  selectNodeAction,\n  selectConnectionAction,\n  selectClearAction,\n  createNodeAction,\n  outportDragStartedAction,\n  dragCancelledAction,\n  inportDropAction,\n  dragMousePositionAction,\n  dragStopAction\n} from \"../redux/actions\";\nimport HTMLNode from \"./HTMLNode\";\nimport {\n  InOutNode,\n  inPortRelativePosition,\n  outPortRelativePosition\n} from \"./InOutNode\";\nimport { payLoadTypeOutport } from \"../redux/reducers\";\nimport { invalidMousePosition } from \"../InitialState\";\n\nclass GraphicsAreaPureHTML extends React.Component {\n  render() {\n    return (\n      <div\n        id=\"nodearea\"\n        className=\"nodearea bgpattern\"\n        onMouseDown={e => {\n          console.log(\"graphicsarea clicked\");\n          this.props.onSelectClear();\n        }}\n        onMouseUp={this.props.onDragCancelled}\n        onMouseMove={e => {\n          var rect = document\n            .getElementById(\"nodearea\")\n            .getBoundingClientRect();\n          var x = (e.clientX - rect.left) / this.props.scale; //x position within the element.\n          var y = (e.clientY - rect.top) / this.props.scale; //y position within the element.\n\n          if (this.props.isDragInProgress) {\n            // console.log(\"mouse move\", x, y);\n            this.props.onDragMousePosition(x, y);\n          }\n        }}\n        onDragOver={e => {\n          e.preventDefault();\n        }}\n        onDrop={e => {\n          if (e.dataTransfer != null) {\n            var textData = e.dataTransfer.getData(\"text\");\n            console.log(\"textData\", textData);\n            if (textData != null && textData !== \"\") {\n              var payLoad = JSON.parse(textData);\n              console.log(\"dropped on nodearea\", e, e.clientX, e.clientY);\n              if (payLoad.type === \"CREATE_NODE\") {\n                var rect = e.target.getBoundingClientRect();\n                var x = (e.clientX - rect.left) / this.props.scale; //x position within the element.\n                var y = (e.clientY - rect.top) / this.props.scale; //y position within the element.\n\n                this.props.onCreateNode(\n                  x,\n                  y,\n                  payLoad.templateIndex,\n                  payLoad.title\n                );\n              }\n            }\n          }\n        }}\n      >\n        <div\n          className=\"graphicsarea\"\n          style={{ transform: \"scale(\" + this.props.scale + \")\" }}\n        >\n          <svg\n            className=\"arrowsvg\"\n            style={{ position: \"relative\", top: \"0px\", left: \"0px\" }}\n          >\n            {// Draw a curve during drag\n            (() => {\n              if (\n                this.props.isDragInProgress &&\n                this.props.dragPayload.type === payLoadTypeOutport &&\n                this.props.dragMousePosition.x !== invalidMousePosition\n              ) {\n                var fromNode = this.props.nodes[\n                  this.props.dragPayload.nodeIndex\n                ];\n                var fromX =\n                  fromNode.position.x +\n                  outPortRelativePosition(\n                    fromNode,\n                    this.props.dragPayload.portIndex\n                  ).x;\n                var fromY =\n                  fromNode.position.y +\n                  outPortRelativePosition(\n                    fromNode,\n                    this.props.dragPayload.portIndex\n                  ).y;\n                var toX = this.props.dragMousePosition.x;\n                var toY = this.props.dragMousePosition.y;\n                return (\n                  <BezierCurve\n                    key={0}\n                    isSelected={false}\n                    connectionIndex={0}\n                    onSelectConnection={() => {}}\n                    start={{ x: fromX, y: fromY }}\n                    end={{ x: toX, y: toY }}\n                    c1={{\n                      x: fromX + (fromNode.width * 3) / 4,\n                      y: fromY\n                    }}\n                    c2={{\n                      x: toX - (fromNode.width * 3) / 4,\n                      y: toY\n                    }}\n                    curveColor=\"black\"\n                    curveWidth={3}\n                  />\n                );\n              }\n            })()}\n\n            {// Draw all connections between nodes\n            this.props.connections.map((key, index) => {\n              var fromNode = this.props.nodes[key.from.nodeIndex];\n              var toNode = this.props.nodes[key.to.nodeIndex];\n              var fromX =\n                fromNode.position.x +\n                outPortRelativePosition(fromNode, key.from.index).x;\n              var fromY =\n                fromNode.position.y +\n                outPortRelativePosition(fromNode, key.from.index).y;\n              var toX =\n                toNode.position.x +\n                inPortRelativePosition(toNode, key.to.index).x;\n              var toY =\n                toNode.position.y +\n                inPortRelativePosition(toNode, key.to.index).y;\n              return (\n                <BezierCurve\n                  key={index}\n                  isSelected={key.isSelected}\n                  isConfirmed={\n                    this.props.currentSessionID === key.confirmedInSessionWithID\n                  }\n                  connectionIndex={index}\n                  onSelectConnection={this.props.onSelectConnection}\n                  start={{ x: fromX, y: fromY }}\n                  end={{ x: toX, y: toY }}\n                  c1={{\n                    x: fromX + (fromNode.width * 3) / 4,\n                    y: fromY\n                  }}\n                  c2={{\n                    x: toX - (toNode.width * 3) / 4,\n                    y: toY\n                  }}\n                  curveColor=\"black\"\n                  curveWidth={3}\n                />\n              );\n            })}\n          </svg>\n\n          {this.props.nodes.map((key, index) =>\n            key.htmlNode ? (\n              <HTMLNode\n                title={key.title}\n                key={index}\n                scale={this.props.scale}\n                position={key.position}\n                onDrag={(e, position) => {\n                  this.props.onSetPosition(index, position, false);\n                }}\n              />\n            ) : (\n              <InOutNode\n                title={key.title}\n                key={index}\n                nodeIndex={index}\n                currentSessionID={this.props.currentSessionID}\n                nodeConfirmedInSessionWithID={key.nodeConfirmedInSessionWithID}\n                scale={this.props.scale}\n                positionX={key.position.x}\n                positionY={key.position.y}\n                inputPorts={key.inputPorts}\n                outputPorts={key.outputPorts}\n                width={key.width}\n                isSelected={key.isSelected}\n                onDrag={(e, position) => {\n                  this.props.onSetPosition(\n                    index,\n                    position,\n                    this.props.stressTest\n                  );\n                }}\n                onDragStop={this.props.onDragStop}\n                onSelectNode={this.props.onSelectNode}\n                onOutportDragStarted={this.props.onOutportDragStarted}\n                onInportDrop={(nodeIndex, portIndex) => {\n                  if (this.props.isDragInProgress) {\n                    this.props.onInportDrop(\n                      nodeIndex,\n                      portIndex,\n                      this.props.isDragInProgress,\n                      this.props.dragPayload,\n                      this.props.nodes[this.props.dragPayload.nodeIndex].id,\n                      this.props.nodes[nodeIndex].id\n                    );\n                  }\n                }}\n              />\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  nodes: state.present.nodes,\n  connections: state.present.connections,\n  scale: state.present.scale,\n  currentSessionID: state.present.currentSessionID,\n  textNode: state.present.textNode,\n  imgNode: state.present.imgNode,\n  stressTest: state.present.stressTest,\n  isDragInProgress: state.present.isDragInProgress,\n  dragPayload: state.present.dragPayload,\n  dragMousePosition: state.present.dragMousePosition\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetPosition: (index, position, stressTest) => {\n    if (stressTest) {\n      dispatch(positionEveryOtherNodeAction(index, position));\n    } else {\n      dispatch(positionNodeAction(index, position));\n    }\n  },\n  onSetTextNodePosition: position => dispatch(positionTextNodeAction(position)),\n  onSetImgNodePosition: position => dispatch(positionImgNodeAction(position)),\n  onSelectNode: nodeIndex => dispatch(selectNodeAction(nodeIndex)),\n  onSelectConnection: connectionIndex =>\n    dispatch(selectConnectionAction(connectionIndex)),\n  onSelectClear: () => dispatch(selectClearAction()),\n  onCreateNode: (x, y, index, title) =>\n    dispatch(createNodeAction(x, y, index, title)),\n  onOutportDragStarted: (nodeIndex, portIndex) => {\n    dispatch(outportDragStartedAction(nodeIndex, portIndex));\n  },\n  onInportDrop: (\n    nodeIndex,\n    portIndex,\n    isDragInProgress,\n    dragPayload,\n    fromNodeId,\n    toNodeId\n  ) =>\n    dispatch(\n      inportDropAction(\n        nodeIndex,\n        portIndex,\n        isDragInProgress,\n        dragPayload,\n        fromNodeId,\n        toNodeId\n      )\n    ),\n  onDragStop: () => dispatch(dragStopAction()),\n  onDragCancelled: () => dispatch(dragCancelledAction()),\n  onDragMousePosition: (x, y) => dispatch(dragMousePositionAction(x, y))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GraphicsAreaPureHTML);\n","import React from \"react\";\nimport $ from \"jquery\";\nwindow.jQuery = window.$ = $;\nrequire(\"jqueryui\");\nvar draw2d = require(\"draw2d\");\n\nexport default class CanvasDraw2D extends React.Component {\n  componentDidMount() {\n    this.renderCanvas(\"mycanvasdraw2d\");\n  }\n\n  renderCanvas(canvasId) {\n    var canvas = new draw2d.Canvas(canvasId);\n\n    // create and add two nodes which contains Ports (In and OUT)\n    //\n    var start = new draw2d.shape.node.Start();\n    var end = new draw2d.shape.node.End();\n\n    // ...add it to the canvas\n    canvas.add(start, 50, 50);\n    canvas.add(new draw2d.shape.node.Start(), 50, 250);\n    canvas.add(end, 230, 150);\n\n    // Create a Connection and connect the Start and End node\n    //\n    var c = new draw2d.Connection();\n    c.setRouter(new draw2d.layout.connection.SplineConnectionRouter());\n\n    // Set the endpoint decorations for the connection\n    //\n    c.setSourceDecorator(new draw2d.decoration.connection.BarDecorator());\n    c.setTargetDecorator(new draw2d.decoration.connection.DiamondDecorator());\n    // Connect the endpoints with the start and end port\n    //\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n\n    // and finally add the connection to the canvas\n    canvas.add(c);\n\n    var figure = new draw2d.shape.analog.OpAmp();\n    canvas.add(figure, 350, 110);\n\n    var p1 = new draw2d.shape.basic.Polygon();\n    var p2 = new draw2d.shape.basic.Polygon();\n\n    canvas.add(p1, 450, 150);\n    canvas.add(p2, 450, 200);\n\n    p2.setBackgroundColor(\"#f0f000\");\n    p2.setAlpha(0.7);\n    p2.setDimension(100, 60);\n\n    canvas.setCurrentSelection(p2);\n\n    var shape = new draw2d.shape.basic.Text();\n\n    shape.setText(\"This is a simple text with some loooooong word in.\");\n    shape.setBackgroundColor(\"#f0f000\");\n\n    canvas.add(shape, 550, 10);\n\n    var lshape = new draw2d.shape.basic.Label();\n\n    lshape.setText(\"This is a label.\");\n    lshape.setBackgroundColor(\"#f0f000\");\n\n    canvas.add(lshape, 350, 70);\n\n    var pie = new draw2d.shape.diagram.Pie(80, 80);\n    pie.setWidth(100);\n    pie.setData([30, 60, 122, 4]);\n    canvas.add(pie, 600, 160);\n\n    var postit = new draw2d.shape.note.PostIt();\n    postit.installEditor(new draw2d.ui.LabelInplaceEditor());\n    postit.setColor(\"#000000\");\n    postit.setPadding(20);\n\n    postit.setText(\"This is simple sticky note\\nDouble click to edit.\");\n\n    canvas.add(postit, 700, 10);\n\n    var label = new draw2d.shape.basic.Label();\n\n    label.installEditor(new draw2d.ui.LabelInplaceEditor());\n    label.setText(\"Double click me to edit\");\n\n    canvas.add(label, 50, 10);\n\n    // Override the default connection type. This is used during drag&drop operations of ports.\n    //\n    draw2d.Connection.createConnection = function(sourcePort, targetPort) {\n      // return my special kind of connection\n      var con = new draw2d.Connection();\n      con.setRouter(new draw2d.layout.connection.FanConnectionRouter());\n      return con;\n    };\n\n    // create and add two nodes which contains Ports (In and OUT)\n    //\n    start = new draw2d.shape.node.Start();\n    end = new draw2d.shape.node.End();\n\n    // ...add it to the canvas\n    canvas.add(start, 50, 250);\n    canvas.add(end, 230, 280);\n\n    // first Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // second Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // third Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // fourth Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // Zoom mose wheel support\n    canvas.installEditPolicy(new draw2d.policy.canvas.WheelZoomPolicy());\n    shape = new draw2d.shape.basic.Text({\n      text: \"Use the mouse wheel + SHIFT to zoom\"\n    });\n\n    canvas.add(shape, 400, 300);\n\n    // Register some callbacks\n    canvas.on(\"select\", function(emitter, event) {\n      if (event.figure !== null) {\n        console.log(\"figure selected\");\n      } else {\n        console.log(\"selection cleared\");\n      }\n    });\n\n    $(\"#mycanvasdraw2d\").click(function(ev) {\n      console.log(\"Mouse click:\" + ev.clientX + \",\" + ev.clientY);\n    });\n\n    // Log state to console\n    var writer = new draw2d.io.json.Writer();\n    writer.marshal(canvas, json => console.log(json));\n\n    // Custom shape\n    {\n      class CustomFigure extends draw2d.SVGFigure {\n        constructor(attr) {\n          super(attr);\n\n          this.index = 0;\n          this.svgs = [];\n\n          this.svgs.push(\n            '<svg xmlns=\"http://www.w3.org/2000/svg\">' +\n              '  <path stroke=\"#000\" fill=\"#FFF\" stroke-miterlimit=\"4\" d=\"m0,49.842l0,-49.742l49.982,0l0,49.742l-49.982,0z\" id=\"polygon3873\"/>' +\n              '  <text text-anchor=\"middle\" fill=\"#000000\" font-family=\"Sans-serif\" x=\"24.81563\" y=\"26.50938\" xml:space=\"preserve\" font-size=\"8px\" id=\"svg_1\">Click me</text>' +\n              \"</svg>\"\n          );\n\n          this.svgs.push(\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">' +\n              '<rect x=\"14\" y=\"23\" width=\"20\" height=\"20\" fill=\"lime\" stroke=\"black\" />' +\n              \"</svg>\"\n          );\n\n          this.on(\n            \"click\",\n            function() {\n              this.index = ++this.index % this.svgs.length;\n              this.setSVG(this.svgs[this.index], 500);\n            },\n            this\n          );\n        }\n\n        getSVG() {\n          return this.svgs[0];\n        }\n      }\n\n      var fig = new CustomFigure();\n\n      canvas.add(fig, 100, 100);\n    }\n  }\n\n  render() {\n    return <div id=\"mycanvasdraw2d\"></div>;\n  }\n}\n\nexport class GraphicsAreaDraw2D extends React.Component {\n  render() {\n    return (\n      <div className=\"graphicsarea\" style={{ transform: \"scale(1)\" }}>\n        <CanvasDraw2D className=\"canvas2darea\" />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { websocketClientSetup } from \"./websocketClientUtils\";\n\nimport \"./App.css\";\nimport \"./NodeList.css\";\nimport { NodeList } from \"./components/NodeList\";\n\nimport GraphicsAreaPureHTML from \"./components/GraphicsAreaPureHTML\";\nimport GraphicsAreaDraw2D from \"./components/CanvasDraw2D\";\n\nimport \"katex/dist/katex.min.css\";\nimport FileSaver from \"file-saver\";\n\nimport TopBar from \"./components/TopBar\";\nimport {\n  zoomAction,\n  deleteSelectedAction,\n  toggleGraphicsLibraryAction,\n  resetStateNormalAction,\n  resetStateStressTestAction,\n  loadDefaultNodeTemplatesAsyncAction,\n  loadOtherNodeTemplatesAsyncAction,\n  reconnectAction,\n  syncAction,\n  loadStateFromStringAction,\n  createNodeAction\n} from \"./redux/actions\";\nimport { ActionCreators } from \"redux-undo\";\nimport ServerGraph from \"./components/ServerGraph\";\n\nvar reader = new FileReader();\nvar file;\n\nclass App extends React.Component {\n  componentDidMount() {\n    document.body.addEventListener(\"keydown\", e => {\n      console.log(\"key down \", e, this);\n      if (e.key === \"Backspace\" || e.key === \"Delete\") {\n        this.props.deleteSelected(this.props.state);\n      }\n    });\n\n    websocketClientSetup();\n  }\n\n  componentWillUnmount() {\n    //document.body.removeEventListener(\"keydown\", ???);\n  }\n\n  render() {\n    return (\n      <div className=\"App noselect\">\n        <div className=\"messagerow\">\n          {this.props.state.currentSessionID === \"\"\n            ? \"Server disconnected\"\n            : \"Server online\"}\n          {this.props.state.isDragInProgress === true\n            ? \" Draggning \" + this.props.state.dragPayload.type\n            : \"\"}\n        </div>\n        <div\n          className=\"buttonrow\"\n          style={{ display: \"flex\", justifyContent: \"space-around\" }}\n        >\n          <button onClick={this.props.reconnect}>New session</button>\n          <button onClick={this.props.onUndo}>\n            Undo ({this.props.sizePast})\n          </button>\n          <button onClick={this.props.onRedo}>\n            Redo ({this.props.sizeFuture})\n          </button>\n          <button\n            onClick={() => {\n              var input = document.createElement(\"input\");\n              input.type = \"file\";\n\n              input.onchange = e => {\n                console.log(\"File loaded onchange\");\n                // getting a hold of the file reference\n                file = e.target.files[0];\n\n                // setting up the reader\n                reader.readAsText(file, \"UTF-8\");\n\n                // here we tell the reader what to do when it's done reading...\n                reader.onload = readerEvent => {\n                  console.log(\"File loaded\");\n                  var content = readerEvent.target.result; // this is the content!\n                  this.props.onLoadStateFromString(content);\n                };\n              };\n              input.click();\n            }}\n          >\n            Load state\n          </button>\n          <button\n            onClick={() => {\n              var stateString = JSON.stringify(this.props.state, null, 2);\n              var blob = new Blob([stateString], {\n                type: \"text/plain;charset=utf-8\"\n              });\n              FileSaver.saveAs(blob, \"state.json\");\n            }}\n          >\n            Save state\n          </button>\n\n          <button\n            onClick={() =>\n              this.props.sync(\n                this.props.state.currentSessionID,\n                this.props.state.nodes,\n                this.props.state.connections\n              )\n            }\n          >\n            Sync\n          </button>\n          <button onClick={() => this.props.deleteSelected(this.props.state)}>\n            Del\n          </button>\n          <button onClick={this.props.resetStateNormal}>Some nodes</button>\n          <button onClick={this.props.resetStateStressTest}>Stress test</button>\n          <button onClick={this.props.toggleGraphicsLibrary}>\n            Pure HTML / Draw2D\n          </button>\n        </div>\n        <TopBar\n          className=\"topbar\"\n          showControls={this.props.state.pureHTMLgraph}\n          scale={this.props.state.scale * 100}\n          state={this.props.state}\n          onChange={this.props.onZoomChange}\n        />\n        <div className=\"editor\">\n          <div className=\"nodelist\">\n            <NodeList\n              templates={this.props.state.nodeTemplates}\n              onLoadDefault={this.props.onLoadDefault}\n              onLoadOther={this.props.onLoadOther}\n              onCreateNode={this.props.onCreateNode}\n            />\n          </div>\n          {this.props.state.pureHTMLgraph ? (\n            <GraphicsAreaPureHTML />\n          ) : (\n            <GraphicsAreaDraw2D />\n          )}\n          {this.props.state.currentSessionID === \"\" ? \"\" : <ServerGraph />}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state: state.present,\n  sizePast: state.past.length,\n  sizeFuture: state.future.length\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  deleteSelected: state => dispatch(deleteSelectedAction(state)),\n  onZoomChange: scale => dispatch(zoomAction(scale)),\n  toggleGraphicsLibrary: () => dispatch(toggleGraphicsLibraryAction()),\n  resetStateNormal: () => dispatch(resetStateNormalAction()),\n  resetStateStressTest: () => dispatch(resetStateStressTestAction()),\n  onLoadDefault: () => dispatch(loadDefaultNodeTemplatesAsyncAction()),\n  onLoadOther: () => dispatch(loadOtherNodeTemplatesAsyncAction()),\n  reconnect: () => dispatch(reconnectAction()),\n  sync: (currentSessionID, nodes, connections) => {\n    dispatch(syncAction(currentSessionID, nodes, connections));\n  },\n  onLoadStateFromString: string => dispatch(loadStateFromStringAction(string)),\n  onUndo: () => dispatch(ActionCreators.undo()),\n  onRedo: () => dispatch(ActionCreators.redo()),\n  onCreateNode: (templateIndex, title) =>\n    dispatch(createNodeAction(100, 50, templateIndex, title))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport \"rc-slider/assets/index.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\n\nimport Tooltip from \"rc-tooltip\";\nimport Slider from \"rc-slider\";\nimport { connect } from \"react-redux\";\n\nconst Handle = Slider.Handle;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst TopBar = props => {\n  if (props.showControls) {\n    return (\n      <div className=\"topbar\">\n        <div className=\"zoom\">\n          <Slider\n            min={20}\n            max={150}\n            value={props.scale}\n            handle={handle}\n            onChange={props.onChange}\n          />\n        </div>\n      </div>\n    );\n  } else {\n    return <div className=\"topbar\"></div>;\n  }\n};\n\nexport default connect()(TopBar);\n","import React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport { connect } from \"react-redux\";\nimport { getGraphJSONFromServerAction } from \"../redux/actions\";\nimport Immutable from \"immutable\";\n\nconst events = {\n  select: function(event) {\n    // var { nodes, edges } = event;\n    // console.log(\"Selected nodes:\");\n    // console.log(nodes);\n    // console.log(\"Selected edges:\");\n    // console.log(edges);\n  }\n};\n\nconst options = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: \"#000000\"\n  }\n};\n\nclass ServerGraph extends React.Component {\n  shouldComponentUpdate(newProps) {\n    var newPropsMap = Immutable.fromJS(newProps.serverGraph);\n    var propsMap = Immutable.fromJS({\n      nodes: this.props.serverGraph.nodes,\n      // Remove id: from the edges because it is added for some reason\n      edges: this.props.serverGraph.edges.map(n => {\n        return {\n          from: n.from,\n          to: n.to\n        };\n      })\n    });\n\n    if (propsMap.equals(newPropsMap)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  componentDidMount() {\n    window.setInterval(this.props.onTimer, 5000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval();\n  }\n\n  render() {\n    return (\n      <div className=\"servergraph\">\n        <h1>Server representation</h1>\n        <Graph\n          graph={this.props.serverGraph}\n          options={options}\n          events={events}\n          style={{ height: \"100%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  serverGraph: state.present.serverGraph\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onTimer: () => dispatch(getGraphJSONFromServerAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServerGraph);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport graphEditorReducer from \"./redux/reducers\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport thunk from \"redux-thunk\";\nimport undoable from \"redux-undo\";\nimport { groupByActionTypes, excludeAction } from \"redux-undo\";\nimport { createLogger } from \"redux-logger\";\nimport {\n  POSITION_NODE,\n  DRAG_MOUSE_POSITION,\n  CONFIRM_NODE,\n  DRAG_CANCELLED,\n  SELECT_CLEAR,\n  OUTPORT_DRAG_STARTED,\n  CHANGE_ZOOM,\n  INPORT_DROP,\n  SELECT_NODE,\n  POSITION_EVERY_OTHER_NODE,\n  SET_GRAPH_FROM_SERVER,\n  CONFIRM_CONNECTION\n} from \"./redux/actions\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst logger = createLogger({\n  collapsed: (getState, action) =>\n    action.type === POSITION_NODE || action.type === DRAG_MOUSE_POSITION\n});\n\nexport const store = createStore(\n  undoable(graphEditorReducer, {\n    groupBy: groupByActionTypes([POSITION_EVERY_OTHER_NODE, CHANGE_ZOOM]),\n    filter: excludeAction([\n      POSITION_NODE,\n      CONFIRM_NODE,\n      CONFIRM_CONNECTION,\n      OUTPORT_DRAG_STARTED,\n      INPORT_DROP,\n      DRAG_MOUSE_POSITION,\n      DRAG_CANCELLED,\n      SELECT_CLEAR,\n      SELECT_NODE,\n      SET_GRAPH_FROM_SERVER\n    ])\n  }),\n  composeEnhancer(applyMiddleware(thunk, logger))\n\n  // other store enhancers if any\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}