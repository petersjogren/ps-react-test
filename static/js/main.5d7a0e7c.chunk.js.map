{"version":3,"sources":["redux/actions/index.js","components/BezierCurve.js","components/DraggableForeignObject.js","components/HTMLNode.js","components/InOutNode.js","components/GraphicsAreaPureHTML.js","components/CanvasDraw2D.js","components/TopBar.js","App.js","serviceWorker.js","index.js","redux/reducers/index.js","InitialState.js"],"names":["CHANGE_ZOOM","POSITION_NODE","POSITION_EVERY_OTHER_NODE","POSITION_TEXT_NODE","POSITION_IMG_NODE","TOGGLE_GRAPHICS","BezierCurve","nextProps","this","props","curveColor","curveWidth","start","end","c1","c2","curve","x","y","fill","stroke","strokeWidth","d","React","Component","DraggableForeignObject","scale","onDrag","position","width","height","xmlns","children","key","className","cx","cy","r","style","opacity","title","handle","draggable","e","console","log","nativeEvent","offsetX","offsetY","GraphicsAreaPureHTML","transform","top","left","connections","map","index","fromNode","nodes","from","nodeIndex","toNode","to","imgNode","onSetImgNodePosition","borderStyle","userDrag","userSelect","MozUserSelect","WebkitUserDrag","WebkitUserSelect","msUserSelect","src","url","alt","textNode","onSetTextNodePosition","backgroundColor","text","htmlNode","HTMLNode","onSetPosition","connect","state","dispatch","type","positionEveryOtherNodeAction","positionTextNodeAction","positionImgNodeAction","window","jQuery","$","require","draw2d","CanvasDraw2D","renderCanvas","canvasId","canvas","Canvas","shape","node","Start","End","add","c","Connection","setRouter","layout","connection","SplineConnectionRouter","setSourceDecorator","decoration","BarDecorator","setTargetDecorator","DiamondDecorator","setSource","getOutputPort","setTarget","getInputPort","figure","analog","OpAmp","p1","basic","Polygon","p2","setBackgroundColor","setAlpha","setDimension","setCurrentSelection","Text","setText","lshape","Label","pie","diagram","Pie","setWidth","setData","postit","note","PostIt","installEditor","ui","LabelInplaceEditor","setColor","setPadding","label","createConnection","sourcePort","targetPort","con","FanConnectionRouter","installEditPolicy","policy","WheelZoomPolicy","on","emitter","event","click","ev","clientX","clientY","io","json","Writer","marshal","fig","attr","svgs","push","length","setSVG","SVGFigure","id","wrapperStyle","margin","Handle","Slider","value","dragging","restProps","prefixCls","overlay","visible","placement","showControls","min","max","defaultValue","defaultScale","onChange","tagName","filename","exportFile","JSON","stringify","App","onClick","toggleGraphicsLibrary","pureHTMLgraph","onZoomChange","percent","Boolean","location","hostname","match","store","createStore","newState","deltaX","deltaY","someIndexes","Array","keys","someNodes","Math","cos","sin","inputPorts","name","outputPorts","someConnections","filter","a","activeDrags","deltaPosition","InitialState","action","update","$set","updateObject","newValue","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d7a0e7c.chunk.js","sourcesContent":["export const CHANGE_ZOOM = \"CHANGE_ZOOM\";\nexport const POSITION_NODE = \"POSITION_NODE\";\nexport const POSITION_EVERY_OTHER_NODE = \"POSITION_EVERY_OTHER_NODE\";\nexport const POSITION_TEXT_NODE = \"POSITION_TEXT_NODE\";\nexport const POSITION_IMG_NODE = \"POSITION_IMG_NODE\";\nexport const TOGGLE_GRAPHICS = \"TOGGLE_GRAPHICS\";\n\nexport const zoomAction = percent => ({\n  type: CHANGE_ZOOM,\n  percent\n});\n\nexport const positionNodeAction = (index, position) => ({\n  type: POSITION_NODE,\n  index,\n  position\n});\n\nexport const positionEveryOtherNodeAction = (index, position) => ({\n  type: POSITION_EVERY_OTHER_NODE,\n  index,\n  position\n});\n\nexport const positionTextNodeAction = position => ({\n  type: POSITION_TEXT_NODE,\n  position\n});\n\nexport const positionImgNodeAction = position => ({\n  type: POSITION_IMG_NODE,\n  position\n});\n\nexport const toggleGraphicsLibraryAction = () => ({\n  type: TOGGLE_GRAPHICS\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class BezierCurve extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const { curveColor, curveWidth, start, end, c1, c2 } = this.props;\n    return (\n      nextProps.curveColor !== curveColor ||\n      nextProps.curveWidth !== curveWidth ||\n      nextProps.start !== start ||\n      nextProps.end !== end ||\n      nextProps.c1 !== c1 ||\n      nextProps.c2 !== c2\n    );\n  }\n\n  render() {\n    const { curveColor, curveWidth, start, end, c1, c2 } = this.props;\n    const curve = `M${start.x},${start.y} C${c1.x},${c1.y} ${c2.x},${c2.y} ${end.x},${end.y}`;\n\n    return (\n      <path\n        fill=\"none\"\n        stroke={curveColor}\n        strokeWidth={curveWidth}\n        d={curve}\n      />\n    );\n  }\n}\n\nBezierCurve.propTypes = {\n  curveColor: PropTypes.string.isRequired,\n  curveWidth: PropTypes.number.isRequired,\n  start: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  end: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  c1: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  c2: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\nimport PropTypes from \"prop-types\";\n\nfunction DraggableForeignObject(props) {\n  return (\n    <Draggable scale={props.scale} onDrag={props.onDrag} position={props}>\n      <foreignObject x={0} y={0} width={props.width} height={props.height}>\n        <div xmlns=\"http://www.w3.org/1999/xhtml\">{props.children}</div>\n      </foreignObject>\n    </Draggable>\n  );\n}\n\nDraggableForeignObject.propTypes = {\n  scale: PropTypes.number.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  onDrag: PropTypes.func.isRequired,\n  children: PropTypes.any.isRequired\n};\n\nexport default DraggableForeignObject;\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\n\nexport default function(props) {\n  return (\n    <Draggable\n      key={props.key}\n      scale={props.scale}\n      position={props.position}\n      onDrag={props.onDrag}\n    >\n      <div className=\"box no-cursor\">\n        <svg className=\"graphics inport\">\n          <circle\n            className=\"circle\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            cx=\"15\"\n            cy=\"15\"\n            r=\"15\"\n            style={{\n              stroke: \"#000000\",\n              strokeWidth: 3,\n              fill: \"#66ff66\"\n            }}\n            opacity=\".7\"\n          />\n        </svg>\n\n        <div className=\"drag\">{props.title}</div>\n        <h3>{/* <InlineMath>\\int_0^\\infty x^2 dx</InlineMath> */}</h3>\n\n        <svg className=\"graphics outport\" width=\"30\" height=\"30\">\n          <circle\n            className=\"circle\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            cx=\"15\"\n            cy=\"15\"\n            r=\"15\"\n            style={{\n              stroke: \"#000000\",\n              strokeWidth: 3,\n              fill: \"#ff0000\"\n            }}\n            opacity=\".7\"\n          />\n        </svg>\n      </div>\n    </Draggable>\n  );\n}\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\nimport \"./InOutNode.css\";\n\nexport default function(props) {\n  return (\n    <Draggable\n      key={props.key}\n      scale={props.scale}\n      position={props.position}\n      onDrag={props.onDrag}\n      handle=\"header\"\n    >\n      <div className=\"node noselect\" style={{ height: \"60px\" }}>\n        <div className=\"main_area\">\n          <div className=\"addin noselect\">+</div>\n          <header className=\"nodetext noselect\">Add</header>\n          <div className=\"addout noselect\">+</div>\n        </div>\n        <div className=\"port_area\">\n          <div className=\"port noselect\">→</div>\n          <div className=\"porttext in noselect\">x</div>\n          <div className=\"noport noselect\"></div>\n        </div>\n        <div className=\"port_area in\">\n          <div className=\"port noselect\" draggable={true}>\n            →\n          </div>\n          <div className=\"porttext in noselect\">y</div>\n          <div className=\"noport noselect\"></div>\n        </div>\n        <div className=\"port_area out\">\n          <div className=\"noport noselect\"></div>\n          <div className=\"porttext out noselect\">sum</div>\n          <div\n            className=\"port noselect\"\n            draggable={true}\n            onDrag={e =>\n              console.log(e.nativeEvent.offsetX, e.nativeEvent.offsetY)\n            }\n          >\n            →\n          </div>\n        </div>\n      </div>\n    </Draggable>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { InlineMath } from \"react-katex\";\nimport BezierCurve from \"./BezierCurve\";\nimport DraggableForeignObject from \"./DraggableForeignObject\";\nimport {\n  positionNodeAction,\n  positionEveryOtherNodeAction,\n  positionTextNodeAction,\n  positionImgNodeAction\n} from \"../redux/actions\";\nimport HTMLNode from \"./HTMLNode\";\n\nimport InOutNode from \"../components/InOutNode\";\n\nclass GraphicsAreaPureHTML extends React.Component {\n  render() {\n    return (\n      <div\n        className=\"graphicsarea\"\n        style={{ transform: \"scale(\" + this.props.scale + \")\" }}\n      >\n        <svg\n          className=\"arrowsvg\"\n          style={{ position: \"relative\", top: \"0px\", left: \"0px\" }}\n        >\n          {this.props.connections.map((key, index) => {\n            var fromNode = this.props.nodes[key.from.nodeIndex];\n            var toNode = this.props.nodes[key.to.nodeIndex];\n            return (\n              <BezierCurve\n                key={index}\n                start={{ ...fromNode.position }}\n                end={{ ...toNode.position }}\n                c1={{\n                  x: (fromNode.position.x + toNode.position.x) / 2,\n                  y: fromNode.position.y\n                }}\n                c2={{\n                  x: (fromNode.position.x + toNode.position.x) / 2,\n                  y: toNode.position.y\n                }}\n                curveColor=\"black\"\n                curveWidth={2}\n              />\n            );\n          })}\n\n          <DraggableForeignObject\n            scale={this.props.scale}\n            x={this.props.imgNode.x}\n            y={this.props.imgNode.y}\n            width={this.props.imgNode.width}\n            height={this.props.imgNode.height}\n            onDrag={(e, position) => this.props.onSetImgNodePosition(position)}\n          >\n            <img\n              style={{\n                width: \"50%\",\n                height: \"50%\",\n                borderStyle: \"solid\",\n                userDrag: \"none\",\n                userSelect: \"none\",\n                MozUserSelect: \"none\",\n                WebkitUserDrag: \"none\",\n                WebkitUserSelect: \"none\",\n                msUserSelect: \"none\"\n              }}\n              src={this.props.imgNode.url}\n              alt=\"Something nice\"\n            />\n          </DraggableForeignObject>\n\n          <DraggableForeignObject\n            scale={this.props.scale}\n            x={this.props.textNode.x}\n            y={this.props.textNode.y}\n            width={this.props.textNode.width}\n            height={this.props.textNode.height}\n            onDrag={(e, position) => this.props.onSetTextNodePosition(position)}\n          >\n            <div style={{ backgroundColor: \"#eeb\", borderStyle: \"solid\" }}>\n              {this.props.textNode.text}\n            </div>\n          </DraggableForeignObject>\n        </svg>\n\n        {this.props.nodes.map((key, index) =>\n          key.htmlNode ? (\n            <HTMLNode\n              title={key.title}\n              key={index}\n              scale={this.props.scale}\n              position={this.props.nodes[index].position}\n              onDrag={(e, position) =>\n                this.props.onSetPosition(index, position)\n              }\n            />\n          ) : (\n            <InOutNode\n              title={key.title}\n              key={index}\n              scale={this.props.scale}\n              position={this.props.nodes[index].position}\n              onDrag={(e, position) =>\n                this.props.onSetPosition(index, position)\n              }\n            />\n          )\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  nodes: state.nodes,\n  connections: state.connections,\n  scale: state.scale,\n  textNode: state.textNode,\n  imgNode: state.imgNode\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetPosition: (index, position) =>\n    dispatch(positionEveryOtherNodeAction(index, position)),\n  onSetTextNodePosition: position => dispatch(positionTextNodeAction(position)),\n  onSetImgNodePosition: position => dispatch(positionImgNodeAction(position))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GraphicsAreaPureHTML);\n","import React from \"react\";\nimport $ from \"jquery\";\nwindow.jQuery = window.$ = $;\nrequire(\"jqueryui\");\nvar draw2d = require(\"draw2d\");\n\nexport default class CanvasDraw2D extends React.Component {\n  componentDidMount() {\n    this.renderCanvas(\"mycanvasdraw2d\");\n  }\n\n  renderCanvas(canvasId) {\n    var canvas = new draw2d.Canvas(canvasId);\n\n    // create and add two nodes which contains Ports (In and OUT)\n    //\n    var start = new draw2d.shape.node.Start();\n    var end = new draw2d.shape.node.End();\n\n    // ...add it to the canvas\n    canvas.add(start, 50, 50);\n    canvas.add(new draw2d.shape.node.Start(), 50, 250);\n    canvas.add(end, 230, 150);\n\n    // Create a Connection and connect the Start and End node\n    //\n    var c = new draw2d.Connection();\n    c.setRouter(new draw2d.layout.connection.SplineConnectionRouter());\n\n    // Set the endpoint decorations for the connection\n    //\n    c.setSourceDecorator(new draw2d.decoration.connection.BarDecorator());\n    c.setTargetDecorator(new draw2d.decoration.connection.DiamondDecorator());\n    // Connect the endpoints with the start and end port\n    //\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n\n    // and finally add the connection to the canvas\n    canvas.add(c);\n\n    var figure = new draw2d.shape.analog.OpAmp();\n    canvas.add(figure, 350, 110);\n\n    var p1 = new draw2d.shape.basic.Polygon();\n    var p2 = new draw2d.shape.basic.Polygon();\n\n    canvas.add(p1, 450, 150);\n    canvas.add(p2, 450, 200);\n\n    p2.setBackgroundColor(\"#f0f000\");\n    p2.setAlpha(0.7);\n    p2.setDimension(100, 60);\n\n    canvas.setCurrentSelection(p2);\n\n    var shape = new draw2d.shape.basic.Text();\n\n    shape.setText(\"This is a simple text with some loooooong word in.\");\n    shape.setBackgroundColor(\"#f0f000\");\n\n    canvas.add(shape, 550, 10);\n\n    var lshape = new draw2d.shape.basic.Label();\n\n    lshape.setText(\"This is a label.\");\n    lshape.setBackgroundColor(\"#f0f000\");\n\n    canvas.add(lshape, 350, 70);\n\n    var pie = new draw2d.shape.diagram.Pie(80, 80);\n    pie.setWidth(100);\n    pie.setData([30, 60, 122, 4]);\n    canvas.add(pie, 600, 160);\n\n    var postit = new draw2d.shape.note.PostIt();\n    postit.installEditor(new draw2d.ui.LabelInplaceEditor());\n    postit.setColor(\"#000000\");\n    postit.setPadding(20);\n\n    postit.setText(\"This is simple sticky note\\nDouble click to edit.\");\n\n    canvas.add(postit, 700, 10);\n\n    var label = new draw2d.shape.basic.Label();\n\n    label.installEditor(new draw2d.ui.LabelInplaceEditor());\n    label.setText(\"Double click me to edit\");\n\n    canvas.add(label, 50, 10);\n\n    // Override the default connection type. This is used during drag&drop operations of ports.\n    //\n    draw2d.Connection.createConnection = function(sourcePort, targetPort) {\n      // return my special kind of connection\n      var con = new draw2d.Connection();\n      con.setRouter(new draw2d.layout.connection.FanConnectionRouter());\n      return con;\n    };\n\n    // create and add two nodes which contains Ports (In and OUT)\n    //\n    start = new draw2d.shape.node.Start();\n    end = new draw2d.shape.node.End();\n\n    // ...add it to the canvas\n    canvas.add(start, 50, 250);\n    canvas.add(end, 230, 280);\n\n    // first Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // second Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // third Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // fourth Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // Zoom mose wheel support\n    canvas.installEditPolicy(new draw2d.policy.canvas.WheelZoomPolicy());\n    shape = new draw2d.shape.basic.Text({\n      text: \"Use the mouse wheel + SHIFT to zoom\"\n    });\n\n    canvas.add(shape, 400, 300);\n\n    // Register some callbacks\n    canvas.on(\"select\", function(emitter, event) {\n      if (event.figure !== null) {\n        console.log(\"figure selected\");\n      } else {\n        console.log(\"selection cleared\");\n      }\n    });\n\n    $(\"#mycanvasdraw2d\").click(function(ev) {\n      console.log(\"Mouse click:\" + ev.clientX + \",\" + ev.clientY);\n    });\n\n    // Log state to console\n    var writer = new draw2d.io.json.Writer();\n    writer.marshal(canvas, json => console.log(json));\n\n    // Custom shape\n    {\n      class CustomFigure extends draw2d.SVGFigure {\n        constructor(attr) {\n          super(attr);\n\n          this.index = 0;\n          this.svgs = [];\n\n          this.svgs.push(\n            '<svg xmlns=\"http://www.w3.org/2000/svg\">' +\n              '  <path stroke=\"#000\" fill=\"#FFF\" stroke-miterlimit=\"4\" d=\"m0,49.842l0,-49.742l49.982,0l0,49.742l-49.982,0z\" id=\"polygon3873\"/>' +\n              '  <text text-anchor=\"middle\" fill=\"#000000\" font-family=\"Sans-serif\" x=\"24.81563\" y=\"26.50938\" xml:space=\"preserve\" font-size=\"8px\" id=\"svg_1\">Click me</text>' +\n              \"</svg>\"\n          );\n\n          this.svgs.push(\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">' +\n              '<rect x=\"14\" y=\"23\" width=\"20\" height=\"20\" fill=\"lime\" stroke=\"black\" />' +\n              \"</svg>\"\n          );\n\n          this.on(\n            \"click\",\n            function() {\n              this.index = ++this.index % this.svgs.length;\n              this.setSVG(this.svgs[this.index], 500);\n            },\n            this\n          );\n        }\n\n        getSVG() {\n          return this.svgs[0];\n        }\n      }\n\n      var fig = new CustomFigure();\n\n      canvas.add(fig, 100, 100);\n    }\n  }\n\n  render() {\n    return <div id=\"mycanvasdraw2d\"></div>;\n  }\n}\n\nexport class GraphicsAreaDraw2D extends React.Component {\n  render() {\n    return (\n      <div className=\"graphicsarea\" style={{ transform: \"scale(1)\" }}>\n        <CanvasDraw2D className=\"canvas2darea\" />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport DownloadLink from \"react-download-link\";\nimport \"rc-slider/assets/index.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\n\nimport Tooltip from \"rc-tooltip\";\nimport Slider from \"rc-slider\";\nimport { connect } from \"react-redux\";\n\nconst wrapperStyle = { width: 400, margin: 50 };\n\nconst Handle = Slider.Handle;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst TopBar = props => {\n  if (props.showControls) {\n    return (\n      <div className=\"topbar\">\n        <div className=\"zoom\" style={wrapperStyle}>\n          <Slider\n            min={20}\n            max={150}\n            defaultValue={props.defaultScale}\n            handle={handle}\n            onChange={props.onChange}\n          />\n        </div>\n        <DownloadLink\n          label=\"Save state to disk\"\n          className=\"savestate\"\n          tagName=\"h2\"\n          filename=\"state.txt\"\n          exportFile={() => JSON.stringify(props.state, null, 2)}\n        >\n          <h1>Save sta2te to disk</h1>\n        </DownloadLink>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"topbar\">\n        <DownloadLink\n          label=\"Save state to disk\"\n          className=\"savestate\"\n          tagName=\"h2\"\n          filename=\"state.txt\"\n          exportFile={() => JSON.stringify(props.state, null, 2)}\n        >\n          <h1>Save state to disk</h1>\n        </DownloadLink>\n      </div>\n    );\n  }\n};\n\nexport default connect()(TopBar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\n\nimport GraphicsAreaPureHTML from \"./components/GraphicsAreaPureHTML\";\nimport GraphicsAreaDraw2D from \"./components/CanvasDraw2D\";\n\nimport \"katex/dist/katex.min.css\";\n\nimport TopBar from \"./components/TopBar\";\nimport { zoomAction, toggleGraphicsLibraryAction } from \"./redux/actions\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <button onClick={this.props.toggleGraphicsLibrary}>\n          <h2>Toggle graphics library (Pure HTML / Draw2D)</h2>\n        </button>\n        <TopBar\n          className=\"topbar\"\n          showControls={this.props.state.pureHTMLgraph}\n          defaultScale={this.props.state.scale * 100}\n          state={this.props.state}\n          onChange={this.props.onZoomChange}\n        />\n\n        {this.props.state.pureHTMLgraph ? (\n          <GraphicsAreaPureHTML />\n        ) : (\n          <GraphicsAreaDraw2D className=\"graphicsarea\" />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onZoomChange: scale => dispatch(zoomAction(scale)),\n  toggleGraphicsLibrary: () => dispatch(toggleGraphicsLibraryAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport graphEditorReducer from \"./redux/reducers\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  graphEditorReducer,\n  composeWithDevTools()\n\n  // other store enhancers if any\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import InitialState from \"../../InitialState\";\nimport update from \"immutability-helper\";\nimport {\n  CHANGE_ZOOM,\n  POSITION_NODE,\n  POSITION_EVERY_OTHER_NODE,\n  POSITION_TEXT_NODE,\n  POSITION_IMG_NODE,\n  TOGGLE_GRAPHICS\n} from \"../actions\";\n\nexport default function graphEditorReducer(state = InitialState(), action) {\n  //  console.log(\"graphEditorReducer\", action);\n  var newState;\n  //  console.log(\"state before \", state);\n  var deltaX;\n  var deltaY;\n  switch (action.type) {\n    case CHANGE_ZOOM:\n      newState = update(state, { scale: { $set: action.percent / 100 } });\n      break;\n    case POSITION_NODE:\n      deltaX = action.position.x - state.nodes[action.index].position.x;\n      deltaY = action.position.y - state.nodes[action.index].position.y;\n      newState = update(state, {\n        nodes: {\n          [action.index]: {\n            position: {\n              x: { $set: action.position.x },\n              y: { $set: action.position.y }\n            }\n          }\n        }\n      });\n\n      break;\n    case POSITION_EVERY_OTHER_NODE:\n      deltaX = action.position.x - state.nodes[action.index].position.x;\n      deltaY = action.position.y - state.nodes[action.index].position.y;\n      var updateObject = {};\n      state.nodes.map((value, index) => {\n        if (index % 2 === 0) {\n          updateObject[index] = {\n            position: {\n              x: { $set: state.nodes[index].position.x + deltaX },\n              y: { $set: state.nodes[index].position.y + deltaY }\n            }\n          };\n        }\n        return null;\n      });\n      newState = update(state, {\n        nodes: {\n          [action.index]: {\n            position: {\n              x: { $set: action.position.x },\n              y: { $set: action.position.y }\n            }\n          },\n          ...updateObject\n        }\n      });\n      break;\n    case POSITION_TEXT_NODE:\n      newState = update(state, {\n        textNode: {\n          x: { $set: action.position.x },\n          y: { $set: action.position.y }\n        }\n      });\n      break;\n    case POSITION_IMG_NODE:\n      newState = update(state, {\n        imgNode: {\n          x: { $set: action.position.x },\n          y: { $set: action.position.y }\n        }\n      });\n      break;\n    case TOGGLE_GRAPHICS:\n      var newValue = state.pureHTMLgraph ? false : true;\n      newState = update(state, {\n        pureHTMLgraph: { $set: newValue }\n      });\n      break;\n    default:\n      console.log(\"default \", state);\n      newState = state;\n      break;\n  }\n\n  //  console.log(\"newState  \", newState);\n  return newState;\n}\n","export default function InitialState() {\n  var someIndexes = [...Array(82).keys()];\n  var someNodes = someIndexes.map(index => {\n    return {\n      title: \"1D transformation\",\n      id: 1000 + index,\n      position: {\n        x: 0 + 500 * Math.cos(((2 * 3.14) / someIndexes.length) * index),\n        y: 400 + 500 * Math.sin(((2 * 3.14) / someIndexes.length) * index)\n      },\n      inputPorts: [\n        { name: \"in x\", type: \"int\" },\n        { name: \"in y\", type: \"int\" }\n      ],\n      outputPorts: [\n        { name: \"out x\", type: \"float\" },\n        { name: \"out y\", type: \"float\" }\n      ]\n    };\n  });\n\n  var someConnections = someIndexes\n    .filter(a => a % 2 === 0)\n    .map(index => {\n      return {\n        from: {\n          nodeIndex: (index + someIndexes.length / 2 + 2) % someIndexes.length,\n          index: 0\n        },\n        to: {\n          nodeIndex: index,\n          index: 0\n        }\n      };\n    });\n\n  return {\n    pureHTMLgraph: true,\n    scale: 0.4,\n    activeDrags: 0,\n    deltaPosition: {\n      x: 0,\n      y: 0\n    },\n    nodes: [\n      /* {\n        title: \"2D shape transformation\",\n        id: 213,\n        position: {\n          x: 260,\n          y: 20\n        },\n        inputPorts: [\n          { name: \"in x\", type: \"int\" },\n          { name: \"in y\", type: \"int\" }\n        ],\n        outputPorts: [\n          { name: \"out x\", type: \"float\" },\n          { name: \"out y\", type: \"float\" }\n        ]\n      },\n      {\n        title: \"Measurement\",\n        id: 19,\n        position: {\n          x: 350,\n          y: 120\n        },\n        inputPorts: [\n          { name: \"amount\", type: \"int\" },\n          { name: \"temperature\", type: \"float\" },\n          { name: \"the grid\", type: \"se.minerva.Grid\" }\n        ],\n        outputPorts: [\n          { name: \"result x\", type: \"float\" },\n          { name: \"result y\", type: \"float\" },\n          { name: \"result z\", type: \"float\" }\n        ]\n      },\n      {\n        title: \"Colorizer\",\n        id: 23,\n        position: {\n          x: 510,\n          y: 236\n        },\n        inputPorts: [\n          { name: \"amount\", type: \"int\" },\n          { name: \"temperature\", type: \"float\" }\n        ],\n        outputPorts: [\n          { name: \"red\", type: \"int\" },\n          { name: \"blue\", type: \"int\" },\n          { name: \"green\", type: \"int\" },\n          { name: \"alpha\", type: \"float\" },\n          { name: \"grid\", type: \"se.minerva.Grid\" }\n        ]\n      },\n      {\n        title: \"1D transformation\",\n        id: 101,\n        position: {\n          x: 95,\n          y: 236\n        },\n        inputPorts: [{ name: \"x\", type: \"float\" }],\n        outputPorts: [{ name: \"x\", type: \"float\" }]\n      },*/\n      ...someNodes\n    ],\n    connections: [\n      /*{\n        from: {\n          nodeIndex: 0,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 1\n        }\n      },\n      {\n        from: {\n          nodeIndex: 2,\n          index: 4\n        },\n        to: {\n          nodeIndex: 1,\n          index: 2\n        }\n      },\n      {\n        from: {\n          nodeIndex: 3,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 1\n        }\n      },*/\n      ...someConnections\n    ],\n    textNode: {\n      x: -500,\n      y: -350,\n      width: 200,\n      height: 400,\n      text: `Over hill, over dale, Thorough bush, thorough brier, Over park,\n            over pale, Thorough flood, thorough fire! I do wander everywhere,\n            Swifter than the moon's sphere; And I serve the Fairy Queen, To\n            dew her orbs upon the green; The cowslips tall her pensioners be;\n            In their gold coats spots you see; Those be rubies, fairy favours;\n            In those freckles live their savours; I must go seek some dewdrops\n            here, And hang a pearl in every cowslip's ear.`\n    },\n    imgNode: {\n      x: 50,\n      y: -350,\n      width: 400,\n      height: 300,\n      url: \"http://minerva-central.net/images/minerva-forward-m1.png\"\n    }\n  };\n}\n"],"sourceRoot":""}