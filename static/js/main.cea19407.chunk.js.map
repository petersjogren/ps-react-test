{"version":3,"sources":["InitialState.js","websocketClientUtils.js","redux/actions/index.js","redux/reducers/index.js","components/NodeList.js","components/BezierCurve.js","components/HTMLNode.js","components/InOutNode.js","components/GraphicsAreaPureHTML.js","components/CanvasDraw2D.js","App.js","components/TopBar.js","serviceWorker.js","index.js"],"names":["invalidMousePosition","InitialState","stressTest","someIndexes","Array","keys","someNodes","map","index","nodeConfirmedInSessionWithID","title","id","uuidv4","position","x","Math","cos","length","y","sin","width","isSelected","inputPorts","name","type","outputPorts","someConnections","filter","a","from","nodeIndex","to","currentSessionID","pureHTMLgraph","scale","isDragInProgress","dragPayload","dragMousePosition","nodeTemplates","nodes","connections","textNode","height","text","imgNode","url","InitialStateStressTest","connection","messageInProgress","messageQueue","successFunctionForMessageInProgress","websocketClientSetup","window","WebSocket","MozWebSocket","console","log","onopen","onclose","store","dispatch","storeCurrentSessionIDAction","onerror","error","alert","onmessage","message","data","nextCommand","shift","successFunction","send","string","websocketSendCommand","readyState","CLOSED","push","CHANGE_ZOOM","POSITION_NODE","CREATE_NODE","POSITION_EVERY_OTHER_NODE","POSITION_TEXT_NODE","POSITION_IMG_NODE","TOGGLE_GRAPHICS","RESET_NORMAL","RESET_STRESS_TEST","CONNECT_PORTS","DELETE_SELECTED","SELECT_NODE","SELECT_CONNECTION","SELECT_CLEAR","SET_NODE_TEMPLATE_LIST","SET_CURRENT_SESSIONID","CONFIRM_NODE","RECONNECT_SERVER","OUTPORT_DRAG_STARTED","DRAG_CANCELLED","INPORT_DROP","DRAG_MOUSE_POSITION","LOAD_STATE","DRAG_STOP","sessionID","payLoadTypeOutport","connectPorts","state","fromNodeIndex","fromPortIndex","toNodeIndex","toPortIndex","update","$push","clearDragState","$set","NodeList","newProps","newState","this","props","templates","Fragment","onClick","onLoadDefault","onLoadOther","value","key","className","draggable","onDragStart","e","payLoadString","JSON","stringify","templateIndex","dataTransfer","setData","substring","React","Component","BezierCurve","nextProps","connectionIndex","curveColor","curveWidth","start","end","c1","c2","onSelectConnection","curve","onMouseDown","stopPropagation","fill","stroke","strokeDasharray","strokeWidth","d","onDrag","xmlns","cx","cy","r","style","opacity","rowHeight","portWidth","InPort","portIndex","onConnect","onMouseUp","onInportDrop","onDrop","textData","getData","payLoad","parse","outPortIndex","preventDefault","onDragOver","OutPort","onOutportDragStarted","inPortRelativePosition","node","inPortIndex","outPortRelativePosition","InOutNode","positionX","positionY","onSelectNode","onDragStop","classes","onStop","handle","join","port","GraphicsAreaPureHTML","onSelectClear","onDragCancelled","onMouseMove","rect","document","getElementById","getBoundingClientRect","clientX","left","clientY","top","onDragMousePosition","target","onCreateNode","transform","fromNode","fromX","fromY","toX","toY","toNode","htmlNode","HTMLNode","onSetPosition","connect","present","positionEveryOtherNodeAction","positionNodeAction","onSetTextNodePosition","positionTextNodeAction","onSetImgNodePosition","positionImgNodeAction","connectPortsAction","selectNodeAction","selectConnectionAction","nodeId","json","sessionId","createNodeAction","outportDragStartedAction","inportDropAction","dragMousePositionAction","jQuery","$","require","file","draw2d","CanvasDraw2D","renderCanvas","canvasId","canvas","Canvas","shape","Start","End","add","c","Connection","setRouter","layout","SplineConnectionRouter","setSourceDecorator","decoration","BarDecorator","setTargetDecorator","DiamondDecorator","setSource","getOutputPort","setTarget","getInputPort","figure","analog","OpAmp","p1","basic","Polygon","p2","setBackgroundColor","setAlpha","setDimension","setCurrentSelection","Text","setText","lshape","Label","pie","diagram","Pie","setWidth","postit","note","PostIt","installEditor","ui","LabelInplaceEditor","setColor","setPadding","label","createConnection","sourcePort","targetPort","con","FanConnectionRouter","installEditPolicy","policy","WheelZoomPolicy","on","emitter","event","click","ev","io","Writer","marshal","fig","attr","svgs","setSVG","SVGFigure","Handle","Slider","dragging","restProps","prefixCls","overlay","visible","placement","showControls","min","max","onChange","reader","FileReader","App","body","addEventListener","deleteSelected","display","justifyContent","reconnect","onUndo","sizePast","onRedo","sizeFuture","input","createElement","onchange","files","readAsText","onload","readerEvent","content","result","onLoadStateFromString","stateString","blob","Blob","FileSaver","saveAs","sync","resetStateNormal","resetStateStressTest","toggleGraphicsLibrary","onZoomChange","past","future","percent","axios","get","then","response","currentSessionId","forEach","syncAction","loadStateFromStringAction","ActionCreators","undo","redo","Boolean","location","hostname","match","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","logger","createLogger","collapsed","getState","action","createStore","undoable","deltaX","deltaY","updateObject","oldSessionId","currentSession","i","connIdx","wasSomethingDeleted","wasConnectionDeleted","$splice","foundIndex","findNodeIndexWithId","newValue","groupBy","groupByActionTypes","excludeAction","applyMiddleware","thunk","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cea19407.chunk.js","sourcesContent":["import uuidv4 from \"uuid/v4\";\n\nexport const invalidMousePosition = 999999;\n\nfunction nodeTemplates() {\n  return [\n    {\n      nodeConfirmedInSessionWithID: \"0\",\n      title: \"Add\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 120,\n      inputPorts: [\n        { name: \"a\", type: \"int\" },\n        { name: \"b\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    },\n    {\n      nodeConfirmedInSessionWithID: \"0\",\n      title: \"Mult\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 180,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" },\n        { name: \"z\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    },\n    {\n      nodeConfirmedInSessionWithID: \"0\",\n      title: \"Sub\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 100,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    },\n    {\n      nodeConfirmedInSessionWithID: \"0\",\n      title: \"Div\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 120,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    },\n    {\n      nodeConfirmedInSessionWithID: \"0\",\n      title: \"Add/Sub 4\",\n      id: 213,\n      position: {\n        x: 186,\n        y: 7\n      },\n      isSelected: false,\n      width: 120,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" },\n        { name: \"z\", type: \"int\" },\n        { name: \"w\", type: \"int\" }\n      ],\n      outputPorts: [\n        { name: \"sum\", type: \"int\" },\n        { name: \"diff\", type: \"int\" }\n      ]\n    }\n  ];\n}\n\nfunction InitialStateStressTest() {\n  var someIndexes = [...Array(202).keys()];\n  var someNodes = someIndexes.map(index => {\n    return {\n      nodeConfirmedInSessionWithID: \"0\",\n      title: \"Add\",\n      id: uuidv4(),\n      position: {\n        x: 600 + 500 * Math.cos(((2 * 3.14) / someIndexes.length) * index),\n        y: 600 + 500 * Math.sin(((2 * 3.14) / someIndexes.length) * index)\n      },\n      width: 120,\n      isSelected: false,\n      inputPorts: [\n        { name: \"x\", type: \"int\" },\n        { name: \"y\", type: \"int\" }\n      ],\n      outputPorts: [{ name: \"sum\", type: \"int\" }]\n    };\n  });\n\n  var someConnections = someIndexes\n    .filter(a => a % 2 === 0)\n    .map(index => {\n      return {\n        isSelected: false,\n        from: {\n          nodeIndex: (index + someIndexes.length / 2 + 2) % someIndexes.length,\n          index: 0\n        },\n        to: {\n          nodeIndex: index,\n          index: 0\n        }\n      };\n    });\n\n  return {\n    currentSessionID: \"9999\",\n    pureHTMLgraph: true,\n    scale: 0.4,\n    stressTest: true,\n    isDragInProgress: false,\n    dragPayload: {},\n    dragMousePosition: { x: invalidMousePosition, y: invalidMousePosition },\n    nodeTemplates: nodeTemplates(),\n    nodes: [...someNodes],\n    connections: [...someConnections],\n    textNode: {\n      x: -500,\n      y: -350,\n      width: 200,\n      height: 400,\n      text: `Over hill, over dale, Thorough bush, thorough brier, Over park,\n            over pale, Thorough flood, thorough fire! I do wander everywhere,\n            Swifter than the moon's sphere; And I serve the Fairy Queen, To\n            dew her orbs upon the green; The cowslips tall her pensioners be;\n            In their gold coats spots you see; Those be rubies, fairy favours;\n            In those freckles live their savours; I must go seek some dewdrops\n            here, And hang a pearl in every cowslip's ear.`\n    },\n    imgNode: {\n      x: 50,\n      y: -350,\n      width: 400,\n      height: 300,\n      url: \"http://minerva-central.net/images/minerva-forward-m1.png\"\n    }\n  };\n}\n\nfunction InitialStateNormal() {\n  return {\n    currentSessionID: \"9999\",\n    pureHTMLgraph: true,\n    stressTest: false,\n    scale: 0.9,\n    isDragInProgress: false,\n    dragPayload: {},\n    dragMousePosition: { x: invalidMousePosition, y: invalidMousePosition },\n    nodeTemplates: nodeTemplates(),\n    nodes: [\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Add\",\n        id: \"0523c8bf-d17e-49a5-918b-a91bca1b4ee9\",\n        position: {\n          x: 84.44444444444466,\n          y: 28.888888888889323\n        },\n        isSelected: false,\n        width: 120,\n        inputPorts: [\n          {\n            name: \"a\",\n            type: \"int\"\n          },\n          {\n            name: \"b\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          }\n        ]\n      },\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Add\",\n        id: \"02bf0700-c984-452e-b3c2-82de39114955\",\n        position: {\n          x: 507.7777777777772,\n          y: 231.1111111111114\n        },\n        isSelected: false,\n        width: 120,\n        inputPorts: [\n          {\n            name: \"a\",\n            type: \"int\"\n          },\n          {\n            name: \"b\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          }\n        ]\n      },\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Sub\",\n        id: \"44eeef82-abfe-4070-9f72-e854dd325991\",\n        position: {\n          x: 80.00000000000003,\n          y: 165.55555555555566\n        },\n        isSelected: false,\n        width: 100,\n        inputPorts: [\n          {\n            name: \"x\",\n            type: \"int\"\n          },\n          {\n            name: \"y\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          }\n        ]\n      },\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Add/Sub 4\",\n        id: \"3c753071-65f6-4fbe-9bf1-2d861c6186ca\",\n        position: {\n          x: 293.33333333333286,\n          y: 231.11111111111128\n        },\n        isSelected: false,\n        width: 120,\n        inputPorts: [\n          {\n            name: \"x\",\n            type: \"int\"\n          },\n          {\n            name: \"y\",\n            type: \"int\"\n          },\n          {\n            name: \"z\",\n            type: \"int\"\n          },\n          {\n            name: \"w\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          },\n          {\n            name: \"diff\",\n            type: \"int\"\n          }\n        ]\n      },\n      {\n        nodeConfirmedInSessionWithID: \"c5e9a331-66b4-4461-8f3f-d319fa838195\",\n        title: \"Mult\",\n        id: \"0da44ac8-acab-47cd-b195-29e11008c869\",\n        position: {\n          x: 435.5555555555551,\n          y: 73.33333333333347\n        },\n        isSelected: false,\n        width: 180,\n        inputPorts: [\n          {\n            name: \"x\",\n            type: \"int\"\n          },\n          {\n            name: \"y\",\n            type: \"int\"\n          },\n          {\n            name: \"z\",\n            type: \"int\"\n          }\n        ],\n        outputPorts: [\n          {\n            name: \"sum\",\n            type: \"int\"\n          }\n        ]\n      }\n    ],\n    connections: [\n      {\n        isSelected: false,\n        from: {\n          nodeIndex: 3,\n          index: 0\n        },\n        to: {\n          nodeIndex: 1,\n          index: 0\n        }\n      },\n      {\n        isSelected: false,\n        from: {\n          nodeIndex: 2,\n          index: 0\n        },\n        to: {\n          nodeIndex: 3,\n          index: 1\n        }\n      },\n      {\n        isSelected: false,\n        from: {\n          nodeIndex: 0,\n          index: 0\n        },\n        to: {\n          nodeIndex: 4,\n          index: 1\n        }\n      },\n      {\n        isSelected: false,\n        from: {\n          nodeIndex: 2,\n          index: 0\n        },\n        to: {\n          nodeIndex: 4,\n          index: 2\n        }\n      }\n    ],\n    textNode: {\n      x: 500,\n      y: 350,\n      width: 200,\n      height: 400,\n      text: `Over hill, over dale, Thorough bush, thorough brier, Over park,\n            over pale, Thorough flood, thorough fire! I do wander everywhere,\n            Swifter than the moon's sphere; And I serve the Fairy Queen, To\n            dew her orbs upon the green; The cowslips tall her pensioners be;\n            In their gold coats spots you see; Those be rubies, fairy favours;\n            In those freckles live their savours; I must go seek some dewdrops\n            here, And hang a pearl in every cowslip's ear.`\n    },\n    imgNode: {\n      x: 50,\n      y: 350,\n      width: 400,\n      height: 300,\n      url: \"http://minerva-central.net/images/minerva-forward-m1.png\"\n    }\n  };\n}\n\nexport default function InitialState(stressTest) {\n  if (stressTest) {\n    return InitialStateStressTest();\n  } else {\n    return InitialStateNormal();\n  }\n}\n","import { store } from \"./index.js\";\nimport { storeCurrentSessionIDAction } from \"./redux/actions\";\n\nvar connection;\nvar messageInProgress = false;\nvar messageQueue = [];\nvar successFunctionForMessageInProgress = null;\n\nexport function websocketClientSetup() {\n  // if user is running mozilla then use it's built-in WebSocket\n  window.WebSocket = window.WebSocket || window.MozWebSocket;\n\n  connection = new WebSocket(\"ws://127.0.0.1:1337\");\n  console.log(\"websocket connection\", connection);\n\n  connection.onopen = function() {\n    // connection is opened and ready to use\n  };\n\n  connection.onclose = function() {\n    console.log(\"Connection closed\");\n    store.dispatch(storeCurrentSessionIDAction(\"\"));\n  };\n\n  connection.onerror = function(error) {\n    // an error occurred when sending/receiving data\n    window.alert(\n      'Websocket test server not started: start with \"node websocket-test-server.js\"',\n      error.type\n    );\n  };\n\n  connection.onmessage = function(message) {\n    console.log(\"sessionID: \" + message.data);\n    store.dispatch(storeCurrentSessionIDAction(message.data));\n\n    // Reset onmessage handler to handle response messages\n    connection.onmessage = function(message) {\n      if (messageInProgress) {\n        successFunctionForMessageInProgress(message);\n        if (messageQueue.length > 0) {\n          var nextCommand = messageQueue[0];\n          messageQueue.shift();\n          successFunctionForMessageInProgress = nextCommand.successFunction;\n          connection.send(nextCommand.string);\n        } else {\n          messageInProgress = false;\n        }\n      }\n    };\n  };\n}\n\nexport function websocketSendCommand(string, successFunction) {\n  if (connection.readyState !== WebSocket.CLOSED) {\n    if (messageInProgress) {\n      messageQueue.push({\n        string,\n        successFunction\n      });\n    } else {\n      successFunctionForMessageInProgress = successFunction;\n      connection.send(string);\n      messageInProgress = true;\n    }\n  } else {\n    return \"Error\";\n  }\n}\n","import axios from \"axios\";\nimport {\n  websocketSendCommand,\n  websocketClientSetup\n} from \"../../websocketClientUtils\";\nimport uuidv4 from \"uuid/v4\";\nimport { payLoadTypeOutport } from \"../reducers\";\n\nexport const CHANGE_ZOOM = \"CHANGE_ZOOM\";\nexport const POSITION_NODE = \"POSITION_NODE\";\nexport const CREATE_NODE = \"CREATE_NODE\";\nexport const POSITION_EVERY_OTHER_NODE = \"POSITION_EVERY_OTHER_NODE\";\nexport const POSITION_TEXT_NODE = \"POSITION_TEXT_NODE\";\nexport const POSITION_IMG_NODE = \"POSITION_IMG_NODE\";\nexport const TOGGLE_GRAPHICS = \"TOGGLE_GRAPHICS\";\nexport const RESET_NORMAL = \"RESET_NORMAL\";\nexport const RESET_STRESS_TEST = \"RESET_STRESS_TEST\";\nexport const CONNECT_PORTS = \"CONNECT_PORTS\";\nexport const DELETE_SELECTED = \"DELETE_SELECTED\";\nexport const SELECT_NODE = \"SELECT_NODE\";\nexport const SELECT_CONNECTION = \"SELECT_CONNECTION\";\nexport const SELECT_CLEAR = \"SELECT_CLEAR\";\nexport const SET_NODE_TEMPLATE_LIST = \"SET_NODE_TEMPLATE_LIST\";\nexport const SET_CURRENT_SESSIONID = \"SET_CURRENT_SESSIONID\";\nexport const CONFIRM_NODE = \"CONFIRM_NODE\";\nexport const RECONNECT_SERVER = \"RECONNECT_SERVER\";\nexport const OUTPORT_DRAG_STARTED = \"OUTPORT_DRAG_STARTED\";\nexport const DRAG_CANCELLED = \"DRAG_CANCELLED\";\nexport const INPORT_DROP = \"INPORT_DROP\";\nexport const DRAG_MOUSE_POSITION = \"DRAG_MOUSE_POSITION\";\nexport const LOAD_STATE = \"LOAD_STATE\";\nexport const DRAG_STOP = \"DRAG_STOP\";\n\nexport const zoomAction = percent => ({\n  type: CHANGE_ZOOM,\n  percent\n});\n\nexport const deleteSelectedAction = () => ({\n  type: DELETE_SELECTED\n});\n\nexport const createNodeAction = (x, y, index, title) => dispatch => {\n  var nodeId = uuidv4();\n  dispatch({\n    type: CREATE_NODE,\n    x,\n    y,\n    index,\n    nodeId\n  });\n  websocketSendCommand(\"addnode;\" + nodeId + \";\" + title, value => {\n    console.log(\"answer\", value);\n    var json = JSON.parse(value.data);\n    console.log(\"Response\", json.type, json.nodeId, json.sessionId);\n    dispatch({\n      type: CONFIRM_NODE,\n      nodeId: json.nodeId,\n      sessionId: json.sessionId\n    });\n  });\n};\n\nexport const selectNodeAction = nodeIndex => ({\n  type: SELECT_NODE,\n  nodeIndex\n});\n\nexport const outportDragStartedAction = (nodeIndex, portIndex) => ({\n  type: OUTPORT_DRAG_STARTED,\n  nodeIndex,\n  portIndex\n});\n\nexport const inportDropAction = (\n  nodeIndex,\n  portIndex,\n  isDragInProgress,\n  dragPayload\n) => dispatch => {\n  if (isDragInProgress && dragPayload.type === payLoadTypeOutport) {\n    dispatch({ type: DRAG_CANCELLED });\n    dispatch({\n      type: CONNECT_PORTS,\n      fromNodeIndex: dragPayload.nodeIndex,\n      fromPortIndex: dragPayload.portIndex,\n      toNodeIndex: nodeIndex,\n      toPortIndex: portIndex\n    });\n  }\n};\n\nexport const dragMousePositionAction = (x, y) => ({\n  type: DRAG_MOUSE_POSITION,\n  x,\n  y\n});\n\nexport const dragCancelledAction = () => ({\n  type: DRAG_CANCELLED\n});\n\n// This action exists for breaking POSITION_NODE grouping\n// when user ends drag operations. Otherwise all consecutive\n// drag operations will become one undo step.\nexport const dragStopAction = () => ({\n  type: DRAG_STOP\n});\n\nexport const selectClearAction = () => ({\n  type: SELECT_CLEAR\n});\n\nexport const selectConnectionAction = connectionIndex => ({\n  type: SELECT_CONNECTION,\n  connectionIndex\n});\n\nexport const positionNodeAction = (index, position) => ({\n  type: POSITION_NODE,\n  index,\n  position\n});\n\nexport const positionEveryOtherNodeAction = (index, position) => ({\n  type: POSITION_EVERY_OTHER_NODE,\n  index,\n  position\n});\n\nexport const positionTextNodeAction = position => ({\n  type: POSITION_TEXT_NODE,\n  position\n});\n\nexport const positionImgNodeAction = position => ({\n  type: POSITION_IMG_NODE,\n  position\n});\n\nexport const toggleGraphicsLibraryAction = () => ({\n  type: TOGGLE_GRAPHICS\n});\n\nexport const resetStateNormalAction = () => ({\n  type: RESET_NORMAL\n});\n\nexport const resetStateStressTestAction = () => ({\n  type: RESET_STRESS_TEST\n});\n\nexport const connectPortsAction = (\n  fromNodeIndex,\n  fromPortIndex,\n  toNodeIndex,\n  toPortIndex\n) => ({\n  type: CONNECT_PORTS,\n  fromNodeIndex,\n  fromPortIndex,\n  toNodeIndex,\n  toPortIndex\n});\n\nexport const loadDefaultNodeTemplatesAsyncAction = () => dispatch => {\n  console.log(\"loadDefaultNodeTemplatesAsyncAction\");\n  axios.get(\"templates/defaultNodes.json\").then(response => {\n    console.log(response);\n    dispatch({\n      type: SET_NODE_TEMPLATE_LIST,\n      data: response.data\n    });\n  });\n};\n\nexport const loadOtherNodeTemplatesAsyncAction = () => dispatch => {\n  console.log(\"loadOtherNodeTemplatesAsyncAction\");\n  axios.get(\"templates/otherNodes.json\").then(response => {\n    console.log(response);\n    dispatch({\n      type: SET_NODE_TEMPLATE_LIST,\n      data: response.data\n    });\n  });\n};\n\nexport const storeCurrentSessionIDAction = sessionID => {\n  console.log(\"set sessionID action\", sessionID);\n  return {\n    type: SET_CURRENT_SESSIONID,\n    id: sessionID\n  };\n};\n\nexport const reconnectAction = () => {\n  console.log(\"reconnectAction\");\n  websocketClientSetup();\n  return {\n    type: RECONNECT_SERVER\n  };\n};\n\n// Add unconfirmed nodes to server\nexport const syncAction = (currentSessionId, nodes) => dispatch => {\n  // Filter out the nodes that are not confirmed in the current session adn add them to server\n  var missingNodes = nodes.filter(node => {\n    return node.nodeConfirmedInSessionWithID !== currentSessionId;\n  });\n  missingNodes.forEach(node => {\n    websocketSendCommand(\"addnode;\" + node.id + \";\" + node.title, value => {\n      console.log(\"answer\", value);\n      var json = JSON.parse(value.data);\n      console.log(\"Response\", json.type, json.nodeId, json.sessionId);\n      dispatch({\n        type: CONFIRM_NODE,\n        nodeId: json.nodeId,\n        sessionId: json.sessionId\n      });\n    });\n  });\n};\n\nexport const loadStateFromStringAction = string => ({\n  type: LOAD_STATE,\n  data: string\n});\n","import InitialState from \"../../InitialState\";\nimport update from \"immutability-helper\";\nimport {\n  CHANGE_ZOOM,\n  DELETE_SELECTED,\n  SELECT_NODE,\n  SELECT_CONNECTION,\n  SELECT_CLEAR,\n  POSITION_NODE,\n  POSITION_EVERY_OTHER_NODE,\n  POSITION_TEXT_NODE,\n  POSITION_IMG_NODE,\n  TOGGLE_GRAPHICS,\n  RESET_NORMAL,\n  RESET_STRESS_TEST,\n  CONNECT_PORTS,\n  CREATE_NODE,\n  SET_NODE_TEMPLATE_LIST,\n  SET_CURRENT_SESSIONID,\n  CONFIRM_NODE,\n  RECONNECT_SERVER,\n  OUTPORT_DRAG_STARTED,\n  DRAG_CANCELLED,\n  INPORT_DROP,\n  DRAG_MOUSE_POSITION,\n  LOAD_STATE,\n  DRAG_STOP\n} from \"../actions\";\nimport { invalidMousePosition } from \"../../InitialState\";\n\nexport const payLoadTypeOutport = \"FROM_OUTPORT\";\n\nfunction findNodeIndexWithId(state, id) {\n  var foundIndex = -1;\n  state.nodes.forEach((value, index) => {\n    if (value.id === id) {\n      foundIndex = index;\n    }\n  });\n  return foundIndex;\n}\n\nfunction connectPorts(\n  state,\n  fromNodeIndex,\n  fromPortIndex,\n  toNodeIndex,\n  toPortIndex\n) {\n  return update(state, {\n    connections: {\n      $push: [\n        {\n          isSelected: false,\n          from: {\n            nodeIndex: fromNodeIndex,\n            index: fromPortIndex\n          },\n          to: {\n            nodeIndex: toNodeIndex,\n            index: toPortIndex\n          }\n        }\n      ]\n    }\n  });\n}\n\nfunction clearDragState(state) {\n  return update(state, {\n    isDragInProgress: {\n      $set: false\n    },\n    dragMousePosition: {\n      x: { $set: invalidMousePosition },\n      y: { $set: invalidMousePosition }\n    },\n    dragPayload: { $set: {} }\n  });\n}\n\nexport default function graphEditorReducer(\n  state = InitialState(false),\n  action\n) {\n  //  console.log(\"graphEditorReducer\", action);\n  var newState;\n  //  console.log(\"state before \", state);\n  var deltaX;\n  var deltaY;\n  var updateObject;\n  var oldSessionId;\n\n  switch (action.type) {\n    case LOAD_STATE:\n      var currentSession = state.currentSessionID;\n      newState = JSON.parse(action.data);\n      newState = update(newState, {\n        currentSessionID: { $set: currentSession }\n      });\n      break;\n    case CHANGE_ZOOM:\n      newState = update(state, { scale: { $set: action.percent / 100 } });\n      break;\n    case DELETE_SELECTED:\n      console.log(\"DELETE_SELECTED\");\n      newState = state;\n      // Delete all selected nodes and all selected connections.\n      // Remember to also delete all connections that goes from or to a deleted node.\n      // Also remember to update all indexes of connections to the new node indexes.\n      var i;\n      var connIdx;\n      var wasSomethingDeleted;\n      var wasConnectionDeleted;\n\n      // Delete selected nodes\n      wasSomethingDeleted = true;\n      while (wasSomethingDeleted) {\n        wasSomethingDeleted = false;\n        for (i = 0; i < newState.nodes.length; i++) {\n          if (newState.nodes[i].isSelected) {\n            // Delete at a specific index, no matter what value is in it\n            newState = update(newState, { nodes: { $splice: [[i, 1]] } });\n\n            // Remove connections to/from the deleted node\n            wasConnectionDeleted = true;\n            while (wasConnectionDeleted) {\n              wasConnectionDeleted = false;\n              for (\n                connIdx = 0;\n                connIdx < newState.connections.length;\n                connIdx++\n              ) {\n                if (\n                  newState.connections[connIdx].from.nodeIndex === i ||\n                  newState.connections[connIdx].to.nodeIndex === i\n                ) {\n                  newState = update(newState, {\n                    connections: { $splice: [[connIdx, 1]] }\n                  });\n                  wasConnectionDeleted = true;\n                  break;\n                }\n              }\n            }\n\n            // Decrement node indexes in connections by one if > i\n            updateObject = {};\n            // eslint-disable-next-line\n            newState.connections.map((value, index) => {\n              updateObject[index] = {\n                to: {\n                  nodeIndex: {\n                    $set:\n                      value.to.nodeIndex > i\n                        ? value.to.nodeIndex - 1\n                        : value.to.nodeIndex\n                  }\n                },\n                from: {\n                  nodeIndex: {\n                    $set:\n                      value.from.nodeIndex > i\n                        ? value.from.nodeIndex - 1\n                        : value.from.nodeIndex\n                  }\n                }\n              };\n              return null;\n            });\n            newState = update(newState, {\n              connections: {\n                ...updateObject\n              }\n            });\n\n            wasSomethingDeleted = true;\n            break;\n          }\n        }\n      }\n\n      // Delete selected connections\n      wasSomethingDeleted = true;\n      while (wasSomethingDeleted) {\n        wasSomethingDeleted = false;\n        for (i = 0; i < newState.connections.length; i++) {\n          if (newState.connections[i].isSelected) {\n            // Delete at a specific index, no matter what value is in it\n            newState = update(newState, { connections: { $splice: [[i, 1]] } });\n            wasSomethingDeleted = true;\n            break;\n          }\n        }\n      }\n      break;\n    case SELECT_NODE:\n      console.log(\"SELECT_NODE\", action.nodeIndex, state);\n      newState = update(state, {\n        nodes: {\n          [action.nodeIndex]: {\n            isSelected: { $set: true }\n          }\n        }\n      });\n      break;\n    case CREATE_NODE:\n      console.log(\"CREATE_NODE\", action.x, action.y, action);\n      newState = update(state, {\n        nodes: { $push: [state.nodeTemplates[action.index]] }\n      });\n      newState = update(newState, {\n        nodes: {\n          [newState.nodes.length - 1]: {\n            position: {\n              x: {\n                $set: action.x - state.nodeTemplates[action.index].width / 2\n              },\n              y: { $set: action.y - 10 }\n            },\n            id: { $set: action.nodeId }\n          }\n        }\n      });\n      console.log(\"state after \", newState);\n      break;\n    case DRAG_STOP:\n      newState = state;\n      break;\n    case CONFIRM_NODE:\n      console.log(\"CONFIRM_NODE\", action.nodeId, action.sessionId, action);\n      var nodeIndex = findNodeIndexWithId(state, action.nodeId);\n      console.log(\"nodeIndex\", nodeIndex);\n      newState = update(state, {\n        currentSessionID: { $set: action.sessionId },\n        nodes: {\n          [nodeIndex]: {\n            nodeConfirmedInSessionWithID: { $set: action.sessionId }\n          }\n        }\n      });\n      break;\n    case OUTPORT_DRAG_STARTED:\n      console.log(\"OUTPORT_DRAG_STARTED\", action.nodeIndex, action.portIndex);\n      newState = update(state, {\n        isDragInProgress: {\n          $set: true\n        },\n        dragPayload: {\n          $set: {\n            type: payLoadTypeOutport,\n            nodeIndex: action.nodeIndex,\n            portIndex: action.portIndex\n          }\n        }\n      });\n      break;\n    case INPORT_DROP:\n      console.log(\"INPORT_DROP\", action.nodeIndex, action.portIndex);\n      newState = state;\n      if (\n        state.isDragInProgress &&\n        state.dragPayload.type === payLoadTypeOutport\n      ) {\n        newState = connectPorts(\n          newState,\n          state.dragPayload.nodeIndex,\n          state.dragPayload.portIndex,\n          action.nodeIndex,\n          action.portIndex\n        );\n      }\n      newState = clearDragState(newState);\n      break;\n    case DRAG_CANCELLED:\n      // console.log(\"DRAG_CANCELLED\");\n      newState = clearDragState(state);\n      break;\n    case DRAG_MOUSE_POSITION:\n      // console.log(\"DRAG_MOUSE_POSITION\", action.x, action.y);\n      newState = update(state, {\n        dragMousePosition: {\n          x: { $set: action.x },\n          y: { $set: action.y }\n        }\n      });\n      break;\n    case SELECT_CONNECTION:\n      // console.log(\"SELECT_CONNECTION\", action.connectionIndex);\n      newState = update(state, {\n        connections: {\n          [action.connectionIndex]: {\n            isSelected: { $set: true }\n          }\n        }\n      });\n      break;\n    case SELECT_CLEAR:\n      // console.log(\"SELECT_CLEAR\");\n      updateObject = {};\n      state.nodes.map((value, index) => {\n        updateObject[index] = {\n          isSelected: { $set: false }\n        };\n        return null;\n      });\n      newState = update(state, {\n        nodes: {\n          ...updateObject\n        }\n      });\n\n      updateObject = {};\n      state.connections.map((value, index) => {\n        updateObject[index] = {\n          isSelected: { $set: false }\n        };\n        return null;\n      });\n      newState = update(newState, {\n        connections: {\n          ...updateObject\n        }\n      });\n      break;\n    case POSITION_NODE:\n      newState = update(state, {\n        nodes: {\n          [action.index]: {\n            position: {\n              x: { $set: action.position.x },\n              y: { $set: action.position.y }\n            }\n          }\n        }\n      });\n      break;\n    case POSITION_EVERY_OTHER_NODE:\n      deltaX = action.position.x - state.nodes[action.index].position.x;\n      deltaY = action.position.y - state.nodes[action.index].position.y;\n      updateObject = {};\n      state.nodes.map((value, index) => {\n        if (index % 2 === 0) {\n          updateObject[index] = {\n            position: {\n              x: { $set: state.nodes[index].position.x + deltaX },\n              y: { $set: state.nodes[index].position.y + deltaY }\n            }\n          };\n        }\n        return null;\n      });\n      newState = update(state, {\n        nodes: {\n          [action.index]: {\n            position: {\n              x: { $set: action.position.x },\n              y: { $set: action.position.y }\n            }\n          },\n          ...updateObject\n        }\n      });\n      break;\n    case POSITION_TEXT_NODE:\n      newState = update(state, {\n        textNode: {\n          x: { $set: action.position.x },\n          y: { $set: action.position.y }\n        }\n      });\n      break;\n    case POSITION_IMG_NODE:\n      newState = update(state, {\n        imgNode: {\n          x: { $set: action.position.x },\n          y: { $set: action.position.y }\n        }\n      });\n      break;\n    case TOGGLE_GRAPHICS:\n      var newValue = state.pureHTMLgraph ? false : true;\n      newState = update(state, {\n        pureHTMLgraph: { $set: newValue }\n      });\n      break;\n    case RESET_NORMAL:\n      oldSessionId = state.currentSessionID;\n      newState = InitialState(false);\n      newState = update(newState, {\n        currentSessionID: { $set: oldSessionId }\n      });\n      break;\n    case RESET_STRESS_TEST:\n      oldSessionId = state.currentSessionID;\n      newState = InitialState(true);\n      newState = update(newState, {\n        currentSessionID: { $set: oldSessionId }\n      });\n      break;\n    case CONNECT_PORTS:\n      console.log(\"CONNECT_PORTS reducer\");\n      newState = connectPorts(\n        state,\n        action.fromNodeIndex,\n        action.fromPortIndex,\n        action.toNodeIndex,\n        action.toPortIndex\n      );\n      newState = clearDragState(newState);\n      break;\n    case SET_NODE_TEMPLATE_LIST:\n      console.log(\"SET_NODE_TEMPLATE_LIST\");\n      newState = update(state, {\n        nodeTemplates: { $set: action.data.nodeTemplates }\n      });\n      break;\n    case SET_CURRENT_SESSIONID:\n      console.log(\"SET_CURRENT_SESSIONID\", action);\n      newState = update(state, {\n        currentSessionID: { $set: action.id }\n      });\n      break;\n    case RECONNECT_SERVER:\n      // Connection was reset in action creator\n      newState = state;\n      break;\n    default:\n      console.log(\"default \", state);\n      newState = state;\n      break;\n  }\n\n  //  console.log(\"newState  \", newState);\n  return newState;\n}\n","import React from \"react\";\n\nexport class NodeList extends React.Component {\n  shouldComponentUpdate(newProps, newState) {\n    if (this.props.templates.length !== newProps.templates.length) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button onClick={this.props.onLoadDefault}>Load default</button>\n        <button onClick={this.props.onLoadOther}>Load many</button>\n        {this.props.templates.map((value, index) => {\n          return (\n            <div\n              key={index}\n              className=\"nodelistitem\"\n              draggable\n              onDragStart={e => {\n                //console.log(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n\n                var payLoadString = JSON.stringify({\n                  type: \"CREATE_NODE\",\n                  templateIndex: index,\n                  title: value.title\n                });\n                console.log(\"drag start\", payLoadString);\n                e.dataTransfer.setData(\"text/plain\", payLoadString);\n              }}\n            >\n              {value.title.substring(0, 20)}\n            </div>\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class BezierCurve extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const {\n      isSelected,\n      connectionIndex,\n      curveColor,\n      curveWidth,\n      start,\n      end,\n      c1,\n      c2\n    } = this.props;\n    return (\n      nextProps.connectionIndex !== connectionIndex ||\n      nextProps.isSelected !== isSelected ||\n      nextProps.curveColor !== curveColor ||\n      nextProps.curveWidth !== curveWidth ||\n      nextProps.start.x !== start.x ||\n      nextProps.start.y !== start.y ||\n      nextProps.end.x !== end.x ||\n      nextProps.end.y !== end.y ||\n      nextProps.c1.x !== c1.x ||\n      nextProps.c1.y !== c1.y ||\n      nextProps.c2.x !== c2.x ||\n      nextProps.c2.y !== c2.y\n    );\n  }\n\n  render() {\n    const {\n      isSelected,\n      connectionIndex,\n      curveColor,\n      curveWidth,\n      start,\n      end,\n      c1,\n      c2,\n      onSelectConnection\n    } = this.props;\n    const curve = `M${start.x},${start.y} C${c1.x},${c1.y} ${c2.x},${c2.y} ${end.x},${end.y}`;\n\n    return (\n      <path\n        onMouseDown={e => {\n          e.stopPropagation();\n          console.log(\"BezierCurve click\");\n          onSelectConnection(connectionIndex);\n        }}\n        fill=\"none\"\n        stroke={curveColor}\n        strokeDasharray={isSelected ? 4 : 0}\n        strokeWidth={curveWidth}\n        d={curve}\n      />\n    );\n  }\n}\n\nBezierCurve.propTypes = {\n  connectionIndex: PropTypes.number.isRequired,\n  curveColor: PropTypes.string.isRequired,\n  curveWidth: PropTypes.number.isRequired,\n  onSelectConnection: PropTypes.func.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  start: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  end: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  c1: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired,\n  c2: PropTypes.exact({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }).isRequired\n};\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\n\nexport default function(props) {\n  return (\n    <Draggable\n      key={props.key}\n      scale={props.scale}\n      position={props.position}\n      onDrag={props.onDrag}\n    >\n      <div className=\"box no-cursor\">\n        <svg className=\"graphics inport\">\n          <circle\n            className=\"circle\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            cx=\"15\"\n            cy=\"15\"\n            r=\"15\"\n            style={{\n              stroke: \"#000000\",\n              strokeWidth: 3,\n              fill: \"#66ff66\"\n            }}\n            opacity=\".7\"\n          />\n        </svg>\n\n        <div className=\"drag\">{props.title}</div>\n        <h3>{/* <InlineMath>\\int_0^\\infty x^2 dx</InlineMath> */}</h3>\n\n        <svg className=\"graphics outport\" width=\"30\" height=\"30\">\n          <circle\n            className=\"circle\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            cx=\"15\"\n            cy=\"15\"\n            r=\"15\"\n            style={{\n              stroke: \"#000000\",\n              strokeWidth: 3,\n              fill: \"#ff0000\"\n            }}\n            opacity=\".7\"\n          />\n        </svg>\n      </div>\n    </Draggable>\n  );\n}\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\nimport \"./InOutNode.css\";\nimport PropTypes from \"prop-types\";\n\nvar rowHeight = 16;\nvar portWidth = 15;\n\nfunction InPort(props) {\n  const { name, nodeIndex, portIndex, onConnect } = props;\n  return (\n    <div className=\"port_area in\">\n      <div\n        className=\"port noselect\"\n        // ??? Add onTouchUp onTouchMove onTouchDown that do the same things to support phones.\n        onMouseUp={e => {\n          e.stopPropagation();\n          console.log(\"mouse up in in port\");\n          props.onInportDrop(nodeIndex, portIndex);\n        }}\n        onDrop={e => {\n          if (e.dataTransfer !== null) {\n            var textData = e.dataTransfer.getData(\"text\");\n            if (textData !== null && textData !== \"\") {\n              var payLoad = JSON.parse(textData);\n              if (payLoad !== null && payLoad !== \"\") {\n                console.log(\"payLoad\", payLoad);\n                if (payLoad.type === \"CONNECT\") {\n                  console.log(\n                    `connect node ${payLoad.nodeIndex}:${payLoad.outPortIndex} and node ${nodeIndex}:${portIndex}`\n                  );\n                  onConnect(\n                    payLoad.nodeIndex,\n                    payLoad.outPortIndex,\n                    nodeIndex,\n                    portIndex\n                  );\n                } else {\n                  console.log(\"invalid drop\");\n                }\n                e.preventDefault();\n              }\n            }\n          }\n        }}\n        onDragOver={e => {\n          e.preventDefault();\n        }}\n      >\n        →\n      </div>\n      <header className=\"porttext in noselect\">{name}</header>\n      <div className=\"noport noselect\"></div>\n    </div>\n  );\n}\n\nfunction OutPort(props) {\n  const { name } = props;\n  return (\n    <div className=\"port_area out\">\n      <div className=\"noport noselect\"></div>\n      <header className=\"porttext out noselect\">{name}</header>\n      <div\n        className=\"port noselect\"\n        onMouseDown={e => {\n          console.log(\"outport onmousedown. Begin out port drag\");\n          props.onOutportDragStarted();\n        }}\n      >\n        →\n      </div>\n    </div>\n  );\n}\n\nexport function inPortRelativePosition(node, inPortIndex) {\n  return {\n    x: portWidth / 2,\n    y: rowHeight + rowHeight * inPortIndex + rowHeight / 2\n  };\n}\n\nexport function outPortRelativePosition(node, outPortIndex) {\n  return {\n    x: node.width - portWidth / 2,\n    y:\n      rowHeight +\n      node.inputPorts.length * rowHeight +\n      outPortIndex * rowHeight +\n      rowHeight / 2\n  };\n}\n\nexport class InOutNode extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const {\n      nodeIndex,\n      scale,\n      positionX,\n      positionY,\n      width,\n      isSelected,\n      currentSessionID,\n      nodeConfirmedInSessionWithID\n    } = this.props;\n    return (\n      nextProps.nodeIndex !== nodeIndex ||\n      nextProps.currentSessionID !== currentSessionID ||\n      nextProps.scale !== scale ||\n      nextProps.nodeConfirmedInSessionWithID !== nodeConfirmedInSessionWithID ||\n      nextProps.positionX !== positionX ||\n      nextProps.positionY !== positionY ||\n      nextProps.width !== width ||\n      nextProps.isSelected !== isSelected\n    );\n  }\n\n  render() {\n    const {\n      title,\n      nodeIndex,\n      currentSessionID,\n      nodeConfirmedInSessionWithID,\n      scale,\n      positionX,\n      positionY,\n      onConnect,\n      onDrag,\n      width,\n      inputPorts,\n      outputPorts,\n      isSelected,\n      onSelectNode,\n      onOutportDragStarted,\n      onInportDrop,\n      onDragStop\n    } = this.props;\n    var classes = [\"node\"];\n    if (isSelected) {\n      classes.push(\"nodeselected\");\n    }\n    var isConfirmedInThisSession =\n      currentSessionID === nodeConfirmedInSessionWithID;\n    if (!isConfirmedInThisSession) {\n      classes.push(\"notconfirmed\");\n    }\n    return (\n      <Draggable\n        scale={scale}\n        position={{ x: positionX, y: positionY }}\n        onDrag={onDrag}\n        onStop={onDragStop}\n        handle=\"header\"\n        onMouseDown={e => {\n          e.stopPropagation();\n          console.log(\"node clicked\");\n          onSelectNode(nodeIndex);\n        }}\n      >\n        <div\n          className={classes.join(\" \")}\n          style={{\n            height: `${(inputPorts.length + outputPorts.length + 1) *\n              (rowHeight - 1)}px`,\n            width: `${width}px`\n          }}\n        >\n          <div className=\"main_area\">\n            <div className=\"addin noselect\">+</div>\n            <header className=\"nodetext noselect\">{title}</header>\n            <div className=\"addout noselect\">+</div>\n          </div>\n          {inputPorts.map((port, portIndex) => {\n            return (\n              <InPort\n                key={portIndex}\n                name={port.name}\n                nodeIndex={nodeIndex}\n                portIndex={portIndex}\n                onConnect={onConnect}\n                onInportDrop={onInportDrop}\n              />\n            );\n          })}\n\n          {outputPorts.map((port, portIndex) => {\n            return (\n              <OutPort\n                key={portIndex}\n                name={port.name}\n                nodeIndex={nodeIndex}\n                portIndex={portIndex}\n                onOutportDragStarted={() => {\n                  console.log(\"onOutportDragStarted\");\n                  onOutportDragStarted(nodeIndex, portIndex);\n                }}\n              />\n            );\n          })}\n        </div>\n      </Draggable>\n    );\n  }\n}\n\nInOutNode.propTypes = {\n  title: PropTypes.string.isRequired,\n  nodeIndex: PropTypes.number.isRequired,\n  currentSessionID: PropTypes.string.isRequired,\n  nodeConfirmedInSessionWithID: PropTypes.string.isRequired,\n  scale: PropTypes.number.isRequired,\n  positionX: PropTypes.number.isRequired,\n  positionY: PropTypes.number.isRequired,\n  inputPorts: PropTypes.any.isRequired,\n  outputPorts: PropTypes.any.isRequired,\n  width: PropTypes.number.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onDrag: PropTypes.func.isRequired,\n  onDragStop: PropTypes.func.isRequired,\n  onConnect: PropTypes.func.isRequired,\n  onSelectNode: PropTypes.func.isRequired,\n  onOutportDragStarted: PropTypes.func.isRequired,\n  onInportDrop: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { InlineMath } from \"react-katex\";\nimport BezierCurve from \"./BezierCurve\";\nimport {\n  positionNodeAction,\n  positionEveryOtherNodeAction,\n  positionTextNodeAction,\n  positionImgNodeAction,\n  connectPortsAction,\n  selectNodeAction,\n  selectConnectionAction,\n  selectClearAction,\n  createNodeAction,\n  outportDragStartedAction,\n  dragCancelledAction,\n  inportDropAction,\n  dragMousePositionAction,\n  dragStopAction\n} from \"../redux/actions\";\nimport HTMLNode from \"./HTMLNode\";\nimport {\n  InOutNode,\n  inPortRelativePosition,\n  outPortRelativePosition\n} from \"./InOutNode\";\nimport { payLoadTypeOutport } from \"../redux/reducers\";\nimport { invalidMousePosition } from \"../InitialState\";\n\nclass GraphicsAreaPureHTML extends React.Component {\n  render() {\n    return (\n      <div\n        id=\"nodearea\"\n        className=\"nodearea bgpattern\"\n        onMouseDown={e => {\n          console.log(\"graphicsarea clicked\");\n          this.props.onSelectClear();\n        }}\n        onMouseUp={this.props.onDragCancelled}\n        onMouseMove={e => {\n          var rect = document\n            .getElementById(\"nodearea\")\n            .getBoundingClientRect();\n          var x = (e.clientX - rect.left) / this.props.scale; //x position within the element.\n          var y = (e.clientY - rect.top) / this.props.scale; //y position within the element.\n\n          if (this.props.isDragInProgress) {\n            // console.log(\"mouse move\", x, y);\n            this.props.onDragMousePosition(x, y);\n          }\n        }}\n        onDragOver={e => {\n          e.preventDefault();\n        }}\n        onDrop={e => {\n          if (e.dataTransfer != null) {\n            var textData = e.dataTransfer.getData(\"text\");\n            console.log(\"textData\", textData);\n            if (textData != null && textData !== \"\") {\n              var payLoad = JSON.parse(textData);\n              console.log(\"dropped on nodearea\", e, e.clientX, e.clientY);\n              if (payLoad.type === \"CREATE_NODE\") {\n                var rect = e.target.getBoundingClientRect();\n                var x = (e.clientX - rect.left) / this.props.scale; //x position within the element.\n                var y = (e.clientY - rect.top) / this.props.scale; //y position within the element.\n\n                this.props.onCreateNode(\n                  x,\n                  y,\n                  payLoad.templateIndex,\n                  payLoad.title\n                );\n              }\n            }\n          }\n        }}\n      >\n        <div\n          className=\"graphicsarea\"\n          style={{ transform: \"scale(\" + this.props.scale + \")\" }}\n        >\n          <svg\n            className=\"arrowsvg\"\n            style={{ position: \"relative\", top: \"0px\", left: \"0px\" }}\n          >\n            {// Draw a curve during drag\n            (() => {\n              if (\n                this.props.isDragInProgress &&\n                this.props.dragPayload.type === payLoadTypeOutport &&\n                this.props.dragMousePosition.x !== invalidMousePosition\n              ) {\n                var fromNode = this.props.nodes[\n                  this.props.dragPayload.nodeIndex\n                ];\n                var fromX =\n                  fromNode.position.x +\n                  outPortRelativePosition(\n                    fromNode,\n                    this.props.dragPayload.portIndex\n                  ).x;\n                var fromY =\n                  fromNode.position.y +\n                  outPortRelativePosition(\n                    fromNode,\n                    this.props.dragPayload.portIndex\n                  ).y;\n                var toX = this.props.dragMousePosition.x;\n                var toY = this.props.dragMousePosition.y;\n                return (\n                  <BezierCurve\n                    key={0}\n                    isSelected={false}\n                    connectionIndex={0}\n                    onSelectConnection={() => {}}\n                    start={{ x: fromX, y: fromY }}\n                    end={{ x: toX, y: toY }}\n                    c1={{\n                      x: fromX + (fromNode.width * 3) / 4,\n                      y: fromY\n                    }}\n                    c2={{\n                      x: toX - (fromNode.width * 3) / 4,\n                      y: toY\n                    }}\n                    curveColor=\"black\"\n                    curveWidth={3}\n                  />\n                );\n              }\n            })()}\n\n            {// Draw all connections between nodes\n            this.props.connections.map((key, index) => {\n              var fromNode = this.props.nodes[key.from.nodeIndex];\n              var toNode = this.props.nodes[key.to.nodeIndex];\n              var fromX =\n                fromNode.position.x +\n                outPortRelativePosition(fromNode, key.from.index).x;\n              var fromY =\n                fromNode.position.y +\n                outPortRelativePosition(fromNode, key.from.index).y;\n              var toX =\n                toNode.position.x +\n                inPortRelativePosition(toNode, key.to.index).x;\n              var toY =\n                toNode.position.y +\n                inPortRelativePosition(toNode, key.to.index).y;\n              return (\n                <BezierCurve\n                  key={index}\n                  isSelected={key.isSelected}\n                  connectionIndex={index}\n                  onSelectConnection={this.props.onSelectConnection}\n                  start={{ x: fromX, y: fromY }}\n                  end={{ x: toX, y: toY }}\n                  c1={{\n                    x: fromX + (fromNode.width * 3) / 4,\n                    y: fromY\n                  }}\n                  c2={{\n                    x: toX - (toNode.width * 3) / 4,\n                    y: toY\n                  }}\n                  curveColor=\"black\"\n                  curveWidth={3}\n                />\n              );\n            })}\n          </svg>\n\n          {this.props.nodes.map((key, index) =>\n            key.htmlNode ? (\n              <HTMLNode\n                title={key.title}\n                key={index}\n                scale={this.props.scale}\n                position={key.position}\n                onDrag={(e, position) => {\n                  this.props.onSetPosition(index, position, false);\n                }}\n              />\n            ) : (\n              <InOutNode\n                title={key.title}\n                key={index}\n                nodeIndex={index}\n                currentSessionID={this.props.currentSessionID}\n                nodeConfirmedInSessionWithID={key.nodeConfirmedInSessionWithID}\n                scale={this.props.scale}\n                positionX={key.position.x}\n                positionY={key.position.y}\n                inputPorts={key.inputPorts}\n                outputPorts={key.outputPorts}\n                width={key.width}\n                isSelected={key.isSelected}\n                onDrag={(e, position) => {\n                  this.props.onSetPosition(\n                    index,\n                    position,\n                    this.props.stressTest\n                  );\n                }}\n                onDragStop={this.props.onDragStop}\n                onConnect={this.props.onConnect}\n                onSelectNode={this.props.onSelectNode}\n                onOutportDragStarted={this.props.onOutportDragStarted}\n                onInportDrop={(nodeIndex, portIndex) => {\n                  this.props.onInportDrop(\n                    nodeIndex,\n                    portIndex,\n                    this.props.isDragInProgress,\n                    this.props.dragPayload\n                  );\n                }}\n              />\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  nodes: state.present.nodes,\n  connections: state.present.connections,\n  scale: state.present.scale,\n  currentSessionID: state.present.currentSessionID,\n  textNode: state.present.textNode,\n  imgNode: state.present.imgNode,\n  stressTest: state.present.stressTest,\n  isDragInProgress: state.present.isDragInProgress,\n  dragPayload: state.present.dragPayload,\n  dragMousePosition: state.present.dragMousePosition\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetPosition: (index, position, stressTest) => {\n    if (stressTest) {\n      dispatch(positionEveryOtherNodeAction(index, position));\n    } else {\n      dispatch(positionNodeAction(index, position));\n    }\n  },\n  onSetTextNodePosition: position => dispatch(positionTextNodeAction(position)),\n  onSetImgNodePosition: position => dispatch(positionImgNodeAction(position)),\n  onConnect: (fromNodeIndex, fromPortIndex, toNodeIndex, toPortIndex) => {\n    console.log(\"onConnected\");\n    dispatch(\n      connectPortsAction(fromNodeIndex, fromPortIndex, toNodeIndex, toPortIndex)\n    );\n  },\n  onSelectNode: nodeIndex => dispatch(selectNodeAction(nodeIndex)),\n  onSelectConnection: connectionIndex =>\n    dispatch(selectConnectionAction(connectionIndex)),\n  onSelectClear: () => dispatch(selectClearAction()),\n  onCreateNode: (x, y, index, title) =>\n    dispatch(createNodeAction(x, y, index, title)),\n  onOutportDragStarted: (nodeIndex, portIndex) => {\n    dispatch(outportDragStartedAction(nodeIndex, portIndex));\n  },\n  onInportDrop: (nodeIndex, portIndex, isDragInProgress, dragPayload) =>\n    dispatch(\n      inportDropAction(nodeIndex, portIndex, isDragInProgress, dragPayload)\n    ),\n  onDragStop: () => dispatch(dragStopAction()),\n  onDragCancelled: () => dispatch(dragCancelledAction()),\n  onDragMousePosition: (x, y) => dispatch(dragMousePositionAction(x, y))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GraphicsAreaPureHTML);\n","import React from \"react\";\nimport $ from \"jquery\";\nwindow.jQuery = window.$ = $;\nrequire(\"jqueryui\");\nvar draw2d = require(\"draw2d\");\n\nexport default class CanvasDraw2D extends React.Component {\n  componentDidMount() {\n    this.renderCanvas(\"mycanvasdraw2d\");\n  }\n\n  renderCanvas(canvasId) {\n    var canvas = new draw2d.Canvas(canvasId);\n\n    // create and add two nodes which contains Ports (In and OUT)\n    //\n    var start = new draw2d.shape.node.Start();\n    var end = new draw2d.shape.node.End();\n\n    // ...add it to the canvas\n    canvas.add(start, 50, 50);\n    canvas.add(new draw2d.shape.node.Start(), 50, 250);\n    canvas.add(end, 230, 150);\n\n    // Create a Connection and connect the Start and End node\n    //\n    var c = new draw2d.Connection();\n    c.setRouter(new draw2d.layout.connection.SplineConnectionRouter());\n\n    // Set the endpoint decorations for the connection\n    //\n    c.setSourceDecorator(new draw2d.decoration.connection.BarDecorator());\n    c.setTargetDecorator(new draw2d.decoration.connection.DiamondDecorator());\n    // Connect the endpoints with the start and end port\n    //\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n\n    // and finally add the connection to the canvas\n    canvas.add(c);\n\n    var figure = new draw2d.shape.analog.OpAmp();\n    canvas.add(figure, 350, 110);\n\n    var p1 = new draw2d.shape.basic.Polygon();\n    var p2 = new draw2d.shape.basic.Polygon();\n\n    canvas.add(p1, 450, 150);\n    canvas.add(p2, 450, 200);\n\n    p2.setBackgroundColor(\"#f0f000\");\n    p2.setAlpha(0.7);\n    p2.setDimension(100, 60);\n\n    canvas.setCurrentSelection(p2);\n\n    var shape = new draw2d.shape.basic.Text();\n\n    shape.setText(\"This is a simple text with some loooooong word in.\");\n    shape.setBackgroundColor(\"#f0f000\");\n\n    canvas.add(shape, 550, 10);\n\n    var lshape = new draw2d.shape.basic.Label();\n\n    lshape.setText(\"This is a label.\");\n    lshape.setBackgroundColor(\"#f0f000\");\n\n    canvas.add(lshape, 350, 70);\n\n    var pie = new draw2d.shape.diagram.Pie(80, 80);\n    pie.setWidth(100);\n    pie.setData([30, 60, 122, 4]);\n    canvas.add(pie, 600, 160);\n\n    var postit = new draw2d.shape.note.PostIt();\n    postit.installEditor(new draw2d.ui.LabelInplaceEditor());\n    postit.setColor(\"#000000\");\n    postit.setPadding(20);\n\n    postit.setText(\"This is simple sticky note\\nDouble click to edit.\");\n\n    canvas.add(postit, 700, 10);\n\n    var label = new draw2d.shape.basic.Label();\n\n    label.installEditor(new draw2d.ui.LabelInplaceEditor());\n    label.setText(\"Double click me to edit\");\n\n    canvas.add(label, 50, 10);\n\n    // Override the default connection type. This is used during drag&drop operations of ports.\n    //\n    draw2d.Connection.createConnection = function(sourcePort, targetPort) {\n      // return my special kind of connection\n      var con = new draw2d.Connection();\n      con.setRouter(new draw2d.layout.connection.FanConnectionRouter());\n      return con;\n    };\n\n    // create and add two nodes which contains Ports (In and OUT)\n    //\n    start = new draw2d.shape.node.Start();\n    end = new draw2d.shape.node.End();\n\n    // ...add it to the canvas\n    canvas.add(start, 50, 250);\n    canvas.add(end, 230, 280);\n\n    // first Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // second Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // third Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // fourth Connection\n    //\n    c = draw2d.Connection.createConnection();\n    c.setSource(start.getOutputPort(0));\n    c.setTarget(end.getInputPort(0));\n    canvas.add(c);\n\n    // Zoom mose wheel support\n    canvas.installEditPolicy(new draw2d.policy.canvas.WheelZoomPolicy());\n    shape = new draw2d.shape.basic.Text({\n      text: \"Use the mouse wheel + SHIFT to zoom\"\n    });\n\n    canvas.add(shape, 400, 300);\n\n    // Register some callbacks\n    canvas.on(\"select\", function(emitter, event) {\n      if (event.figure !== null) {\n        console.log(\"figure selected\");\n      } else {\n        console.log(\"selection cleared\");\n      }\n    });\n\n    $(\"#mycanvasdraw2d\").click(function(ev) {\n      console.log(\"Mouse click:\" + ev.clientX + \",\" + ev.clientY);\n    });\n\n    // Log state to console\n    var writer = new draw2d.io.json.Writer();\n    writer.marshal(canvas, json => console.log(json));\n\n    // Custom shape\n    {\n      class CustomFigure extends draw2d.SVGFigure {\n        constructor(attr) {\n          super(attr);\n\n          this.index = 0;\n          this.svgs = [];\n\n          this.svgs.push(\n            '<svg xmlns=\"http://www.w3.org/2000/svg\">' +\n              '  <path stroke=\"#000\" fill=\"#FFF\" stroke-miterlimit=\"4\" d=\"m0,49.842l0,-49.742l49.982,0l0,49.742l-49.982,0z\" id=\"polygon3873\"/>' +\n              '  <text text-anchor=\"middle\" fill=\"#000000\" font-family=\"Sans-serif\" x=\"24.81563\" y=\"26.50938\" xml:space=\"preserve\" font-size=\"8px\" id=\"svg_1\">Click me</text>' +\n              \"</svg>\"\n          );\n\n          this.svgs.push(\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">' +\n              '<rect x=\"14\" y=\"23\" width=\"20\" height=\"20\" fill=\"lime\" stroke=\"black\" />' +\n              \"</svg>\"\n          );\n\n          this.on(\n            \"click\",\n            function() {\n              this.index = ++this.index % this.svgs.length;\n              this.setSVG(this.svgs[this.index], 500);\n            },\n            this\n          );\n        }\n\n        getSVG() {\n          return this.svgs[0];\n        }\n      }\n\n      var fig = new CustomFigure();\n\n      canvas.add(fig, 100, 100);\n    }\n  }\n\n  render() {\n    return <div id=\"mycanvasdraw2d\"></div>;\n  }\n}\n\nexport class GraphicsAreaDraw2D extends React.Component {\n  render() {\n    return (\n      <div className=\"graphicsarea\" style={{ transform: \"scale(1)\" }}>\n        <CanvasDraw2D className=\"canvas2darea\" />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { websocketClientSetup } from \"./websocketClientUtils\";\n\nimport \"./App.css\";\nimport \"./NodeList.css\";\nimport { NodeList } from \"./components/NodeList\";\n\nimport GraphicsAreaPureHTML from \"./components/GraphicsAreaPureHTML\";\nimport GraphicsAreaDraw2D from \"./components/CanvasDraw2D\";\n\nimport \"katex/dist/katex.min.css\";\nimport FileSaver from \"file-saver\";\n\nimport TopBar from \"./components/TopBar\";\nimport {\n  zoomAction,\n  deleteSelectedAction,\n  toggleGraphicsLibraryAction,\n  resetStateNormalAction,\n  resetStateStressTestAction,\n  loadDefaultNodeTemplatesAsyncAction,\n  loadOtherNodeTemplatesAsyncAction,\n  reconnectAction,\n  syncAction,\n  loadStateFromStringAction\n} from \"./redux/actions\";\nimport { ActionCreators } from \"redux-undo\";\n\nvar reader = new FileReader();\nvar file;\n\nclass App extends React.Component {\n  componentDidMount() {\n    document.body.addEventListener(\"keydown\", e => {\n      console.log(\"key down \", e, this);\n      if (e.key === \"Backspace\" || e.key === \"Delete\") {\n        this.props.deleteSelected();\n      }\n    });\n\n    websocketClientSetup();\n  }\n\n  componentWillUnmount() {\n    //document.body.removeEventListener(\"keydown\", ???);\n  }\n\n  render() {\n    return (\n      <div className=\"App noselect\">\n        <div className=\"messagerow\">\n          {this.props.state.currentSessionID === \"\"\n            ? \"Server disconnected\"\n            : \"Server online\"}\n          {this.props.state.isDragInProgress === true\n            ? \" Draggning \" + this.props.state.dragPayload.type\n            : \"\"}\n        </div>\n        <div\n          className=\"buttonrow\"\n          style={{ display: \"flex\", justifyContent: \"space-around\" }}\n        >\n          <button onClick={this.props.reconnect}>New session</button>\n          <button onClick={this.props.onUndo}>\n            Undo ({this.props.sizePast})\n          </button>\n          <button onClick={this.props.onRedo}>\n            Redo ({this.props.sizeFuture})\n          </button>\n          <button\n            onClick={() => {\n              var input = document.createElement(\"input\");\n              input.type = \"file\";\n\n              input.onchange = e => {\n                console.log(\"File loaded onchange\");\n                // getting a hold of the file reference\n                file = e.target.files[0];\n\n                // setting up the reader\n                reader.readAsText(file, \"UTF-8\");\n\n                // here we tell the reader what to do when it's done reading...\n                reader.onload = readerEvent => {\n                  console.log(\"File loaded\");\n                  var content = readerEvent.target.result; // this is the content!\n                  this.props.onLoadStateFromString(content);\n                };\n              };\n              input.click();\n            }}\n          >\n            Load state\n          </button>\n          <button\n            onClick={() => {\n              var stateString = JSON.stringify(this.props.state, null, 2);\n              var blob = new Blob([stateString], {\n                type: \"text/plain;charset=utf-8\"\n              });\n              FileSaver.saveAs(blob, \"state.json\");\n            }}\n          >\n            Save state\n          </button>\n\n          <button\n            onClick={() =>\n              this.props.sync(\n                this.props.state.currentSessionID,\n                this.props.state.nodes\n              )\n            }\n          >\n            Sync\n          </button>\n          <button onClick={this.props.resetStateNormal}>Some nodes</button>\n          <button onClick={this.props.resetStateStressTest}>Stress test</button>\n          <button onClick={this.props.toggleGraphicsLibrary}>\n            Pure HTML / Draw2D\n          </button>\n        </div>\n        <TopBar\n          className=\"topbar\"\n          showControls={this.props.state.pureHTMLgraph}\n          scale={this.props.state.scale * 100}\n          state={this.props.state}\n          onChange={this.props.onZoomChange}\n        />\n        <div className=\"editor\">\n          <div className=\"nodelist\">\n            <NodeList\n              templates={this.props.state.nodeTemplates}\n              onLoadDefault={this.props.onLoadDefault}\n              onLoadOther={this.props.onLoadOther}\n            />\n          </div>\n          {this.props.state.pureHTMLgraph ? (\n            <GraphicsAreaPureHTML />\n          ) : (\n            <GraphicsAreaDraw2D />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state: state.present,\n  sizePast: state.past.length,\n  sizeFuture: state.future.length\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteSelected: () => dispatch(deleteSelectedAction()),\n  onZoomChange: scale => dispatch(zoomAction(scale)),\n  toggleGraphicsLibrary: () => dispatch(toggleGraphicsLibraryAction()),\n  resetStateNormal: () => dispatch(resetStateNormalAction()),\n  resetStateStressTest: () => dispatch(resetStateStressTestAction()),\n  onLoadDefault: () => dispatch(loadDefaultNodeTemplatesAsyncAction()),\n  onLoadOther: () => dispatch(loadOtherNodeTemplatesAsyncAction()),\n  reconnect: () => dispatch(reconnectAction()),\n  sync: (currentSessionID, nodes) => {\n    dispatch(syncAction(currentSessionID, nodes));\n  },\n  onLoadStateFromString: string => dispatch(loadStateFromStringAction(string)),\n  onUndo: () => dispatch(ActionCreators.undo()),\n  onRedo: () => dispatch(ActionCreators.redo())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport \"rc-slider/assets/index.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\n\nimport Tooltip from \"rc-tooltip\";\nimport Slider from \"rc-slider\";\nimport { connect } from \"react-redux\";\n\nconst Handle = Slider.Handle;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst TopBar = props => {\n  if (props.showControls) {\n    return (\n      <div className=\"topbar\">\n        <div className=\"zoom\">\n          <Slider\n            min={20}\n            max={150}\n            value={props.scale}\n            handle={handle}\n            onChange={props.onChange}\n          />\n        </div>\n      </div>\n    );\n  } else {\n    return <div className=\"topbar\"></div>;\n  }\n};\n\nexport default connect()(TopBar);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport graphEditorReducer from \"./redux/reducers\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport thunk from \"redux-thunk\";\nimport undoable from \"redux-undo\";\nimport { groupByActionTypes, excludeAction } from \"redux-undo\";\nimport { createLogger } from \"redux-logger\";\nimport {\n  POSITION_NODE,\n  DRAG_MOUSE_POSITION,\n  CONFIRM_NODE,\n  DRAG_CANCELLED,\n  SELECT_CLEAR,\n  OUTPORT_DRAG_STARTED,\n  CHANGE_ZOOM,\n  INPORT_DROP,\n  SELECT_NODE,\n  POSITION_EVERY_OTHER_NODE,\n  DRAG_STOP\n} from \"./redux/actions\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst logger = createLogger({\n  collapsed: (getState, action) =>\n    action.type === POSITION_NODE || action.type === DRAG_MOUSE_POSITION\n});\n\nexport const store = createStore(\n  undoable(graphEditorReducer, {\n    groupBy: groupByActionTypes([POSITION_EVERY_OTHER_NODE, CHANGE_ZOOM]),\n    filter: excludeAction([\n      POSITION_NODE,\n      CONFIRM_NODE,\n      OUTPORT_DRAG_STARTED,\n      INPORT_DROP,\n      DRAG_MOUSE_POSITION,\n      DRAG_CANCELLED,\n      SELECT_CLEAR,\n      SELECT_NODE\n    ])\n  }),\n  composeEnhancer(applyMiddleware(thunk, logger))\n\n  // other store enhancers if any\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}